<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_peripherals_2mfrc522_8h_source" xml:lang="en-US">
<title>MFRC522.h</title>
<indexterm><primary>src/peripherals/MFRC522.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//&#32;Copyright&#32;(C)&#32;2021&#32;twyleg</emphasis>
2 <emphasis role="preprocessor">#pragma&#32;once</emphasis>
3 
4 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_peripherals_2bcm2835_2ispi_8h">bcm2835/ispi.h</link>&quot;</emphasis>
5 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_peripherals_2bcm2835_2igpio_8h">bcm2835/igpio.h</link>&quot;</emphasis>
6 
7 <emphasis role="preprocessor">#include&#32;&lt;stdint.h&gt;</emphasis>
8 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
9 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
10 
11 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacemfrc522">mfrc522</link>&#32;{
12 
13 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
14 
15 <emphasis role="keyword">typedef</emphasis>&#32;uint16_t&#32;<link linkend="_namespacemfrc522_1a6e204398594060a281d6f9157a612549">word</link>;
16 
17 <emphasis role="comment">//&#32;Firmware&#32;data&#32;for&#32;self-test</emphasis>
18 <emphasis role="comment">//&#32;Reference&#32;values&#32;based&#32;on&#32;firmware&#32;version;&#32;taken&#32;from&#32;16.1.1&#32;in&#32;spec.</emphasis>
19 <emphasis role="comment">//&#32;Version&#32;1.0</emphasis>
20 
21 <emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="_namespacemfrc522_1a749840d7381e94883d25086e7fc02a5c">MFRC522_firmware_referenceV1_0</link>[]&#32;&#32;=&#32;{
22 &#32;&#32;&#32;&#32;0x00,&#32;0xC6,&#32;0x37,&#32;0xD5,&#32;0x32,&#32;0xB7,&#32;0x57,&#32;0x5C,
23 &#32;&#32;&#32;&#32;0xC2,&#32;0xD8,&#32;0x7C,&#32;0x4D,&#32;0xD9,&#32;0x70,&#32;0xC7,&#32;0x73,
24 &#32;&#32;&#32;&#32;0x10,&#32;0xE6,&#32;0xD2,&#32;0xAA,&#32;0x5E,&#32;0xA1,&#32;0x3E,&#32;0x5A,
25 &#32;&#32;&#32;&#32;0x14,&#32;0xAF,&#32;0x30,&#32;0x61,&#32;0xC9,&#32;0x70,&#32;0xDB,&#32;0x2E,
26 &#32;&#32;&#32;&#32;0x64,&#32;0x22,&#32;0x72,&#32;0xB5,&#32;0xBD,&#32;0x65,&#32;0xF4,&#32;0xEC,
27 &#32;&#32;&#32;&#32;0x22,&#32;0xBC,&#32;0xD3,&#32;0x72,&#32;0x35,&#32;0xCD,&#32;0xAA,&#32;0x41,
28 &#32;&#32;&#32;&#32;0x1F,&#32;0xA7,&#32;0xF3,&#32;0x53,&#32;0x14,&#32;0xDE,&#32;0x7E,&#32;0x02,
29 &#32;&#32;&#32;&#32;0xD9,&#32;0x0F,&#32;0xB5,&#32;0x5E,&#32;0x25,&#32;0x1D,&#32;0x29,&#32;0x79
30 };
31 
32 <emphasis role="comment">//&#32;Version&#32;2.0</emphasis>
33 <emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="_namespacemfrc522_1aaca23097cb085bc7fb1336ced2e0f592">MFRC522_firmware_referenceV2_0</link>[]&#32;=&#32;{
34 &#32;&#32;&#32;&#32;0x00,&#32;0xEB,&#32;0x66,&#32;0xBA,&#32;0x57,&#32;0xBF,&#32;0x23,&#32;0x95,
35 &#32;&#32;&#32;&#32;0xD0,&#32;0xE3,&#32;0x0D,&#32;0x3D,&#32;0x27,&#32;0x89,&#32;0x5C,&#32;0xDE,
36 &#32;&#32;&#32;&#32;0x9D,&#32;0x3B,&#32;0xA7,&#32;0x00,&#32;0x21,&#32;0x5B,&#32;0x89,&#32;0x82,
37 &#32;&#32;&#32;&#32;0x51,&#32;0x3A,&#32;0xEB,&#32;0x02,&#32;0x0C,&#32;0xA5,&#32;0x00,&#32;0x49,
38 &#32;&#32;&#32;&#32;0x7C,&#32;0x84,&#32;0x4D,&#32;0xB3,&#32;0xCC,&#32;0xD2,&#32;0x1B,&#32;0x81,
39 &#32;&#32;&#32;&#32;0x5D,&#32;0x48,&#32;0x76,&#32;0xD5,&#32;0x71,&#32;0x61,&#32;0x21,&#32;0xA9,
40 &#32;&#32;&#32;&#32;0x86,&#32;0x96,&#32;0x83,&#32;0x38,&#32;0xCF,&#32;0x9D,&#32;0x5B,&#32;0x6D,
41 &#32;&#32;&#32;&#32;0xDC,&#32;0x15,&#32;0xBA,&#32;0x3E,&#32;0x7D,&#32;0x95,&#32;0x3B,&#32;0x2F
42 };
43 
44 
45 
46 <emphasis role="keyword">class&#32;</emphasis>MFRC522&#32;{
47 <emphasis role="keyword">public</emphasis>:
48 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MFRC522&#32;registers.&#32;Described&#32;in&#32;chapter&#32;9&#32;of&#32;the&#32;datasheet.</emphasis>
49 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;When&#32;using&#32;SPI&#32;all&#32;addresses&#32;are&#32;shifted&#32;one&#32;bit&#32;left&#32;in&#32;the&#32;&quot;SPI&#32;address&#32;uint8_t&quot;&#32;(section&#32;8.1.2.3)</emphasis>
50 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11">PCD_Register</link>&#32;{
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Page&#32;0:&#32;Command&#32;and&#32;status</emphasis>
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x00&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;future&#32;use</emphasis>
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7">CommandReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x01&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;starts&#32;and&#32;stops&#32;command&#32;execution</emphasis>
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2f50c41848a90f7cdf4f0800dcdd43a9">ComIEnReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x02&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;enable&#32;and&#32;disable&#32;interrupt&#32;request&#32;control&#32;bits</emphasis>
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab0eea90d8cadb6473795b6afa2403916">DivIEnReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x03&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;enable&#32;and&#32;disable&#32;interrupt&#32;request&#32;control&#32;bits</emphasis>
56 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a36d880f3febe92018582ed4d147ee406">ComIrqReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x04&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;interrupt&#32;request&#32;bits</emphasis>
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a8aa211e282986d84b2e47d67b5bf6337">DivIrqReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x05&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;interrupt&#32;request&#32;bits</emphasis>
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6803bc2b2af9b1b60d4b33f25e29a0a">ErrorReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x06&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;error&#32;bits&#32;showing&#32;the&#32;error&#32;status&#32;of&#32;the&#32;last&#32;command&#32;executed</emphasis>
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a37caf50e5570a887ebc9958dea7fcea0">Status1Reg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x07&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;communication&#32;status&#32;bits</emphasis>
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a77750cd41045db5305665ccfceb7ca77">Status2Reg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x08&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;receiver&#32;and&#32;transmitter&#32;status&#32;bits</emphasis>
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b">FIFODataReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x09&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;input&#32;and&#32;output&#32;of&#32;64&#32;byte&#32;FIFO&#32;buffer</emphasis>
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac">FIFOLevelReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0A&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;number&#32;of&#32;bytes&#32;stored&#32;in&#32;the&#32;FIFO&#32;buffer</emphasis>
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adba422f51894c1b1d644e6f7d77c8f19">WaterLevelReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0B&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;level&#32;for&#32;FIFO&#32;underflow&#32;and&#32;overflow&#32;warning</emphasis>
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a950cb7f8d39d0d1fe78d1c877a6d44a0">ControlReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0C&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;miscellaneous&#32;control&#32;registers</emphasis>
65 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aeef1ebc2d45524d9e3e2327f9cb3066b">BitFramingReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0D&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;adjustments&#32;for&#32;bit-oriented&#32;frames</emphasis>
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ac58131928da13c94b3a465c6a0276976">CollReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0E&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;bit&#32;position&#32;of&#32;the&#32;first&#32;bit-collision&#32;detected&#32;on&#32;the&#32;RF&#32;interface</emphasis>
67 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x0F&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;future&#32;use</emphasis>
68 
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Page&#32;1:&#32;Command</emphasis>
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x10&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;future&#32;use</emphasis>
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3afd4e5e104dc9c24af4687e3d51da56">ModeReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x11&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;general&#32;modes&#32;for&#32;transmitting&#32;and&#32;receiving</emphasis>
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab6cd4c5dcfa675bbf5b2c162d47ba78e">TxModeReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x12&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;transmission&#32;data&#32;rate&#32;and&#32;framing</emphasis>
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ad9f6e967e3390192a00ac4256a56251b">RxModeReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x13&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;reception&#32;data&#32;rate&#32;and&#32;framing</emphasis>
74 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a414850094de7c1e66a844e1a40978a33">TxControlReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x14&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;controls&#32;the&#32;logical&#32;behavior&#32;of&#32;the&#32;antenna&#32;driver&#32;pins&#32;TX1&#32;and&#32;TX2</emphasis>
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2bdde783dcc91f1f456d188f3d4d71a6">TxASKReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x15&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;controls&#32;the&#32;setting&#32;of&#32;the&#32;transmission&#32;modulation</emphasis>
76 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ad0479359a7a1697baed406f972601bdd">TxSelReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x16&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selects&#32;the&#32;internal&#32;sources&#32;for&#32;the&#32;antenna&#32;driver</emphasis>
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a033d032ceede4ad4fe79788aa5f6962f">RxSelReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x17&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selects&#32;internal&#32;receiver&#32;settings</emphasis>
78 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae2d1f8b133337135b58f6d76b9d7033a">RxThresholdReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x18&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selects&#32;thresholds&#32;for&#32;the&#32;bit&#32;decoder</emphasis>
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a703240a6a220c43910e28703a74e3f52">DemodReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x19&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;demodulator&#32;settings</emphasis>
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x1A&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;future&#32;use</emphasis>
81 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x1B&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;future&#32;use</emphasis>
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a62977c895c8ac99961603aa8dd58c8f6">MfTxReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x1C&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;controls&#32;some&#32;MIFARE&#32;communication&#32;transmit&#32;parameters</emphasis>
83 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab08f244016fd8cfe5c6e40795a056e61">MfRxReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x1D&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;controls&#32;some&#32;MIFARE&#32;communication&#32;receive&#32;parameters</emphasis>
84 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x1E&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;future&#32;use</emphasis>
85 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a1af7727119be183eb6ef7630d659a208">SerialSpeedReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x1F&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selects&#32;the&#32;speed&#32;of&#32;the&#32;serial&#32;UART&#32;interface</emphasis>
86 
87 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Page&#32;2:&#32;Configuration</emphasis>
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x20&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;future&#32;use</emphasis>
89 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa16b747cac59415d63c9aa61d4ca2eb1">CRCResultRegH</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x21&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;shows&#32;the&#32;MSB&#32;and&#32;LSB&#32;values&#32;of&#32;the&#32;CRC&#32;calculation</emphasis>
90 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7436bf87e87a12e003f0d36c6ee93c74">CRCResultRegL</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x22&#32;&lt;&lt;&#32;1,
91 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x23&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;future&#32;use</emphasis>
92 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a9133e895e83898c0132e967eac11733a">ModWidthReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x24&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;controls&#32;the&#32;ModWidth&#32;setting?</emphasis>
93 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x25&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;future&#32;use</emphasis>
94 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a299d24d290d0d45196a9753fead96fcc">RFCfgReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x26&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;configures&#32;the&#32;receiver&#32;gain</emphasis>
95 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6857839ec7c1ca85c546cca3a9371b0">GsNReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x27&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;selects&#32;the&#32;conductance&#32;of&#32;the&#32;antenna&#32;driver&#32;pins&#32;TX1&#32;and&#32;TX2&#32;for&#32;modulation</emphasis>
96 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a1f1437ca4438162e0c1905ca39f9e28a">CWGsPReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x28&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;the&#32;conductance&#32;of&#32;the&#32;p-driver&#32;output&#32;during&#32;periods&#32;of&#32;no&#32;modulation</emphasis>
97 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11af2f78bc8b98861e3762bfb39e9330410">ModGsPReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x29&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;the&#32;conductance&#32;of&#32;the&#32;p-driver&#32;output&#32;during&#32;periods&#32;of&#32;modulation</emphasis>
98 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a49e463ef0637de855d7f18f1b45d2183">TModeReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x2A&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;settings&#32;for&#32;the&#32;internal&#32;timer</emphasis>
99 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa2858d5ecb5db42b20bf9f26e8a82a85">TPrescalerReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x2B&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;the&#32;lower&#32;8&#32;bits&#32;of&#32;the&#32;TPrescaler&#32;value.&#32;The&#32;4&#32;high&#32;bits&#32;are&#32;in&#32;TModeReg.</emphasis>
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7bc82b693e1f953c6ece972628b974d0">TReloadRegH</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x2C&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;the&#32;16-bit&#32;timer&#32;reload&#32;value</emphasis>
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a053386cc993ce5f6432efcf222758356">TReloadRegL</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x2D&#32;&lt;&lt;&#32;1,
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3ac38e27924e94a67fb817a883309183">TCounterValueRegH</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x2E&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;shows&#32;the&#32;16-bit&#32;timer&#32;value</emphasis>
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa8d709a47229dd8591f5a620fc892cab">TCounterValueRegL</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x2F&#32;&lt;&lt;&#32;1,
104 
105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Page&#32;3:&#32;Test&#32;Registers</emphasis>
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x30&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;future&#32;use</emphasis>
107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a6995fdac6117f20475b18d8f3ac3b37c">TestSel1Reg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x31&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;general&#32;test&#32;signal&#32;configuration</emphasis>
108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aee2f6cf70362951f686e90fb3e935d50">TestSel2Reg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x32&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;general&#32;test&#32;signal&#32;configuration</emphasis>
109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa3bebfe547d6c53c3d0efe77a40c9935">TestPinEnReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x33&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;enables&#32;pin&#32;output&#32;driver&#32;on&#32;pins&#32;D1&#32;to&#32;D7</emphasis>
110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a94cf3b29f1e8ef62a57563fc6c443fa3">TestPinValueReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x34&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;the&#32;values&#32;for&#32;D1&#32;to&#32;D7&#32;when&#32;it&#32;is&#32;used&#32;as&#32;an&#32;I/O&#32;bus</emphasis>
111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a649cac3dfc392bc43209500fb785dc14">TestBusReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x35&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;shows&#32;the&#32;status&#32;of&#32;the&#32;internal&#32;test&#32;bus</emphasis>
112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7673b1f3f1e0620ba14ab84eca449017">AutoTestReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x36&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;controls&#32;the&#32;digital&#32;self&#32;test</emphasis>
113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a987d995305be7f2a8fe9c058ec4bd902">VersionReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x37&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;shows&#32;the&#32;software&#32;version</emphasis>
114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a50244824f81dc258ffe75f2cfa79f4f3">AnalogTestReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x38&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;controls&#32;the&#32;pins&#32;AUX1&#32;and&#32;AUX2</emphasis>
115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a38dd71ef93140244120bb7b91f816e68">TestDAC1Reg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x39&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;the&#32;test&#32;value&#32;for&#32;TestDAC1</emphasis>
116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11abea8ddee770eff435fbb6bacac13a481">TestDAC2Reg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x3A&#32;&lt;&lt;&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;defines&#32;the&#32;test&#32;value&#32;for&#32;TestDAC2</emphasis>
117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a941ecf7c53cf726968861607c4b5e5f7">TestADCReg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x3B&#32;&lt;&lt;&#32;1&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;shows&#32;the&#32;value&#32;of&#32;ADC&#32;I&#32;and&#32;Q&#32;channels</emphasis>
118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3C&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;production&#32;tests</emphasis>
119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3D&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;production&#32;tests</emphasis>
120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3E&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;production&#32;tests</emphasis>
121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0x3F&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;reserved&#32;for&#32;production&#32;tests</emphasis>
122 &#32;&#32;&#32;&#32;};
123 
124 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MFRC522&#32;commands.&#32;Described&#32;in&#32;chapter&#32;10&#32;of&#32;the&#32;datasheet.</emphasis>
125 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1">PCD_Command</link>&#32;{
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6">PCD_Idle</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x00,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;action,&#32;cancels&#32;current&#32;command&#32;execution</emphasis>
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a33f0596a331add734571b0907bb8cd0c">PCD_Mem</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x01,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;stores&#32;25&#32;bytes&#32;into&#32;the&#32;internal&#32;buffer</emphasis>
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4520d1c5a6c460b2e3313fb26b93afc3">PCD_GenerateRandomID</link>&#32;&#32;&#32;&#32;=&#32;0x02,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;generates&#32;a&#32;10-byte&#32;random&#32;ID&#32;number</emphasis>
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1aee3289cb1accb952792affb0fc01a814">PCD_CalcCRC</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x03,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;activates&#32;the&#32;CRC&#32;coprocessor&#32;or&#32;performs&#32;a&#32;self&#32;test</emphasis>
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a7648059b11bf420c077f83ad6c2df532">PCD_Transmit</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x04,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;transmits&#32;data&#32;from&#32;the&#32;FIFO&#32;buffer</emphasis>
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a1aee4ac74a9b29beb57a6e5947f0b261">PCD_NoCmdChange</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x07,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;no&#32;command&#32;change,&#32;can&#32;be&#32;used&#32;to&#32;modify&#32;the&#32;CommandReg&#32;register&#32;bits&#32;without&#32;affecting&#32;the&#32;command,&#32;for&#32;example,&#32;the&#32;PowerDown&#32;bit</emphasis>
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1af2436d9a2474b647ab1564f3c3ef7b81">PCD_Receive</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x08,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;activates&#32;the&#32;receiver&#32;circuits</emphasis>
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1abef11bde1e2742480aa45fb1a8f99211">PCD_Transceive</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0C,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;transmits&#32;data&#32;from&#32;FIFO&#32;buffer&#32;to&#32;antenna&#32;and&#32;automatically&#32;activates&#32;the&#32;receiver&#32;after&#32;transmission</emphasis>
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4504a068cace1f0b9164b2f3a3255d2b">PCD_MFAuthent</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0E,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;performs&#32;the&#32;MIFARE&#32;standard&#32;authentication&#32;as&#32;a&#32;reader</emphasis>
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a0e7e9956d273665874c0eaebd8c1557b">PCD_SoftReset</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x0F&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;resets&#32;the&#32;MFRC522</emphasis>
136 &#32;&#32;&#32;&#32;};
137 
138 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MFRC522&#32;RxGain[2:0]&#32;masks,&#32;defines&#32;the&#32;receiver&apos;s&#32;signal&#32;voltage&#32;gain&#32;factor&#32;(on&#32;the&#32;PCD).</emphasis>
139 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Described&#32;in&#32;9.3.3.6&#32;/&#32;table&#32;98&#32;of&#32;the&#32;datasheet&#32;at&#32;http://www.nxp.com/documents/data_sheet/MFRC522.pdf</emphasis>
140 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67">PCD_RxGain</link>&#32;{
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a48d975686baa49a14c64c615165a2648">RxGain_18dB</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x00&#32;&lt;&lt;&#32;4,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;000b&#32;-&#32;18&#32;dB,&#32;minimum</emphasis>
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a1f76a9a1002b4f5a214a744fdfd1e485">RxGain_23dB</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x01&#32;&lt;&lt;&#32;4,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;001b&#32;-&#32;23&#32;dB</emphasis>
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a50c86eecc33ab1bc3ea765b381cbcc4f">RxGain_18dB_2</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x02&#32;&lt;&lt;&#32;4,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;010b&#32;-&#32;18&#32;dB,&#32;it&#32;seems&#32;010b&#32;is&#32;a&#32;duplicate&#32;for&#32;000b</emphasis>
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a94f97cd2d56becc29b2f6d2aaf52390e">RxGain_23dB_2</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x03&#32;&lt;&lt;&#32;4,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;011b&#32;-&#32;23&#32;dB,&#32;it&#32;seems&#32;011b&#32;is&#32;a&#32;duplicate&#32;for&#32;001b</emphasis>
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a8141508391403bda01e36b1b014bb3df">RxGain_33dB</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x04&#32;&lt;&lt;&#32;4,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;100b&#32;-&#32;33&#32;dB,&#32;average,&#32;and&#32;typical&#32;default</emphasis>
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67aeb2fa15224b6a3fc4ff9181771f49d26">RxGain_38dB</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x05&#32;&lt;&lt;&#32;4,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;101b&#32;-&#32;38&#32;dB</emphasis>
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67af75e837882d2876e7cc43cefe08c658c">RxGain_43dB</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x06&#32;&lt;&lt;&#32;4,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;110b&#32;-&#32;43&#32;dB</emphasis>
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67abf1cf1c7c0bbc05b36d2039af8edb778">RxGain_48dB</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x07&#32;&lt;&lt;&#32;4,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;111b&#32;-&#32;48&#32;dB,&#32;maximum</emphasis>
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a521090cb926c7ec89ac919dc03221ec9">RxGain_min</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x00&#32;&lt;&lt;&#32;4,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;000b&#32;-&#32;18&#32;dB,&#32;minimum,&#32;convenience&#32;for&#32;RxGain_18dB</emphasis>
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a710cffcf94202bae75baf1446864aa8d">RxGain_avg</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x04&#32;&lt;&lt;&#32;4,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;100b&#32;-&#32;33&#32;dB,&#32;average,&#32;convenience&#32;for&#32;RxGain_33dB</emphasis>
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67aab79eef054b19d0c816203470aa2b00c">RxGain_max</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x07&#32;&lt;&lt;&#32;4&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;111b&#32;-&#32;48&#32;dB,&#32;maximum,&#32;convenience&#32;for&#32;RxGain_48dB</emphasis>
152 &#32;&#32;&#32;&#32;};
153 
154 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Commands&#32;sent&#32;to&#32;the&#32;PICC.</emphasis>
155 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40">PICC_Command</link>&#32;{
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;commands&#32;used&#32;by&#32;the&#32;PCD&#32;to&#32;manage&#32;communication&#32;with&#32;several&#32;PICCs&#32;(ISO&#32;14443-3,&#32;Type&#32;A,&#32;section&#32;6.4)</emphasis>
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abf8bb05ffb365cb0d01679abc678b7d1">PICC_CMD_REQA</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x26,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;REQuest&#32;command,&#32;Type&#32;A.&#32;Invites&#32;PICCs&#32;in&#32;state&#32;IDLE&#32;to&#32;go&#32;to&#32;READY&#32;and&#32;prepare&#32;for&#32;anticollision&#32;or&#32;selection.&#32;7&#32;bit&#32;frame.</emphasis>
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac69de174e9f3b7d8cc0b3e4b8be978ae">PICC_CMD_WUPA</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x52,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Wake-UP&#32;command,&#32;Type&#32;A.&#32;Invites&#32;PICCs&#32;in&#32;state&#32;IDLE&#32;and&#32;HALT&#32;to&#32;go&#32;to&#32;READY(*)&#32;and&#32;prepare&#32;for&#32;anticollision&#32;or&#32;selection.&#32;7&#32;bit&#32;frame.</emphasis>
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a16883066555df303700ee5b7635a11f0">PICC_CMD_CT</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x88,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Cascade&#32;Tag.&#32;Not&#32;really&#32;a&#32;command,&#32;but&#32;used&#32;during&#32;anti&#32;collision.</emphasis>
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac018ecee156fed326cdac2ceb29a38bd">PICC_CMD_SEL_CL1</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x93,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Anti&#32;collision/Select,&#32;Cascade&#32;Level&#32;1</emphasis>
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a1eb5f3af0ce3d4728e6efc8f2d6d8a9c">PICC_CMD_SEL_CL2</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x95,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Anti&#32;collision/Select,&#32;Cascade&#32;Level&#32;2</emphasis>
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aa3f6c8c1f347fb9fef575e09e6b4d26b">PICC_CMD_SEL_CL3</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x97,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Anti&#32;collision/Select,&#32;Cascade&#32;Level&#32;3</emphasis>
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a4571c00e0e50ced328c148c72e8c8c8b">PICC_CMD_HLTA</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x50,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;HaLT&#32;command,&#32;Type&#32;A.&#32;Instructs&#32;an&#32;ACTIVE&#32;PICC&#32;to&#32;go&#32;to&#32;state&#32;HALT.</emphasis>
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;commands&#32;used&#32;for&#32;MIFARE&#32;Classic&#32;(from&#32;http://www.nxp.com/documents/data_sheet/MF1S503x.pdf,&#32;Section&#32;9)</emphasis>
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Use&#32;PCD_MFAuthent&#32;to&#32;authenticate&#32;access&#32;to&#32;a&#32;sector,&#32;then&#32;use&#32;these&#32;commands&#32;to&#32;read/write/modify&#32;the&#32;blocks&#32;on&#32;the&#32;sector.</emphasis>
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;read/write&#32;commands&#32;can&#32;also&#32;be&#32;used&#32;for&#32;MIFARE&#32;Ultralight.</emphasis>
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abaeb71903ba91b26195148e8b7080432">PICC_CMD_MF_AUTH_KEY_A</link>&#32;&#32;=&#32;0x60,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Perform&#32;authentication&#32;with&#32;Key&#32;A</emphasis>
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaae1e4ebe0ba780376417fa3cbbc492a">PICC_CMD_MF_AUTH_KEY_B</link>&#32;&#32;=&#32;0x61,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Perform&#32;authentication&#32;with&#32;Key&#32;B</emphasis>
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a6e7b073f0a517053c124c3e539f97c7d">PICC_CMD_MF_READ</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0x30,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reads&#32;one&#32;16&#32;byte&#32;block&#32;from&#32;the&#32;authenticated&#32;sector&#32;of&#32;the&#32;PICC.&#32;Also&#32;used&#32;for&#32;MIFARE&#32;Ultralight.</emphasis>
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaa1ee47263d5557db433506506d38644">PICC_CMD_MF_WRITE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0xA0,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Writes&#32;one&#32;16&#32;byte&#32;block&#32;to&#32;the&#32;authenticated&#32;sector&#32;of&#32;the&#32;PICC.&#32;Called&#32;&quot;COMPATIBILITY&#32;WRITE&quot;&#32;for&#32;MIFARE&#32;Ultralight.</emphasis>
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a23b6cd831f9cf639542261446eaf3e88">PICC_CMD_MF_DECREMENT</link>&#32;&#32;&#32;=&#32;0xC0,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Decrements&#32;the&#32;contents&#32;of&#32;a&#32;block&#32;and&#32;stores&#32;the&#32;result&#32;in&#32;the&#32;internal&#32;data&#32;register.</emphasis>
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac206f2ba080fd8bae26a60cf8e9aa0f0">PICC_CMD_MF_INCREMENT</link>&#32;&#32;&#32;=&#32;0xC1,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Increments&#32;the&#32;contents&#32;of&#32;a&#32;block&#32;and&#32;stores&#32;the&#32;result&#32;in&#32;the&#32;internal&#32;data&#32;register.</emphasis>
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a03960da2ba6fe363307249c0ebda4794">PICC_CMD_MF_RESTORE</link>&#32;&#32;&#32;&#32;&#32;=&#32;0xC2,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Reads&#32;the&#32;contents&#32;of&#32;a&#32;block&#32;into&#32;the&#32;internal&#32;data&#32;register.</emphasis>
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aca11dd8f22ee92e74dea6eccb04acdbf">PICC_CMD_MF_TRANSFER</link>&#32;&#32;&#32;&#32;=&#32;0xB0,&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Writes&#32;the&#32;contents&#32;of&#32;the&#32;internal&#32;data&#32;register&#32;to&#32;a&#32;block.</emphasis>
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;commands&#32;used&#32;for&#32;MIFARE&#32;Ultralight&#32;(from&#32;http://www.nxp.com/documents/data_sheet/MF0ICU1.pdf,&#32;Section&#32;8.6)</emphasis>
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;PICC_CMD_MF_READ&#32;and&#32;PICC_CMD_MF_WRITE&#32;can&#32;also&#32;be&#32;used&#32;for&#32;MIFARE&#32;Ultralight.</emphasis>
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a05ab0577fc5ebef596758d0435caff6a">PICC_CMD_UL_WRITE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0xA2&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Writes&#32;one&#32;4&#32;byte&#32;page&#32;to&#32;the&#32;PICC.</emphasis>
178 &#32;&#32;&#32;&#32;};
179 
180 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MIFARE&#32;constants&#32;that&#32;does&#32;not&#32;fit&#32;anywhere&#32;else</emphasis>
181 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41ca">MIFARE_Misc</link>&#32;{
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caaea67bb493542ac43ee33b3dcf32a73d3">MF_ACK</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0xA,&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;MIFARE&#32;Classic&#32;uses&#32;a&#32;4&#32;bit&#32;ACK/NAK.&#32;Any&#32;other&#32;value&#32;than&#32;0xA&#32;is&#32;NAK.</emphasis>
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caa6b49626dcb7cc58cb460378caf71908f">MF_KEY_SIZE</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;6&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A&#32;Mifare&#32;Crypto1&#32;key&#32;is&#32;6&#32;bytes.</emphasis>
184 &#32;&#32;&#32;&#32;};
185 
186 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;PICC&#32;types&#32;we&#32;can&#32;detect.&#32;Remember&#32;to&#32;update&#32;PICC_GetTypeName()&#32;if&#32;you&#32;add&#32;more.</emphasis>
187 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493">PICC_Type</link>&#32;{
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a15db395f3889e5937b6d019b1ba4d0e7">PICC_TYPE_UNKNOWN</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;0,
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a97e77275960067a9507621a414d9ee77">PICC_TYPE_ISO_14443_4</link>&#32;&#32;&#32;=&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;PICC&#32;compliant&#32;with&#32;ISO/IEC&#32;14443-4</emphasis>
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a6a7364b7bdd89dfdeb953c9d3e089d38">PICC_TYPE_ISO_18092</link>&#32;&#32;&#32;&#32;&#32;=&#32;2,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;PICC&#32;compliant&#32;with&#32;ISO/IEC&#32;18092&#32;(NFC)</emphasis>
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e">PICC_TYPE_MIFARE_MINI</link>&#32;&#32;&#32;=&#32;3,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MIFARE&#32;Classic&#32;protocol,&#32;320&#32;bytes</emphasis>
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc">PICC_TYPE_MIFARE_1K</link>&#32;&#32;&#32;&#32;&#32;=&#32;4,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MIFARE&#32;Classic&#32;protocol,&#32;1KB</emphasis>
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98">PICC_TYPE_MIFARE_4K</link>&#32;&#32;&#32;&#32;&#32;=&#32;5,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MIFARE&#32;Classic&#32;protocol,&#32;4KB</emphasis>
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493abf543718b1dd9b3a1e067cf7b909a751">PICC_TYPE_MIFARE_UL</link>&#32;&#32;&#32;&#32;&#32;=&#32;6,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MIFARE&#32;Ultralight&#32;or&#32;Ultralight&#32;C</emphasis>
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ac3a75d9038b6298fe8294c1d142e450c">PICC_TYPE_MIFARE_PLUS</link>&#32;&#32;&#32;=&#32;7,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;MIFARE&#32;Plus</emphasis>
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a275fd46fd853ab8925afb1580ce1c3cb">PICC_TYPE_TNP3XXX</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;8,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Only&#32;mentioned&#32;in&#32;NXP&#32;AN&#32;10833&#32;MIFARE&#32;Type&#32;Identification&#32;Procedure</emphasis>
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ad18c78cf2973ca2f136bfb1ddbc31843">PICC_TYPE_NOT_COMPLETE</link>&#32;&#32;=&#32;255&#32;&#32;&#32;<emphasis role="comment">//&#32;SAK&#32;indicates&#32;UID&#32;is&#32;not&#32;complete.</emphasis>
198 &#32;&#32;&#32;&#32;};
199 
200 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Return&#32;codes&#32;from&#32;the&#32;functions&#32;in&#32;this&#32;class.&#32;Remember&#32;to&#32;update&#32;GetStatusCodeName()&#32;if&#32;you&#32;add&#32;more.</emphasis>
201 &#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9e">StatusCode</link>&#32;{
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08">STATUS_OK</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;1,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Success</emphasis>
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3">STATUS_ERROR</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;2,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Error&#32;in&#32;communication</emphasis>
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b">STATUS_COLLISION</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;3,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Collission&#32;detected</emphasis>
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935">STATUS_TIMEOUT</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;4,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Timeout&#32;in&#32;communication.</emphasis>
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa">STATUS_NO_ROOM</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;5,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A&#32;buffer&#32;is&#32;not&#32;big&#32;enough.</emphasis>
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1c572582a06e252ccf3cccdfdaf051b2">STATUS_INTERNAL_ERROR</link>&#32;&#32;&#32;=&#32;6,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Internal&#32;error&#32;in&#32;the&#32;code.&#32;Should&#32;not&#32;happen&#32;;-)</emphasis>
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21">STATUS_INVALID</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;7,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Invalid&#32;argument.</emphasis>
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31">STATUS_CRC_WRONG</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;8,&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;CRC_A&#32;does&#32;not&#32;match</emphasis>
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea991d8d22bd15cb327ce413664f43b314">STATUS_MIFARE_NACK</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;9&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A&#32;MIFARE&#32;PICC&#32;responded&#32;with&#32;NAK.</emphasis>
211 &#32;&#32;&#32;&#32;};
212 
213 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A&#32;struct&#32;used&#32;for&#32;passing&#32;the&#32;UID&#32;of&#32;a&#32;PICC.</emphasis>
214 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;&#32;&#32;&#32;&#32;size;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Number&#32;of&#32;bytes&#32;in&#32;the&#32;UID.&#32;4,&#32;7&#32;or&#32;10.</emphasis>
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;&#32;&#32;&#32;&#32;uidByte[10];
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;&#32;&#32;&#32;&#32;sak;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;SAK&#32;(Select&#32;acknowledge)&#32;byte&#32;returned&#32;from&#32;the&#32;PICC&#32;after&#32;successful&#32;selection.</emphasis>
218 &#32;&#32;&#32;&#32;}&#32;Uid;
219 
220 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;A&#32;struct&#32;used&#32;for&#32;passing&#32;a&#32;MIFARE&#32;Crypto1&#32;key</emphasis>
221 &#32;&#32;&#32;&#32;<emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint8_t&#32;&#32;&#32;&#32;&#32;keyByte[<link linkend="_classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caa6b49626dcb7cc58cb460378caf71908f">MF_KEY_SIZE</link>];
223 &#32;&#32;&#32;&#32;}&#32;MIFARE_Key;
224 
225 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Member&#32;variables</emphasis>
226 &#32;&#32;&#32;&#32;Uid&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5">uid</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Used&#32;by&#32;PICC_ReadCardSerial().</emphasis>
227 
228 &#32;&#32;&#32;&#32;ISpi&amp;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a05a6e11382dd107aaab12fc2b3fbdb13">mSpi</link>;
229 &#32;&#32;&#32;&#32;IGpio&amp;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1aa2d9006d9f17fb26ee1af3fea5dea2b2">mResetPin</link>;
230 
231 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Size&#32;of&#32;the&#32;MFRC522&#32;FIFO</emphasis>
232 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ab27df5c7a8d40f5918edd091621efb92">FIFO_SIZE</link>&#32;=&#32;64;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;The&#32;FIFO&#32;is&#32;64&#32;bytes.</emphasis>
233 
235 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Functions&#32;for&#32;setting&#32;up&#32;the&#32;Raspberry&#32;Pi</emphasis>
237 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a9c32316768c27c643781df0d0a0bf248">MFRC522</link>(<link linkend="_structmfrc522_1_1_i_spi">ISpi</link>&amp;,&#32;<link linkend="_structmfrc522_1_1_i_gpio">IGpio</link>&amp;&#32;resetPin);
239 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Basic&#32;interface&#32;functions&#32;for&#32;communicating&#32;with&#32;the&#32;MFRC522</emphasis>
241 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3">PCD_WriteRegister</link>(uint8_t&#32;reg,&#32;uint8_t&#32;value);
242 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a8f615a621af28925c38122b08ed3d03b">PCD_WriteRegister</link>(uint8_t&#32;reg,&#32;uint8_t&#32;count,&#32;uint8_t&#32;*values);
243 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece">PCD_ReadRegister</link>(uint8_t&#32;reg);
244 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a8243247e881823152bfe9295651b0056">PCD_ReadRegister</link>(uint8_t&#32;reg,&#32;uint8_t&#32;count,&#32;uint8_t&#32;*values,&#32;uint8_t&#32;rxAlign&#32;=&#32;0);
245 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ac54b5af1f98b9ac438e4164bce8ce927">setBitMask</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;reg,&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;mask);
246 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286">PCD_SetRegisterBitMask</link>(uint8_t&#32;reg,&#32;uint8_t&#32;mask);
247 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71">PCD_ClearRegisterBitMask</link>(uint8_t&#32;reg,&#32;uint8_t&#32;mask);
248 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b">PCD_CalculateCRC</link>(uint8_t&#32;*data,&#32;uint8_t&#32;length,&#32;uint8_t&#32;*result);
249 
251 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Functions&#32;for&#32;manipulating&#32;the&#32;MFRC522</emphasis>
253 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1affff6fd4010044cc4337803de579b4f0">PCD_Init</link>();
254 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1aa3a0f87af9a7217c87de0b55592c1c60">PCD_Reset</link>();
255 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a984248652522e8fd580a526a7a9b27d9">PCD_AntennaOn</link>();
256 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a773b673bf8567d2cad97b136b9e269c9">PCD_AntennaOff</link>();
257 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a6df2b2a81b0259de285892bc61f247fc">PCD_GetAntennaGain</link>();
258 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a245f57d7ea35bfb3ea818171abb18b4b">PCD_SetAntennaGain</link>(uint8_t&#32;mask);
259 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1aabf66fe43403f40968049a2a87f0026d">PCD_PerformSelfTest</link>();
260 
262 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Functions&#32;for&#32;communicating&#32;with&#32;PICCs</emphasis>
264 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231">PCD_TransceiveData</link>(uint8_t&#32;*sendData,&#32;uint8_t&#32;sendLen,&#32;uint8_t&#32;*backData,&#32;uint8_t&#32;*backLen,&#32;uint8_t&#32;*validBits&#32;=&#32;NULL,&#32;uint8_t&#32;rxAlign&#32;=&#32;0,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;checkCRC&#32;=&#32;<emphasis role="keyword">false</emphasis>);
265 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e">PCD_CommunicateWithPICC</link>(uint8_t&#32;command,&#32;uint8_t&#32;waitIRq,&#32;uint8_t&#32;*sendData,&#32;uint8_t&#32;sendLen,&#32;uint8_t&#32;*backData&#32;=&#32;NULL,&#32;uint8_t&#32;*backLen&#32;=&#32;NULL,&#32;uint8_t&#32;*validBits&#32;=&#32;NULL,&#32;uint8_t&#32;rxAlign&#32;=&#32;0,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;checkCRC&#32;=&#32;<emphasis role="keyword">false</emphasis>);
266 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a44dd708016d31efc20bd2dbdb1f67aaf">PICC_RequestA</link>(uint8_t&#32;*bufferATQA,&#32;uint8_t&#32;*bufferSize);
267 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1add1b450123e4670d88e0b6cb2ddca0c7">PICC_WakeupA</link>(uint8_t&#32;*bufferATQA,&#32;uint8_t&#32;*bufferSize);
268 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775">PICC_REQA_or_WUPA</link>(uint8_t&#32;command,&#32;uint8_t&#32;*bufferATQA,&#32;uint8_t&#32;*bufferSize);
269 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2">PICC_Select</link>(<link linkend="_structmfrc522_1_1_m_f_r_c522_1_1_uid">Uid</link>&#32;*<link linkend="_classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5">uid</link>,&#32;uint8_t&#32;validBits&#32;=&#32;0);
270 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3">PICC_HaltA</link>();
271 
273 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Functions&#32;for&#32;communicating&#32;with&#32;MIFARE&#32;PICCs</emphasis>
275 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c">PCD_Authenticate</link>(uint8_t&#32;command,&#32;uint8_t&#32;blockAddr,&#32;<link linkend="_structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key">MIFARE_Key</link>&#32;*key,&#32;<link linkend="_structmfrc522_1_1_m_f_r_c522_1_1_uid">Uid</link>&#32;*<link linkend="_classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5">uid</link>);
276 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b">PCD_StopCrypto1</link>();
277 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959">MIFARE_Read</link>(uint8_t&#32;blockAddr,&#32;uint8_t&#32;*buffer,&#32;uint8_t&#32;*bufferSize);
278 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f">MIFARE_Write</link>(uint8_t&#32;blockAddr,&#32;uint8_t&#32;*buffer,&#32;uint8_t&#32;bufferSize);
279 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a56515c1027c5a471f56b128a1404f437">MIFARE_Decrement</link>(uint8_t&#32;blockAddr,&#32;<emphasis role="keywordtype">long</emphasis>&#32;delta);
280 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1af3a8dd85230de88fea86fa21d72ab742">MIFARE_Increment</link>(uint8_t&#32;blockAddr,&#32;<emphasis role="keywordtype">long</emphasis>&#32;delta);
281 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1aaba45a947ba5a47f11ab346a764cedaf">MIFARE_Restore</link>(uint8_t&#32;blockAddr);
282 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a3b85e9b839756a4eb516195ef498ce58">MIFARE_Transfer</link>(uint8_t&#32;blockAddr);
283 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1afcd5d913410ed3694fab339f311b93de">MIFARE_Ultralight_Write</link>(uint8_t&#32;page,&#32;uint8_t&#32;*buffer,&#32;uint8_t&#32;bufferSize);
284 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1abf16c5a992c8692c2cf4f65e6ad19a13">MIFARE_GetValue</link>(uint8_t&#32;blockAddr,&#32;<emphasis role="keywordtype">long</emphasis>&#32;*value);
285 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a1733fb64ad8fa119e3fe945d6287d059">MIFARE_SetValue</link>(uint8_t&#32;blockAddr,&#32;<emphasis role="keywordtype">long</emphasis>&#32;value);
286 
288 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Support&#32;functions</emphasis>
290 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e">PCD_MIFARE_Transceive</link>(uint8_t&#32;*sendData,&#32;uint8_t&#32;sendLen,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;acceptTimeout&#32;=&#32;<emphasis role="keyword">false</emphasis>);
291 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;old&#32;function&#32;used&#32;too&#32;much&#32;memory,&#32;now&#32;name&#32;moved&#32;to&#32;flash;&#32;if&#32;you&#32;need&#32;char,&#32;copy&#32;from&#32;flash&#32;to&#32;memory</emphasis>
292 &#32;&#32;&#32;&#32;<emphasis role="comment">//const&#32;char&#32;*GetStatusCodeName(uint8_t&#32;code);</emphasis>
293 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a">GetStatusCodeName</link>(uint8_t&#32;code);
294 &#32;&#32;&#32;&#32;uint8_t&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a51d41355c15a2e3aebe43bffc2445212">PICC_GetType</link>(uint8_t&#32;sak);
295 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;old&#32;function&#32;used&#32;too&#32;much&#32;memory,&#32;now&#32;name&#32;moved&#32;to&#32;flash;&#32;if&#32;you&#32;need&#32;char,&#32;copy&#32;from&#32;flash&#32;to&#32;memory</emphasis>
296 &#32;&#32;&#32;&#32;<emphasis role="comment">//const&#32;char&#32;*PICC_GetTypeName(uint8_t&#32;type);</emphasis>
297 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ae32295310fef34afe04407f307e583a9">PICC_GetTypeName</link>(uint8_t&#32;type);
298 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a">PICC_DumpToSerial</link>(<link linkend="_structmfrc522_1_1_m_f_r_c522_1_1_uid">Uid</link>&#32;*<link linkend="_classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5">uid</link>);
299 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a">PICC_DumpMifareClassicToSerial</link>(<link linkend="_structmfrc522_1_1_m_f_r_c522_1_1_uid">Uid</link>&#32;*<link linkend="_classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5">uid</link>,&#32;uint8_t&#32;piccType,&#32;<link linkend="_structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key">MIFARE_Key</link>&#32;*key);
300 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b">PICC_DumpMifareClassicSectorToSerial</link>(<link linkend="_structmfrc522_1_1_m_f_r_c522_1_1_uid">Uid</link>&#32;*<link linkend="_classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5">uid</link>,&#32;<link linkend="_structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key">MIFARE_Key</link>&#32;*key,&#32;uint8_t&#32;sector);
301 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a4ca5c68d509a9ead4d6d551e8c10bd40">PICC_DumpMifareUltralightToSerial</link>();
302 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a622c5bd3b19e4093ebc774fc3a874f20">MIFARE_SetAccessBits</link>(uint8_t&#32;*accessBitBuffer,&#32;uint8_t&#32;g0,&#32;uint8_t&#32;g1,&#32;uint8_t&#32;g2,&#32;uint8_t&#32;g3);
303 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a">MIFARE_OpenUidBackdoor</link>(<emphasis role="keywordtype">bool</emphasis>&#32;logErrors);
304 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd">MIFARE_SetUid</link>(uint8_t&#32;*newUid,&#32;uint8_t&#32;uidSize,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;logErrors);
305 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a2ff9002344e9ee1fa0be91d2f56e1d5c">MIFARE_UnbrickUidSector</link>(<emphasis role="keywordtype">bool</emphasis>&#32;logErrors);
306 
308 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Convenience&#32;functions&#32;-&#32;does&#32;not&#32;add&#32;extra&#32;functionality</emphasis>
310 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1a8b123b82f4f6dffa7a88e8b61f2806a3">PICC_IsNewCardPresent</link>();
311 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classmfrc522_1_1_m_f_r_c522_1abc5229168077788c4ba0c67c568f479e">PICC_ReadCardSerial</link>();
312 
313 <emphasis role="keyword">private</emphasis>:
314 &#32;&#32;&#32;&#32;uint8_t&#32;MIFARE_TwoStepHelper(uint8_t&#32;command,&#32;uint8_t&#32;blockAddr,&#32;<emphasis role="keywordtype">long</emphasis>&#32;data);
315 };
316 
317 }
</programlisting></section>
