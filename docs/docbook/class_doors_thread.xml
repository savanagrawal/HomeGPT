<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_doors_thread" xml:lang="en-US">
<title>DoorsThread Class Reference</title>
<indexterm><primary>DoorsThread</primary></indexterm>
<para>

<para>Doors Thread to manage doors detection functionality. </para>
 
</para>
<para>
<computeroutput>#include &lt;DoorsThread.h&gt;</computeroutput>
</para>
Inheritance diagram for DoorsThread:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_doors_thread__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for DoorsThread:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_doors_thread__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_doors_thread_1a08b56bb7cccad9e7e3ec0ac6979015e6">DoorsThread</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_doors_thread_1a5ea394ef57bc544806a7bfb2afb19003">stop</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_cpp_thread_1a1be46d1be000f41a763289300623c609">start</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_cpp_thread_1a8ff0fda6b913cc53764caef0e1200f3f">join</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Doors Thread to manage doors detection functionality. </para>



<para><formalpara><title>Author</title>

<para>Chinmay Nagrale </para>
</formalpara>
</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_doors_thread_1a08b56bb7cccad9e7e3ec0ac6979015e6"/><section>
    <title>DoorsThread()</title>
<indexterm><primary>DoorsThread</primary><secondary>DoorsThread</secondary></indexterm>
<indexterm><primary>DoorsThread</primary><secondary>DoorsThread</secondary></indexterm>
<para><computeroutput>DoorsThread::DoorsThread ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Contructor for our doors thread.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry>
<entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_cpp_thread_1a8ff0fda6b913cc53764caef0e1200f3f"/><section>
    <title>join()</title>
<indexterm><primary>join</primary><secondary>DoorsThread</secondary></indexterm>
<indexterm><primary>DoorsThread</primary><secondary>join</secondary></indexterm>
<para><computeroutput>void CppThread::join ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>
<para>Waits for the thread to terminate. </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_cpp_thread_a8ff0fda6b913cc53764caef0e1200f3f_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_cpp_thread_1a1be46d1be000f41a763289300623c609"/><section>
    <title>start()</title>
<indexterm><primary>start</primary><secondary>DoorsThread</secondary></indexterm>
<indexterm><primary>DoorsThread</primary><secondary>start</secondary></indexterm>
<para><computeroutput>void CppThread::start ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[inherited]</computeroutput></computeroutput></para>
<para>Starts the thread. </para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_cpp_thread_a1be46d1be000f41a763289300623c609_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_cpp_thread_a1be46d1be000f41a763289300623c609_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_class_doors_thread_1a5ea394ef57bc544806a7bfb2afb19003"/><section>
    <title>stop()</title>
<indexterm><primary>stop</primary><secondary>DoorsThread</secondary></indexterm>
<indexterm><primary>DoorsThread</primary><secondary>stop</secondary></indexterm>
<para><computeroutput>void DoorsThread::stop ( )<computeroutput>[inline]</computeroutput></computeroutput></para>
<para>Stop our thread&apos;s inner functionality. </para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/thread/doors/<link linkend="__doors_thread_8h">DoorsThread.h</link>src/thread/doors/<link linkend="__doors_thread_8cpp">DoorsThread.cpp</link></section>
</section>
