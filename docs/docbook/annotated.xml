<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_annotated" xml:lang="en-US">
<title>Class List</title>
Here are the classes, structs, unions and interfaces with brief descriptions:<link linkend="_class_audio_record_thread">AudioRecordThread</link><link linkend="_class_bcm_gpio">BcmGpio</link><link linkend="_class_bcm_spi">BcmSpi</link><link linkend="_class_camera">Camera</link><link linkend="_class_circular_queue">CircularQueue</link><link linkend="_class_clap_detection">ClapDetection</link><link linkend="_class_clap_thread">ClapThread</link><link linkend="_class_controller">Controller</link><link linkend="_class_controller_thread">ControllerThread</link>
<para><link linkend="_class_controller">Controller</link> Thread to manage all child threads </para>
<link linkend="_class_cpp_thread">CppThread</link><link linkend="_class_cpp_timer_callback">CppTimerCallback</link><link linkend="_class_doors_thread">DoorsThread</link>
<para>Doors Thread to manage doors detection functionality </para>
<link linkend="_class_event_handler">EventHandler</link><link linkend="_class_events">Events</link><link linkend="_class_globals">Globals</link><link linkend="_classspidevpp_1_1_gpio">spidevpp::Gpio</link><link linkend="_class_g_p_i_o_driver">GPIODriver</link>
<para>GPIO Driver Class </para>
<link linkend="_class_i2_c_driver">I2CDriver</link>
<para>I2C Driver class </para>
<link linkend="_class_i2_c_sensor">I2CSensor</link><link linkend="_structmfrc522_1_1_i_gpio">mfrc522::IGpio</link><link linkend="_class_intruder_dataset_creator">IntruderDatasetCreator</link><link linkend="_class_intruder_dataset_trainer">IntruderDatasetTrainer</link><link linkend="_class_intruder_detection">IntruderDetection</link><link linkend="_class_intruder_mood_detection">IntruderMoodDetection</link><link linkend="_class_intruder_mood_thread">IntruderMoodThread</link><link linkend="_class_intruder_thread">IntruderThread</link>
<para>Intruder Thread to manage intruder detection functionality </para>
<link linkend="_structmfrc522_1_1_i_spi">mfrc522::ISpi</link><link linkend="_class_l_e_d_controller">LEDController</link><link linkend="_classmfrc522_1_1_m_f_r_c522">mfrc522::MFRC522</link><link linkend="_structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key">mfrc522::MFRC522::MIFARE_Key</link><link linkend="_class_mood_detection">MoodDetection</link><link linkend="_class_mood_thread">MoodThread</link>
<para>Mood Thread to manage mood detection functionality </para>
<link linkend="_class_relay_board">RelayBoard</link>
<para>Relay Board class </para>
<link linkend="_class_r_f_i_d">RFID</link><link linkend="_class_r_f_i_d_thread">RFIDThread</link>
<para>Rfid Thread to manage rfid detection functionality </para>
<link linkend="_class_cpp_timer_callback_1_1_runnable">CppTimerCallback::Runnable</link><link linkend="_class_servo_motor">ServoMotor</link><link linkend="_classspidevpp_1_1_spi">spidevpp::Spi</link><link linkend="_class_spidev">Spidev</link><link linkend="_class_sys_gpio">SysGpio</link><link linkend="_class_threads">Threads</link><link linkend="_structmfrc522_1_1_m_f_r_c522_1_1_uid">mfrc522::MFRC522::Uid</link></section>
