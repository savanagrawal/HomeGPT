<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="class_mood_thread" kind="class" language="C++" prot="public">
    <compoundname>MoodThread</compoundname>
    <basecompoundref refid="class_cpp_thread" prot="public" virt="non-virtual">CppThread</basecompoundref>
    <includes refid="_mood_thread_8h" local="no">MoodThread.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_mood_thread_1aa44ca697b033b67b1cffd667404e60ce" prot="private" static="no" mutable="no">
        <type>cv::VideoCapture</type>
        <definition>cv::VideoCapture MoodThread::camera</definition>
        <argsstring></argsstring>
        <name>camera</name>
        <qualifiedname>MoodThread::camera</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/thread/mood-detection/MoodThread.h" line="42" column="26" bodyfile="src/thread/mood-detection/MoodThread.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_mood_thread_1ad521a83d1ffde5246edd2563904e4743" prot="private" static="no" mutable="no">
        <type><ref refid="class_mood_detection" kindref="compound">MoodDetection</ref></type>
        <definition>MoodDetection MoodThread::moodDetection</definition>
        <argsstring></argsstring>
        <name>moodDetection</name>
        <qualifiedname>MoodThread::moodDetection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/thread/mood-detection/MoodThread.h" line="44" column="23" bodyfile="src/thread/mood-detection/MoodThread.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_mood_thread_1a08726d915a8ff3f416d68f58e6c6a2e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MoodThread::MoodThread</definition>
        <argsstring>(cv::VideoCapture camera)</argsstring>
        <name>MoodThread</name>
        <qualifiedname>MoodThread::MoodThread</qualifiedname>
        <param>
          <type>cv::VideoCapture</type>
          <declname>camera</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Contructor for our mood thread.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>camera</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_camera" kindref="compound">Camera</ref> Object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/thread/mood-detection/MoodThread.h" line="27" column="9" bodyfile="src/thread/mood-detection/MoodThread.h" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_mood_thread_1a59724b4a9d28c6ac2df6a55c1139bf71" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MoodThread::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <qualifiedname>MoodThread::stop</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop our thread&apos;s inner functionality. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/thread/mood-detection/MoodThread.h" line="34" column="14" bodyfile="src/thread/mood-detection/MoodThread.h" bodystart="34" bodyend="36"/>
        <references refid="class_mood_detection_1aba994443b5bd0c82346d4f546317b934" compoundref="_mood_detection_8h" startline="82" endline="87">MoodDetection::stop</references>
      </memberdef>
      <memberdef kind="function" id="class_cpp_thread_1a1be46d1be000f41a763289300623c609" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CppThread::start</definition>
        <argsstring>()</argsstring>
        <name>start</name>
        <qualifiedname>CppThread::start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts the thread. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/thread/CppThread.h" line="26" column="13" bodyfile="src/thread/CppThread.h" bodystart="26" bodyend="28"/>
        <references refid="class_cpp_thread_1a792b79e72250710147c452648def4a78">CppThread::run</references>
        <referencedby refid="src_2main_8cpp_1ac0f2228420376f4db7e1274f2b41667c" compoundref="src_2main_8cpp" startline="18" endline="49">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cpp_thread_1a8ff0fda6b913cc53764caef0e1200f3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CppThread::join</definition>
        <argsstring>()</argsstring>
        <name>join</name>
        <qualifiedname>CppThread::join</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Waits for the thread to terminate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/thread/CppThread.h" line="33" column="13" bodyfile="src/thread/CppThread.h" bodystart="33" bodyend="35"/>
        <referencedby refid="src_2main_8cpp_1ac0f2228420376f4db7e1274f2b41667c" compoundref="src_2main_8cpp" startline="18" endline="49">main</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_mood_thread_1a11ebe69a8234c58fdb81e499dcfb7c63" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void MoodThread::run</definition>
        <argsstring>()</argsstring>
        <name>run</name>
        <qualifiedname>MoodThread::run</qualifiedname>
        <reimplements refid="class_cpp_thread_1a792b79e72250710147c452648def4a78">run</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Manage the mood thread runnable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/thread/mood-detection/MoodThread.h" line="39" column="14" bodyfile="src/thread/mood-detection/MoodThread.cpp" bodystart="23" bodyend="32"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Mood Thread to manage mood detection functionality. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Chinmay Nagrale </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CppThread</label>
        <link refid="class_cpp_thread"/>
      </node>
      <node id="1">
        <label>MoodThread</label>
        <link refid="class_mood_thread"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CppThread</label>
        <link refid="class_cpp_thread"/>
      </node>
      <node id="1">
        <label>MoodThread</label>
        <link refid="class_mood_thread"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/thread/mood-detection/MoodThread.h" line="20" column="1" bodyfile="src/thread/mood-detection/MoodThread.h" bodystart="20" bodyend="45"/>
    <listofallmembers>
      <member refid="class_mood_thread_1aa44ca697b033b67b1cffd667404e60ce" prot="private" virt="non-virtual"><scope>MoodThread</scope><name>camera</name></member>
      <member refid="class_cpp_thread_1a8ff0fda6b913cc53764caef0e1200f3f" prot="public" virt="non-virtual"><scope>MoodThread</scope><name>join</name></member>
      <member refid="class_mood_thread_1ad521a83d1ffde5246edd2563904e4743" prot="private" virt="non-virtual"><scope>MoodThread</scope><name>moodDetection</name></member>
      <member refid="class_mood_thread_1a08726d915a8ff3f416d68f58e6c6a2e4" prot="public" virt="non-virtual"><scope>MoodThread</scope><name>MoodThread</name></member>
      <member refid="class_mood_thread_1a11ebe69a8234c58fdb81e499dcfb7c63" prot="private" virt="virtual"><scope>MoodThread</scope><name>run</name></member>
      <member refid="class_cpp_thread_1a1be46d1be000f41a763289300623c609" prot="public" virt="non-virtual"><scope>MoodThread</scope><name>start</name></member>
      <member refid="class_mood_thread_1a59724b4a9d28c6ac2df6a55c1139bf71" prot="public" virt="non-virtual"><scope>MoodThread</scope><name>stop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
