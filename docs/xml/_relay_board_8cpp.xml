<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_relay_board_8cpp" kind="file" language="C++">
    <compoundname>RelayBoard.cpp</compoundname>
    <includes refid="_relay_board_8h" local="yes">RelayBoard.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="3">
        <label>GPIODriver.h</label>
        <link refid="_g_p_i_o_driver_8h"/>
      </node>
      <node id="1">
        <label>src/peripherals/RelayBoard.cpp</label>
        <link refid="_relay_board_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>RelayBoard.h</label>
        <link refid="_relay_board_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Chinmay Nagrale </para>
</simplesect>
<simplesect kind="version"><para>0.1</para>
</simplesect>
This file contains the functions for the Relay Board class. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_relay_board_8h" kindref="compound">RelayBoard.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_relay_board_1aee18a60a8063ebc87331cbb8fbb1a42f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_relay_board_1aee18a60a8063ebc87331cbb8fbb1a42f" kindref="member">RelayBoard::Initialize</ref>(<ref refid="class_g_p_i_o_driver" kindref="compound">GPIODriver</ref><sp/>&amp;driver)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>m_pGPIODriver<sp/>=<sp/>&amp;driver;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Up<sp/>each<sp/>pin<sp/>connected<sp/>to<sp/>Realy<sp/>board</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a314ce5622d8049f62b662b62fd3debe7" kindref="member">SetUpPin</ref>(m_heaterGPIO)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Relay<sp/>Board:<sp/>Error:<sp/>Setting<sp/>Up<sp/>Heater<sp/>GPIO\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a314ce5622d8049f62b662b62fd3debe7" kindref="member">SetUpPin</ref>(m_lightsGPIO)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Relay<sp/>Board:<sp/>Error:<sp/>Setting<sp/>Up<sp/>Ligts<sp/>GPIO\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a314ce5622d8049f62b662b62fd3debe7" kindref="member">SetUpPin</ref>(m_fanGPIO)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Relay<sp/>Board:<sp/>Error:<sp/>Setting<sp/>Up<sp/>Fan<sp/>GPIO\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a314ce5622d8049f62b662b62fd3debe7" kindref="member">SetUpPin</ref>(m_waterPumpGPIO)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Relay<sp/>Board:<sp/>Error:<sp/>Setting<sp/>Up<sp/>Water<sp/>Pump<sp/>GPIO\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_relay_board_1a0ce37124540bae0827a1b81e28841f70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_relay_board_1a0ce37124540bae0827a1b81e28841f70" kindref="member">RelayBoard::Lighting</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a32a483cec3179d1d13acb1dad37b21ad" kindref="member">SetGPIOState</ref>(m_lightsGPIO,<sp/>state);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ret<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Relay<sp/>Board:<sp/>Error:<sp/>Lighting<sp/>GPIO<sp/>state<sp/>change<sp/>unsuccessful!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_relay_board_1aff19bd04e757a2442243d9f863b435ae" kindref="member">m_lightsGPIOState</ref><sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_relay_board_1a32270d45de9d23698cf85fd3224f88c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_relay_board_1a32270d45de9d23698cf85fd3224f88c6" kindref="member">RelayBoard::GetLightingState</ref>()<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a68be60ab1fb0e9c29f60818654766a32" kindref="member">GPIORead</ref>(m_lightsGPIO);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_relay_board_1abdfd142dd723bda5fb961f2b83e04d98" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_relay_board_1abdfd142dd723bda5fb961f2b83e04d98" kindref="member">RelayBoard::Heating</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a32a483cec3179d1d13acb1dad37b21ad" kindref="member">SetGPIOState</ref>(m_heaterGPIO,<sp/>state);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ret<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Relay<sp/>Board:<sp/>Error:<sp/>Heating<sp/>GPIO<sp/>state<sp/>change<sp/>unsuccessful!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_relay_board_1acda1026ec1a4a11016812efc2e7fe732" kindref="member">m_heaterGPIOState</ref><sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_relay_board_1a4725ac8db57d591dbe338f646cdda254" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_relay_board_1a4725ac8db57d591dbe338f646cdda254" kindref="member">RelayBoard::GetHeatingState</ref>()<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a68be60ab1fb0e9c29f60818654766a32" kindref="member">GPIORead</ref>(m_heaterGPIO);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_relay_board_1aa14251b65f8b4872cdf95c56951f0959" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_relay_board_1aa14251b65f8b4872cdf95c56951f0959" kindref="member">RelayBoard::Airflow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a32a483cec3179d1d13acb1dad37b21ad" kindref="member">SetGPIOState</ref>(m_fanGPIO,<sp/>state);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ret<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Relay<sp/>Board:<sp/>Error:<sp/>Airflow<sp/>GPIO<sp/>state<sp/>change<sp/>unsuccessful!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_relay_board_1a1522a4a160fe47ecd96adf81ba372c98" kindref="member">m_fanGPIOState</ref><sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="class_relay_board_1a4b5cecaeadec360c688868a230a7d3a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_relay_board_1a4b5cecaeadec360c688868a230a7d3a8" kindref="member">RelayBoard::GetAirflowState</ref>()<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a68be60ab1fb0e9c29f60818654766a32" kindref="member">GPIORead</ref>(m_fanGPIO);</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_relay_board_1ab9e7c87d94483e55053722ff0981ff8f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_relay_board_1ab9e7c87d94483e55053722ff0981ff8f" kindref="member">RelayBoard::Watering</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a32a483cec3179d1d13acb1dad37b21ad" kindref="member">SetGPIOState</ref>(m_waterPumpGPIO,<sp/>state);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ret<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Relay<sp/>Board:<sp/>Error:<sp/>Watering<sp/>GPIO<sp/>state<sp/>change<sp/>unsuccessful!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_relay_board_1acf0292f25a47eb8facbec7279c0fa69d" kindref="member">m_waterPumpGPIOState</ref><sp/>=<sp/>state;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_relay_board_1a2f9f8154a49a9d8ed3b7c54c39a5ed65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_relay_board_1a2f9f8154a49a9d8ed3b7c54c39a5ed65" kindref="member">RelayBoard::GetWateringState</ref>()<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a68be60ab1fb0e9c29f60818654766a32" kindref="member">GPIORead</ref>(m_waterPumpGPIO);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_relay_board_1a2339920ca78f22d9bbab349056ca261a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_relay_board_1a2339920ca78f22d9bbab349056ca261a" kindref="member">RelayBoard::Turn_Relays_Off</ref>()<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a32a483cec3179d1d13acb1dad37b21ad" kindref="member">SetGPIOState</ref>(m_heaterGPIO,<sp/>1)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Relay<sp/>Board:<sp/>Error:<sp/>Setting<sp/>Up<sp/>Heater<sp/>GPIO\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a32a483cec3179d1d13acb1dad37b21ad" kindref="member">SetGPIOState</ref>(m_lightsGPIO<sp/>,<sp/>1)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Relay<sp/>Board:<sp/>Error:<sp/>Setting<sp/>Up<sp/>Ligts<sp/>GPIO\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a32a483cec3179d1d13acb1dad37b21ad" kindref="member">SetGPIOState</ref>(m_fanGPIO,<sp/>1)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Relay<sp/>Board:<sp/>Error:<sp/>Setting<sp/>Up<sp/>Fan<sp/>GPIO\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pGPIODriver-&gt;<ref refid="class_g_p_i_o_driver_1a32a483cec3179d1d13acb1dad37b21ad" kindref="member">SetGPIOState</ref>(m_waterPumpGPIO,<sp/>1)<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Relay<sp/>Board:<sp/>Error:<sp/>Setting<sp/>Up<sp/>Water<sp/>Pump<sp/>GPIO\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/peripherals/RelayBoard.cpp"/>
  </compounddef>
</doxygen>
