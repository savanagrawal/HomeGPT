<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classmfrc522_1_1_m_f_r_c522" kind="class" language="C++" prot="public">
    <compoundname>mfrc522::MFRC522</compoundname>
    <includes refid="dependencies_2mfrc522_2mfrc522_8h" local="no">mfrc522.h</includes>
    <innerclass refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key" prot="public">mfrc522::MFRC522::MIFARE_Key</innerclass>
    <innerclass refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" prot="public">mfrc522::MFRC522::Uid</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11" prot="public" static="no" strong="no">
        <type></type>
        <name>PCD_Register</name>
        <qualifiedname>mfrc522::MFRC522::PCD_Register</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" prot="public">
          <name>CommandReg</name>
          <initializer>= 0x01 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2f50c41848a90f7cdf4f0800dcdd43a9" prot="public">
          <name>ComIEnReg</name>
          <initializer>= 0x02 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab0eea90d8cadb6473795b6afa2403916" prot="public">
          <name>DivIEnReg</name>
          <initializer>= 0x03 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a36d880f3febe92018582ed4d147ee406" prot="public">
          <name>ComIrqReg</name>
          <initializer>= 0x04 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a8aa211e282986d84b2e47d67b5bf6337" prot="public">
          <name>DivIrqReg</name>
          <initializer>= 0x05 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6803bc2b2af9b1b60d4b33f25e29a0a" prot="public">
          <name>ErrorReg</name>
          <initializer>= 0x06 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a37caf50e5570a887ebc9958dea7fcea0" prot="public">
          <name>Status1Reg</name>
          <initializer>= 0x07 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a77750cd41045db5305665ccfceb7ca77" prot="public">
          <name>Status2Reg</name>
          <initializer>= 0x08 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" prot="public">
          <name>FIFODataReg</name>
          <initializer>= 0x09 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac" prot="public">
          <name>FIFOLevelReg</name>
          <initializer>= 0x0A &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adba422f51894c1b1d644e6f7d77c8f19" prot="public">
          <name>WaterLevelReg</name>
          <initializer>= 0x0B &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a950cb7f8d39d0d1fe78d1c877a6d44a0" prot="public">
          <name>ControlReg</name>
          <initializer>= 0x0C &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aeef1ebc2d45524d9e3e2327f9cb3066b" prot="public">
          <name>BitFramingReg</name>
          <initializer>= 0x0D &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ac58131928da13c94b3a465c6a0276976" prot="public">
          <name>CollReg</name>
          <initializer>= 0x0E &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3afd4e5e104dc9c24af4687e3d51da56" prot="public">
          <name>ModeReg</name>
          <initializer>= 0x11 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab6cd4c5dcfa675bbf5b2c162d47ba78e" prot="public">
          <name>TxModeReg</name>
          <initializer>= 0x12 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ad9f6e967e3390192a00ac4256a56251b" prot="public">
          <name>RxModeReg</name>
          <initializer>= 0x13 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a414850094de7c1e66a844e1a40978a33" prot="public">
          <name>TxControlReg</name>
          <initializer>= 0x14 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2bdde783dcc91f1f456d188f3d4d71a6" prot="public">
          <name>TxASKReg</name>
          <initializer>= 0x15 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ad0479359a7a1697baed406f972601bdd" prot="public">
          <name>TxSelReg</name>
          <initializer>= 0x16 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a033d032ceede4ad4fe79788aa5f6962f" prot="public">
          <name>RxSelReg</name>
          <initializer>= 0x17 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae2d1f8b133337135b58f6d76b9d7033a" prot="public">
          <name>RxThresholdReg</name>
          <initializer>= 0x18 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a703240a6a220c43910e28703a74e3f52" prot="public">
          <name>DemodReg</name>
          <initializer>= 0x19 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a62977c895c8ac99961603aa8dd58c8f6" prot="public">
          <name>MfTxReg</name>
          <initializer>= 0x1C &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab08f244016fd8cfe5c6e40795a056e61" prot="public">
          <name>MfRxReg</name>
          <initializer>= 0x1D &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a1af7727119be183eb6ef7630d659a208" prot="public">
          <name>SerialSpeedReg</name>
          <initializer>= 0x1F &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa16b747cac59415d63c9aa61d4ca2eb1" prot="public">
          <name>CRCResultRegH</name>
          <initializer>= 0x21 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7436bf87e87a12e003f0d36c6ee93c74" prot="public">
          <name>CRCResultRegL</name>
          <initializer>= 0x22 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a9133e895e83898c0132e967eac11733a" prot="public">
          <name>ModWidthReg</name>
          <initializer>= 0x24 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a299d24d290d0d45196a9753fead96fcc" prot="public">
          <name>RFCfgReg</name>
          <initializer>= 0x26 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6857839ec7c1ca85c546cca3a9371b0" prot="public">
          <name>GsNReg</name>
          <initializer>= 0x27 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a1f1437ca4438162e0c1905ca39f9e28a" prot="public">
          <name>CWGsPReg</name>
          <initializer>= 0x28 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11af2f78bc8b98861e3762bfb39e9330410" prot="public">
          <name>ModGsPReg</name>
          <initializer>= 0x29 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a49e463ef0637de855d7f18f1b45d2183" prot="public">
          <name>TModeReg</name>
          <initializer>= 0x2A &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa2858d5ecb5db42b20bf9f26e8a82a85" prot="public">
          <name>TPrescalerReg</name>
          <initializer>= 0x2B &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7bc82b693e1f953c6ece972628b974d0" prot="public">
          <name>TReloadRegH</name>
          <initializer>= 0x2C &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a053386cc993ce5f6432efcf222758356" prot="public">
          <name>TReloadRegL</name>
          <initializer>= 0x2D &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3ac38e27924e94a67fb817a883309183" prot="public">
          <name>TCounterValueRegH</name>
          <initializer>= 0x2E &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa8d709a47229dd8591f5a620fc892cab" prot="public">
          <name>TCounterValueRegL</name>
          <initializer>= 0x2F &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a6995fdac6117f20475b18d8f3ac3b37c" prot="public">
          <name>TestSel1Reg</name>
          <initializer>= 0x31 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aee2f6cf70362951f686e90fb3e935d50" prot="public">
          <name>TestSel2Reg</name>
          <initializer>= 0x32 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa3bebfe547d6c53c3d0efe77a40c9935" prot="public">
          <name>TestPinEnReg</name>
          <initializer>= 0x33 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a94cf3b29f1e8ef62a57563fc6c443fa3" prot="public">
          <name>TestPinValueReg</name>
          <initializer>= 0x34 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a649cac3dfc392bc43209500fb785dc14" prot="public">
          <name>TestBusReg</name>
          <initializer>= 0x35 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7673b1f3f1e0620ba14ab84eca449017" prot="public">
          <name>AutoTestReg</name>
          <initializer>= 0x36 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a987d995305be7f2a8fe9c058ec4bd902" prot="public">
          <name>VersionReg</name>
          <initializer>= 0x37 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a50244824f81dc258ffe75f2cfa79f4f3" prot="public">
          <name>AnalogTestReg</name>
          <initializer>= 0x38 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a38dd71ef93140244120bb7b91f816e68" prot="public">
          <name>TestDAC1Reg</name>
          <initializer>= 0x39 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11abea8ddee770eff435fbb6bacac13a481" prot="public">
          <name>TestDAC2Reg</name>
          <initializer>= 0x3A &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a941ecf7c53cf726968861607c4b5e5f7" prot="public">
          <name>TestADCReg</name>
          <initializer>= 0x3B &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" prot="public">
          <name>CommandReg</name>
          <initializer>= 0x01 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2f50c41848a90f7cdf4f0800dcdd43a9" prot="public">
          <name>ComIEnReg</name>
          <initializer>= 0x02 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab0eea90d8cadb6473795b6afa2403916" prot="public">
          <name>DivIEnReg</name>
          <initializer>= 0x03 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a36d880f3febe92018582ed4d147ee406" prot="public">
          <name>ComIrqReg</name>
          <initializer>= 0x04 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a8aa211e282986d84b2e47d67b5bf6337" prot="public">
          <name>DivIrqReg</name>
          <initializer>= 0x05 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6803bc2b2af9b1b60d4b33f25e29a0a" prot="public">
          <name>ErrorReg</name>
          <initializer>= 0x06 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a37caf50e5570a887ebc9958dea7fcea0" prot="public">
          <name>Status1Reg</name>
          <initializer>= 0x07 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a77750cd41045db5305665ccfceb7ca77" prot="public">
          <name>Status2Reg</name>
          <initializer>= 0x08 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" prot="public">
          <name>FIFODataReg</name>
          <initializer>= 0x09 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac" prot="public">
          <name>FIFOLevelReg</name>
          <initializer>= 0x0A &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adba422f51894c1b1d644e6f7d77c8f19" prot="public">
          <name>WaterLevelReg</name>
          <initializer>= 0x0B &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a950cb7f8d39d0d1fe78d1c877a6d44a0" prot="public">
          <name>ControlReg</name>
          <initializer>= 0x0C &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aeef1ebc2d45524d9e3e2327f9cb3066b" prot="public">
          <name>BitFramingReg</name>
          <initializer>= 0x0D &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ac58131928da13c94b3a465c6a0276976" prot="public">
          <name>CollReg</name>
          <initializer>= 0x0E &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3afd4e5e104dc9c24af4687e3d51da56" prot="public">
          <name>ModeReg</name>
          <initializer>= 0x11 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab6cd4c5dcfa675bbf5b2c162d47ba78e" prot="public">
          <name>TxModeReg</name>
          <initializer>= 0x12 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ad9f6e967e3390192a00ac4256a56251b" prot="public">
          <name>RxModeReg</name>
          <initializer>= 0x13 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a414850094de7c1e66a844e1a40978a33" prot="public">
          <name>TxControlReg</name>
          <initializer>= 0x14 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2bdde783dcc91f1f456d188f3d4d71a6" prot="public">
          <name>TxASKReg</name>
          <initializer>= 0x15 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ad0479359a7a1697baed406f972601bdd" prot="public">
          <name>TxSelReg</name>
          <initializer>= 0x16 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a033d032ceede4ad4fe79788aa5f6962f" prot="public">
          <name>RxSelReg</name>
          <initializer>= 0x17 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae2d1f8b133337135b58f6d76b9d7033a" prot="public">
          <name>RxThresholdReg</name>
          <initializer>= 0x18 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a703240a6a220c43910e28703a74e3f52" prot="public">
          <name>DemodReg</name>
          <initializer>= 0x19 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a62977c895c8ac99961603aa8dd58c8f6" prot="public">
          <name>MfTxReg</name>
          <initializer>= 0x1C &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab08f244016fd8cfe5c6e40795a056e61" prot="public">
          <name>MfRxReg</name>
          <initializer>= 0x1D &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a1af7727119be183eb6ef7630d659a208" prot="public">
          <name>SerialSpeedReg</name>
          <initializer>= 0x1F &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa16b747cac59415d63c9aa61d4ca2eb1" prot="public">
          <name>CRCResultRegH</name>
          <initializer>= 0x21 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7436bf87e87a12e003f0d36c6ee93c74" prot="public">
          <name>CRCResultRegL</name>
          <initializer>= 0x22 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a9133e895e83898c0132e967eac11733a" prot="public">
          <name>ModWidthReg</name>
          <initializer>= 0x24 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a299d24d290d0d45196a9753fead96fcc" prot="public">
          <name>RFCfgReg</name>
          <initializer>= 0x26 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6857839ec7c1ca85c546cca3a9371b0" prot="public">
          <name>GsNReg</name>
          <initializer>= 0x27 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a1f1437ca4438162e0c1905ca39f9e28a" prot="public">
          <name>CWGsPReg</name>
          <initializer>= 0x28 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11af2f78bc8b98861e3762bfb39e9330410" prot="public">
          <name>ModGsPReg</name>
          <initializer>= 0x29 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a49e463ef0637de855d7f18f1b45d2183" prot="public">
          <name>TModeReg</name>
          <initializer>= 0x2A &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa2858d5ecb5db42b20bf9f26e8a82a85" prot="public">
          <name>TPrescalerReg</name>
          <initializer>= 0x2B &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7bc82b693e1f953c6ece972628b974d0" prot="public">
          <name>TReloadRegH</name>
          <initializer>= 0x2C &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a053386cc993ce5f6432efcf222758356" prot="public">
          <name>TReloadRegL</name>
          <initializer>= 0x2D &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3ac38e27924e94a67fb817a883309183" prot="public">
          <name>TCounterValueRegH</name>
          <initializer>= 0x2E &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa8d709a47229dd8591f5a620fc892cab" prot="public">
          <name>TCounterValueRegL</name>
          <initializer>= 0x2F &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a6995fdac6117f20475b18d8f3ac3b37c" prot="public">
          <name>TestSel1Reg</name>
          <initializer>= 0x31 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aee2f6cf70362951f686e90fb3e935d50" prot="public">
          <name>TestSel2Reg</name>
          <initializer>= 0x32 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa3bebfe547d6c53c3d0efe77a40c9935" prot="public">
          <name>TestPinEnReg</name>
          <initializer>= 0x33 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a94cf3b29f1e8ef62a57563fc6c443fa3" prot="public">
          <name>TestPinValueReg</name>
          <initializer>= 0x34 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a649cac3dfc392bc43209500fb785dc14" prot="public">
          <name>TestBusReg</name>
          <initializer>= 0x35 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7673b1f3f1e0620ba14ab84eca449017" prot="public">
          <name>AutoTestReg</name>
          <initializer>= 0x36 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a987d995305be7f2a8fe9c058ec4bd902" prot="public">
          <name>VersionReg</name>
          <initializer>= 0x37 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a50244824f81dc258ffe75f2cfa79f4f3" prot="public">
          <name>AnalogTestReg</name>
          <initializer>= 0x38 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a38dd71ef93140244120bb7b91f816e68" prot="public">
          <name>TestDAC1Reg</name>
          <initializer>= 0x39 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11abea8ddee770eff435fbb6bacac13a481" prot="public">
          <name>TestDAC2Reg</name>
          <initializer>= 0x3A &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a941ecf7c53cf726968861607c4b5e5f7" prot="public">
          <name>TestADCReg</name>
          <initializer>= 0x3B &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="50" column="1" bodyfile="src/dependencies/mfrc522/mfrc522.h" bodystart="50" bodyend="122"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1" prot="public" static="no" strong="no">
        <type></type>
        <name>PCD_Command</name>
        <qualifiedname>mfrc522::MFRC522::PCD_Command</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6" prot="public">
          <name>PCD_Idle</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a33f0596a331add734571b0907bb8cd0c" prot="public">
          <name>PCD_Mem</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4520d1c5a6c460b2e3313fb26b93afc3" prot="public">
          <name>PCD_GenerateRandomID</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1aee3289cb1accb952792affb0fc01a814" prot="public">
          <name>PCD_CalcCRC</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a7648059b11bf420c077f83ad6c2df532" prot="public">
          <name>PCD_Transmit</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a1aee4ac74a9b29beb57a6e5947f0b261" prot="public">
          <name>PCD_NoCmdChange</name>
          <initializer>= 0x07</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1af2436d9a2474b647ab1564f3c3ef7b81" prot="public">
          <name>PCD_Receive</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1abef11bde1e2742480aa45fb1a8f99211" prot="public">
          <name>PCD_Transceive</name>
          <initializer>= 0x0C</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4504a068cace1f0b9164b2f3a3255d2b" prot="public">
          <name>PCD_MFAuthent</name>
          <initializer>= 0x0E</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a0e7e9956d273665874c0eaebd8c1557b" prot="public">
          <name>PCD_SoftReset</name>
          <initializer>= 0x0F</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6" prot="public">
          <name>PCD_Idle</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a33f0596a331add734571b0907bb8cd0c" prot="public">
          <name>PCD_Mem</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4520d1c5a6c460b2e3313fb26b93afc3" prot="public">
          <name>PCD_GenerateRandomID</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1aee3289cb1accb952792affb0fc01a814" prot="public">
          <name>PCD_CalcCRC</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a7648059b11bf420c077f83ad6c2df532" prot="public">
          <name>PCD_Transmit</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a1aee4ac74a9b29beb57a6e5947f0b261" prot="public">
          <name>PCD_NoCmdChange</name>
          <initializer>= 0x07</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1af2436d9a2474b647ab1564f3c3ef7b81" prot="public">
          <name>PCD_Receive</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1abef11bde1e2742480aa45fb1a8f99211" prot="public">
          <name>PCD_Transceive</name>
          <initializer>= 0x0C</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4504a068cace1f0b9164b2f3a3255d2b" prot="public">
          <name>PCD_MFAuthent</name>
          <initializer>= 0x0E</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a0e7e9956d273665874c0eaebd8c1557b" prot="public">
          <name>PCD_SoftReset</name>
          <initializer>= 0x0F</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="125" column="1" bodyfile="src/dependencies/mfrc522/mfrc522.h" bodystart="125" bodyend="136"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67" prot="public" static="no" strong="no">
        <type></type>
        <name>PCD_RxGain</name>
        <qualifiedname>mfrc522::MFRC522::PCD_RxGain</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a48d975686baa49a14c64c615165a2648" prot="public">
          <name>RxGain_18dB</name>
          <initializer>= 0x00 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a1f76a9a1002b4f5a214a744fdfd1e485" prot="public">
          <name>RxGain_23dB</name>
          <initializer>= 0x01 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a50c86eecc33ab1bc3ea765b381cbcc4f" prot="public">
          <name>RxGain_18dB_2</name>
          <initializer>= 0x02 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a94f97cd2d56becc29b2f6d2aaf52390e" prot="public">
          <name>RxGain_23dB_2</name>
          <initializer>= 0x03 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a8141508391403bda01e36b1b014bb3df" prot="public">
          <name>RxGain_33dB</name>
          <initializer>= 0x04 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67aeb2fa15224b6a3fc4ff9181771f49d26" prot="public">
          <name>RxGain_38dB</name>
          <initializer>= 0x05 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67af75e837882d2876e7cc43cefe08c658c" prot="public">
          <name>RxGain_43dB</name>
          <initializer>= 0x06 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67abf1cf1c7c0bbc05b36d2039af8edb778" prot="public">
          <name>RxGain_48dB</name>
          <initializer>= 0x07 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a521090cb926c7ec89ac919dc03221ec9" prot="public">
          <name>RxGain_min</name>
          <initializer>= 0x00 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a710cffcf94202bae75baf1446864aa8d" prot="public">
          <name>RxGain_avg</name>
          <initializer>= 0x04 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67aab79eef054b19d0c816203470aa2b00c" prot="public">
          <name>RxGain_max</name>
          <initializer>= 0x07 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a48d975686baa49a14c64c615165a2648" prot="public">
          <name>RxGain_18dB</name>
          <initializer>= 0x00 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a1f76a9a1002b4f5a214a744fdfd1e485" prot="public">
          <name>RxGain_23dB</name>
          <initializer>= 0x01 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a50c86eecc33ab1bc3ea765b381cbcc4f" prot="public">
          <name>RxGain_18dB_2</name>
          <initializer>= 0x02 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a94f97cd2d56becc29b2f6d2aaf52390e" prot="public">
          <name>RxGain_23dB_2</name>
          <initializer>= 0x03 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a8141508391403bda01e36b1b014bb3df" prot="public">
          <name>RxGain_33dB</name>
          <initializer>= 0x04 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67aeb2fa15224b6a3fc4ff9181771f49d26" prot="public">
          <name>RxGain_38dB</name>
          <initializer>= 0x05 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67af75e837882d2876e7cc43cefe08c658c" prot="public">
          <name>RxGain_43dB</name>
          <initializer>= 0x06 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67abf1cf1c7c0bbc05b36d2039af8edb778" prot="public">
          <name>RxGain_48dB</name>
          <initializer>= 0x07 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a521090cb926c7ec89ac919dc03221ec9" prot="public">
          <name>RxGain_min</name>
          <initializer>= 0x00 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a710cffcf94202bae75baf1446864aa8d" prot="public">
          <name>RxGain_avg</name>
          <initializer>= 0x04 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67aab79eef054b19d0c816203470aa2b00c" prot="public">
          <name>RxGain_max</name>
          <initializer>= 0x07 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="140" column="1" bodyfile="src/dependencies/mfrc522/mfrc522.h" bodystart="140" bodyend="152"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40" prot="public" static="no" strong="no">
        <type></type>
        <name>PICC_Command</name>
        <qualifiedname>mfrc522::MFRC522::PICC_Command</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abf8bb05ffb365cb0d01679abc678b7d1" prot="public">
          <name>PICC_CMD_REQA</name>
          <initializer>= 0x26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac69de174e9f3b7d8cc0b3e4b8be978ae" prot="public">
          <name>PICC_CMD_WUPA</name>
          <initializer>= 0x52</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a16883066555df303700ee5b7635a11f0" prot="public">
          <name>PICC_CMD_CT</name>
          <initializer>= 0x88</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac018ecee156fed326cdac2ceb29a38bd" prot="public">
          <name>PICC_CMD_SEL_CL1</name>
          <initializer>= 0x93</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a1eb5f3af0ce3d4728e6efc8f2d6d8a9c" prot="public">
          <name>PICC_CMD_SEL_CL2</name>
          <initializer>= 0x95</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aa3f6c8c1f347fb9fef575e09e6b4d26b" prot="public">
          <name>PICC_CMD_SEL_CL3</name>
          <initializer>= 0x97</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a4571c00e0e50ced328c148c72e8c8c8b" prot="public">
          <name>PICC_CMD_HLTA</name>
          <initializer>= 0x50</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abaeb71903ba91b26195148e8b7080432" prot="public">
          <name>PICC_CMD_MF_AUTH_KEY_A</name>
          <initializer>= 0x60</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaae1e4ebe0ba780376417fa3cbbc492a" prot="public">
          <name>PICC_CMD_MF_AUTH_KEY_B</name>
          <initializer>= 0x61</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a6e7b073f0a517053c124c3e539f97c7d" prot="public">
          <name>PICC_CMD_MF_READ</name>
          <initializer>= 0x30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaa1ee47263d5557db433506506d38644" prot="public">
          <name>PICC_CMD_MF_WRITE</name>
          <initializer>= 0xA0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a23b6cd831f9cf639542261446eaf3e88" prot="public">
          <name>PICC_CMD_MF_DECREMENT</name>
          <initializer>= 0xC0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac206f2ba080fd8bae26a60cf8e9aa0f0" prot="public">
          <name>PICC_CMD_MF_INCREMENT</name>
          <initializer>= 0xC1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a03960da2ba6fe363307249c0ebda4794" prot="public">
          <name>PICC_CMD_MF_RESTORE</name>
          <initializer>= 0xC2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aca11dd8f22ee92e74dea6eccb04acdbf" prot="public">
          <name>PICC_CMD_MF_TRANSFER</name>
          <initializer>= 0xB0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a05ab0577fc5ebef596758d0435caff6a" prot="public">
          <name>PICC_CMD_UL_WRITE</name>
          <initializer>= 0xA2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abf8bb05ffb365cb0d01679abc678b7d1" prot="public">
          <name>PICC_CMD_REQA</name>
          <initializer>= 0x26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac69de174e9f3b7d8cc0b3e4b8be978ae" prot="public">
          <name>PICC_CMD_WUPA</name>
          <initializer>= 0x52</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a16883066555df303700ee5b7635a11f0" prot="public">
          <name>PICC_CMD_CT</name>
          <initializer>= 0x88</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac018ecee156fed326cdac2ceb29a38bd" prot="public">
          <name>PICC_CMD_SEL_CL1</name>
          <initializer>= 0x93</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a1eb5f3af0ce3d4728e6efc8f2d6d8a9c" prot="public">
          <name>PICC_CMD_SEL_CL2</name>
          <initializer>= 0x95</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aa3f6c8c1f347fb9fef575e09e6b4d26b" prot="public">
          <name>PICC_CMD_SEL_CL3</name>
          <initializer>= 0x97</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a4571c00e0e50ced328c148c72e8c8c8b" prot="public">
          <name>PICC_CMD_HLTA</name>
          <initializer>= 0x50</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abaeb71903ba91b26195148e8b7080432" prot="public">
          <name>PICC_CMD_MF_AUTH_KEY_A</name>
          <initializer>= 0x60</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaae1e4ebe0ba780376417fa3cbbc492a" prot="public">
          <name>PICC_CMD_MF_AUTH_KEY_B</name>
          <initializer>= 0x61</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a6e7b073f0a517053c124c3e539f97c7d" prot="public">
          <name>PICC_CMD_MF_READ</name>
          <initializer>= 0x30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaa1ee47263d5557db433506506d38644" prot="public">
          <name>PICC_CMD_MF_WRITE</name>
          <initializer>= 0xA0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a23b6cd831f9cf639542261446eaf3e88" prot="public">
          <name>PICC_CMD_MF_DECREMENT</name>
          <initializer>= 0xC0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac206f2ba080fd8bae26a60cf8e9aa0f0" prot="public">
          <name>PICC_CMD_MF_INCREMENT</name>
          <initializer>= 0xC1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a03960da2ba6fe363307249c0ebda4794" prot="public">
          <name>PICC_CMD_MF_RESTORE</name>
          <initializer>= 0xC2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aca11dd8f22ee92e74dea6eccb04acdbf" prot="public">
          <name>PICC_CMD_MF_TRANSFER</name>
          <initializer>= 0xB0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a05ab0577fc5ebef596758d0435caff6a" prot="public">
          <name>PICC_CMD_UL_WRITE</name>
          <initializer>= 0xA2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="155" column="1" bodyfile="src/dependencies/mfrc522/mfrc522.h" bodystart="155" bodyend="178"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41ca" prot="public" static="no" strong="no">
        <type></type>
        <name>MIFARE_Misc</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Misc</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caaea67bb493542ac43ee33b3dcf32a73d3" prot="public">
          <name>MF_ACK</name>
          <initializer>= 0xA</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caa6b49626dcb7cc58cb460378caf71908f" prot="public">
          <name>MF_KEY_SIZE</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caaea67bb493542ac43ee33b3dcf32a73d3" prot="public">
          <name>MF_ACK</name>
          <initializer>= 0xA</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caa6b49626dcb7cc58cb460378caf71908f" prot="public">
          <name>MF_KEY_SIZE</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="181" column="1" bodyfile="src/dependencies/mfrc522/mfrc522.h" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493" prot="public" static="no" strong="no">
        <type></type>
        <name>PICC_Type</name>
        <qualifiedname>mfrc522::MFRC522::PICC_Type</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a15db395f3889e5937b6d019b1ba4d0e7" prot="public">
          <name>PICC_TYPE_UNKNOWN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a97e77275960067a9507621a414d9ee77" prot="public">
          <name>PICC_TYPE_ISO_14443_4</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a6a7364b7bdd89dfdeb953c9d3e089d38" prot="public">
          <name>PICC_TYPE_ISO_18092</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" prot="public">
          <name>PICC_TYPE_MIFARE_MINI</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" prot="public">
          <name>PICC_TYPE_MIFARE_1K</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" prot="public">
          <name>PICC_TYPE_MIFARE_4K</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493abf543718b1dd9b3a1e067cf7b909a751" prot="public">
          <name>PICC_TYPE_MIFARE_UL</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ac3a75d9038b6298fe8294c1d142e450c" prot="public">
          <name>PICC_TYPE_MIFARE_PLUS</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a275fd46fd853ab8925afb1580ce1c3cb" prot="public">
          <name>PICC_TYPE_TNP3XXX</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ad18c78cf2973ca2f136bfb1ddbc31843" prot="public">
          <name>PICC_TYPE_NOT_COMPLETE</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a15db395f3889e5937b6d019b1ba4d0e7" prot="public">
          <name>PICC_TYPE_UNKNOWN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a97e77275960067a9507621a414d9ee77" prot="public">
          <name>PICC_TYPE_ISO_14443_4</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a6a7364b7bdd89dfdeb953c9d3e089d38" prot="public">
          <name>PICC_TYPE_ISO_18092</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" prot="public">
          <name>PICC_TYPE_MIFARE_MINI</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" prot="public">
          <name>PICC_TYPE_MIFARE_1K</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" prot="public">
          <name>PICC_TYPE_MIFARE_4K</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493abf543718b1dd9b3a1e067cf7b909a751" prot="public">
          <name>PICC_TYPE_MIFARE_UL</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ac3a75d9038b6298fe8294c1d142e450c" prot="public">
          <name>PICC_TYPE_MIFARE_PLUS</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a275fd46fd853ab8925afb1580ce1c3cb" prot="public">
          <name>PICC_TYPE_TNP3XXX</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ad18c78cf2973ca2f136bfb1ddbc31843" prot="public">
          <name>PICC_TYPE_NOT_COMPLETE</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="187" column="1" bodyfile="src/dependencies/mfrc522/mfrc522.h" bodystart="187" bodyend="198"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9e" prot="public" static="no" strong="no">
        <type></type>
        <name>StatusCode</name>
        <qualifiedname>mfrc522::MFRC522::StatusCode</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" prot="public">
          <name>STATUS_OK</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" prot="public">
          <name>STATUS_ERROR</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" prot="public">
          <name>STATUS_COLLISION</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" prot="public">
          <name>STATUS_TIMEOUT</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" prot="public">
          <name>STATUS_NO_ROOM</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1c572582a06e252ccf3cccdfdaf051b2" prot="public">
          <name>STATUS_INTERNAL_ERROR</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" prot="public">
          <name>STATUS_INVALID</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31" prot="public">
          <name>STATUS_CRC_WRONG</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea991d8d22bd15cb327ce413664f43b314" prot="public">
          <name>STATUS_MIFARE_NACK</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" prot="public">
          <name>STATUS_OK</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" prot="public">
          <name>STATUS_ERROR</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" prot="public">
          <name>STATUS_COLLISION</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" prot="public">
          <name>STATUS_TIMEOUT</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" prot="public">
          <name>STATUS_NO_ROOM</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1c572582a06e252ccf3cccdfdaf051b2" prot="public">
          <name>STATUS_INTERNAL_ERROR</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" prot="public">
          <name>STATUS_INVALID</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31" prot="public">
          <name>STATUS_CRC_WRONG</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea991d8d22bd15cb327ce413664f43b314" prot="public">
          <name>STATUS_MIFARE_NACK</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="201" column="1" bodyfile="src/dependencies/mfrc522/mfrc522.h" bodystart="201" bodyend="211"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11" prot="public" static="no" strong="no">
        <type></type>
        <name>PCD_Register</name>
        <qualifiedname>mfrc522::MFRC522::PCD_Register</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" prot="public">
          <name>CommandReg</name>
          <initializer>= 0x01 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2f50c41848a90f7cdf4f0800dcdd43a9" prot="public">
          <name>ComIEnReg</name>
          <initializer>= 0x02 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab0eea90d8cadb6473795b6afa2403916" prot="public">
          <name>DivIEnReg</name>
          <initializer>= 0x03 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a36d880f3febe92018582ed4d147ee406" prot="public">
          <name>ComIrqReg</name>
          <initializer>= 0x04 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a8aa211e282986d84b2e47d67b5bf6337" prot="public">
          <name>DivIrqReg</name>
          <initializer>= 0x05 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6803bc2b2af9b1b60d4b33f25e29a0a" prot="public">
          <name>ErrorReg</name>
          <initializer>= 0x06 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a37caf50e5570a887ebc9958dea7fcea0" prot="public">
          <name>Status1Reg</name>
          <initializer>= 0x07 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a77750cd41045db5305665ccfceb7ca77" prot="public">
          <name>Status2Reg</name>
          <initializer>= 0x08 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" prot="public">
          <name>FIFODataReg</name>
          <initializer>= 0x09 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac" prot="public">
          <name>FIFOLevelReg</name>
          <initializer>= 0x0A &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adba422f51894c1b1d644e6f7d77c8f19" prot="public">
          <name>WaterLevelReg</name>
          <initializer>= 0x0B &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a950cb7f8d39d0d1fe78d1c877a6d44a0" prot="public">
          <name>ControlReg</name>
          <initializer>= 0x0C &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aeef1ebc2d45524d9e3e2327f9cb3066b" prot="public">
          <name>BitFramingReg</name>
          <initializer>= 0x0D &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ac58131928da13c94b3a465c6a0276976" prot="public">
          <name>CollReg</name>
          <initializer>= 0x0E &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3afd4e5e104dc9c24af4687e3d51da56" prot="public">
          <name>ModeReg</name>
          <initializer>= 0x11 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab6cd4c5dcfa675bbf5b2c162d47ba78e" prot="public">
          <name>TxModeReg</name>
          <initializer>= 0x12 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ad9f6e967e3390192a00ac4256a56251b" prot="public">
          <name>RxModeReg</name>
          <initializer>= 0x13 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a414850094de7c1e66a844e1a40978a33" prot="public">
          <name>TxControlReg</name>
          <initializer>= 0x14 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2bdde783dcc91f1f456d188f3d4d71a6" prot="public">
          <name>TxASKReg</name>
          <initializer>= 0x15 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ad0479359a7a1697baed406f972601bdd" prot="public">
          <name>TxSelReg</name>
          <initializer>= 0x16 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a033d032ceede4ad4fe79788aa5f6962f" prot="public">
          <name>RxSelReg</name>
          <initializer>= 0x17 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae2d1f8b133337135b58f6d76b9d7033a" prot="public">
          <name>RxThresholdReg</name>
          <initializer>= 0x18 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a703240a6a220c43910e28703a74e3f52" prot="public">
          <name>DemodReg</name>
          <initializer>= 0x19 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a62977c895c8ac99961603aa8dd58c8f6" prot="public">
          <name>MfTxReg</name>
          <initializer>= 0x1C &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab08f244016fd8cfe5c6e40795a056e61" prot="public">
          <name>MfRxReg</name>
          <initializer>= 0x1D &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a1af7727119be183eb6ef7630d659a208" prot="public">
          <name>SerialSpeedReg</name>
          <initializer>= 0x1F &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa16b747cac59415d63c9aa61d4ca2eb1" prot="public">
          <name>CRCResultRegH</name>
          <initializer>= 0x21 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7436bf87e87a12e003f0d36c6ee93c74" prot="public">
          <name>CRCResultRegL</name>
          <initializer>= 0x22 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a9133e895e83898c0132e967eac11733a" prot="public">
          <name>ModWidthReg</name>
          <initializer>= 0x24 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a299d24d290d0d45196a9753fead96fcc" prot="public">
          <name>RFCfgReg</name>
          <initializer>= 0x26 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6857839ec7c1ca85c546cca3a9371b0" prot="public">
          <name>GsNReg</name>
          <initializer>= 0x27 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a1f1437ca4438162e0c1905ca39f9e28a" prot="public">
          <name>CWGsPReg</name>
          <initializer>= 0x28 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11af2f78bc8b98861e3762bfb39e9330410" prot="public">
          <name>ModGsPReg</name>
          <initializer>= 0x29 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a49e463ef0637de855d7f18f1b45d2183" prot="public">
          <name>TModeReg</name>
          <initializer>= 0x2A &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa2858d5ecb5db42b20bf9f26e8a82a85" prot="public">
          <name>TPrescalerReg</name>
          <initializer>= 0x2B &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7bc82b693e1f953c6ece972628b974d0" prot="public">
          <name>TReloadRegH</name>
          <initializer>= 0x2C &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a053386cc993ce5f6432efcf222758356" prot="public">
          <name>TReloadRegL</name>
          <initializer>= 0x2D &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3ac38e27924e94a67fb817a883309183" prot="public">
          <name>TCounterValueRegH</name>
          <initializer>= 0x2E &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa8d709a47229dd8591f5a620fc892cab" prot="public">
          <name>TCounterValueRegL</name>
          <initializer>= 0x2F &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a6995fdac6117f20475b18d8f3ac3b37c" prot="public">
          <name>TestSel1Reg</name>
          <initializer>= 0x31 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aee2f6cf70362951f686e90fb3e935d50" prot="public">
          <name>TestSel2Reg</name>
          <initializer>= 0x32 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa3bebfe547d6c53c3d0efe77a40c9935" prot="public">
          <name>TestPinEnReg</name>
          <initializer>= 0x33 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a94cf3b29f1e8ef62a57563fc6c443fa3" prot="public">
          <name>TestPinValueReg</name>
          <initializer>= 0x34 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a649cac3dfc392bc43209500fb785dc14" prot="public">
          <name>TestBusReg</name>
          <initializer>= 0x35 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7673b1f3f1e0620ba14ab84eca449017" prot="public">
          <name>AutoTestReg</name>
          <initializer>= 0x36 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a987d995305be7f2a8fe9c058ec4bd902" prot="public">
          <name>VersionReg</name>
          <initializer>= 0x37 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a50244824f81dc258ffe75f2cfa79f4f3" prot="public">
          <name>AnalogTestReg</name>
          <initializer>= 0x38 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a38dd71ef93140244120bb7b91f816e68" prot="public">
          <name>TestDAC1Reg</name>
          <initializer>= 0x39 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11abea8ddee770eff435fbb6bacac13a481" prot="public">
          <name>TestDAC2Reg</name>
          <initializer>= 0x3A &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a941ecf7c53cf726968861607c4b5e5f7" prot="public">
          <name>TestADCReg</name>
          <initializer>= 0x3B &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" prot="public">
          <name>CommandReg</name>
          <initializer>= 0x01 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2f50c41848a90f7cdf4f0800dcdd43a9" prot="public">
          <name>ComIEnReg</name>
          <initializer>= 0x02 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab0eea90d8cadb6473795b6afa2403916" prot="public">
          <name>DivIEnReg</name>
          <initializer>= 0x03 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a36d880f3febe92018582ed4d147ee406" prot="public">
          <name>ComIrqReg</name>
          <initializer>= 0x04 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a8aa211e282986d84b2e47d67b5bf6337" prot="public">
          <name>DivIrqReg</name>
          <initializer>= 0x05 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6803bc2b2af9b1b60d4b33f25e29a0a" prot="public">
          <name>ErrorReg</name>
          <initializer>= 0x06 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a37caf50e5570a887ebc9958dea7fcea0" prot="public">
          <name>Status1Reg</name>
          <initializer>= 0x07 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a77750cd41045db5305665ccfceb7ca77" prot="public">
          <name>Status2Reg</name>
          <initializer>= 0x08 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" prot="public">
          <name>FIFODataReg</name>
          <initializer>= 0x09 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac" prot="public">
          <name>FIFOLevelReg</name>
          <initializer>= 0x0A &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adba422f51894c1b1d644e6f7d77c8f19" prot="public">
          <name>WaterLevelReg</name>
          <initializer>= 0x0B &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a950cb7f8d39d0d1fe78d1c877a6d44a0" prot="public">
          <name>ControlReg</name>
          <initializer>= 0x0C &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aeef1ebc2d45524d9e3e2327f9cb3066b" prot="public">
          <name>BitFramingReg</name>
          <initializer>= 0x0D &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ac58131928da13c94b3a465c6a0276976" prot="public">
          <name>CollReg</name>
          <initializer>= 0x0E &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3afd4e5e104dc9c24af4687e3d51da56" prot="public">
          <name>ModeReg</name>
          <initializer>= 0x11 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab6cd4c5dcfa675bbf5b2c162d47ba78e" prot="public">
          <name>TxModeReg</name>
          <initializer>= 0x12 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ad9f6e967e3390192a00ac4256a56251b" prot="public">
          <name>RxModeReg</name>
          <initializer>= 0x13 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a414850094de7c1e66a844e1a40978a33" prot="public">
          <name>TxControlReg</name>
          <initializer>= 0x14 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2bdde783dcc91f1f456d188f3d4d71a6" prot="public">
          <name>TxASKReg</name>
          <initializer>= 0x15 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ad0479359a7a1697baed406f972601bdd" prot="public">
          <name>TxSelReg</name>
          <initializer>= 0x16 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a033d032ceede4ad4fe79788aa5f6962f" prot="public">
          <name>RxSelReg</name>
          <initializer>= 0x17 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae2d1f8b133337135b58f6d76b9d7033a" prot="public">
          <name>RxThresholdReg</name>
          <initializer>= 0x18 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a703240a6a220c43910e28703a74e3f52" prot="public">
          <name>DemodReg</name>
          <initializer>= 0x19 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a62977c895c8ac99961603aa8dd58c8f6" prot="public">
          <name>MfTxReg</name>
          <initializer>= 0x1C &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab08f244016fd8cfe5c6e40795a056e61" prot="public">
          <name>MfRxReg</name>
          <initializer>= 0x1D &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a1af7727119be183eb6ef7630d659a208" prot="public">
          <name>SerialSpeedReg</name>
          <initializer>= 0x1F &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa16b747cac59415d63c9aa61d4ca2eb1" prot="public">
          <name>CRCResultRegH</name>
          <initializer>= 0x21 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7436bf87e87a12e003f0d36c6ee93c74" prot="public">
          <name>CRCResultRegL</name>
          <initializer>= 0x22 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a9133e895e83898c0132e967eac11733a" prot="public">
          <name>ModWidthReg</name>
          <initializer>= 0x24 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a299d24d290d0d45196a9753fead96fcc" prot="public">
          <name>RFCfgReg</name>
          <initializer>= 0x26 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6857839ec7c1ca85c546cca3a9371b0" prot="public">
          <name>GsNReg</name>
          <initializer>= 0x27 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a1f1437ca4438162e0c1905ca39f9e28a" prot="public">
          <name>CWGsPReg</name>
          <initializer>= 0x28 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11af2f78bc8b98861e3762bfb39e9330410" prot="public">
          <name>ModGsPReg</name>
          <initializer>= 0x29 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a49e463ef0637de855d7f18f1b45d2183" prot="public">
          <name>TModeReg</name>
          <initializer>= 0x2A &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa2858d5ecb5db42b20bf9f26e8a82a85" prot="public">
          <name>TPrescalerReg</name>
          <initializer>= 0x2B &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7bc82b693e1f953c6ece972628b974d0" prot="public">
          <name>TReloadRegH</name>
          <initializer>= 0x2C &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a053386cc993ce5f6432efcf222758356" prot="public">
          <name>TReloadRegL</name>
          <initializer>= 0x2D &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3ac38e27924e94a67fb817a883309183" prot="public">
          <name>TCounterValueRegH</name>
          <initializer>= 0x2E &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa8d709a47229dd8591f5a620fc892cab" prot="public">
          <name>TCounterValueRegL</name>
          <initializer>= 0x2F &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a6995fdac6117f20475b18d8f3ac3b37c" prot="public">
          <name>TestSel1Reg</name>
          <initializer>= 0x31 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aee2f6cf70362951f686e90fb3e935d50" prot="public">
          <name>TestSel2Reg</name>
          <initializer>= 0x32 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa3bebfe547d6c53c3d0efe77a40c9935" prot="public">
          <name>TestPinEnReg</name>
          <initializer>= 0x33 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a94cf3b29f1e8ef62a57563fc6c443fa3" prot="public">
          <name>TestPinValueReg</name>
          <initializer>= 0x34 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a649cac3dfc392bc43209500fb785dc14" prot="public">
          <name>TestBusReg</name>
          <initializer>= 0x35 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7673b1f3f1e0620ba14ab84eca449017" prot="public">
          <name>AutoTestReg</name>
          <initializer>= 0x36 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a987d995305be7f2a8fe9c058ec4bd902" prot="public">
          <name>VersionReg</name>
          <initializer>= 0x37 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a50244824f81dc258ffe75f2cfa79f4f3" prot="public">
          <name>AnalogTestReg</name>
          <initializer>= 0x38 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a38dd71ef93140244120bb7b91f816e68" prot="public">
          <name>TestDAC1Reg</name>
          <initializer>= 0x39 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11abea8ddee770eff435fbb6bacac13a481" prot="public">
          <name>TestDAC2Reg</name>
          <initializer>= 0x3A &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a941ecf7c53cf726968861607c4b5e5f7" prot="public">
          <name>TestADCReg</name>
          <initializer>= 0x3B &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="50" column="1" bodyfile="src/peripherals/MFRC522.h" bodystart="50" bodyend="122"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1" prot="public" static="no" strong="no">
        <type></type>
        <name>PCD_Command</name>
        <qualifiedname>mfrc522::MFRC522::PCD_Command</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6" prot="public">
          <name>PCD_Idle</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a33f0596a331add734571b0907bb8cd0c" prot="public">
          <name>PCD_Mem</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4520d1c5a6c460b2e3313fb26b93afc3" prot="public">
          <name>PCD_GenerateRandomID</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1aee3289cb1accb952792affb0fc01a814" prot="public">
          <name>PCD_CalcCRC</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a7648059b11bf420c077f83ad6c2df532" prot="public">
          <name>PCD_Transmit</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a1aee4ac74a9b29beb57a6e5947f0b261" prot="public">
          <name>PCD_NoCmdChange</name>
          <initializer>= 0x07</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1af2436d9a2474b647ab1564f3c3ef7b81" prot="public">
          <name>PCD_Receive</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1abef11bde1e2742480aa45fb1a8f99211" prot="public">
          <name>PCD_Transceive</name>
          <initializer>= 0x0C</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4504a068cace1f0b9164b2f3a3255d2b" prot="public">
          <name>PCD_MFAuthent</name>
          <initializer>= 0x0E</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a0e7e9956d273665874c0eaebd8c1557b" prot="public">
          <name>PCD_SoftReset</name>
          <initializer>= 0x0F</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6" prot="public">
          <name>PCD_Idle</name>
          <initializer>= 0x00</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a33f0596a331add734571b0907bb8cd0c" prot="public">
          <name>PCD_Mem</name>
          <initializer>= 0x01</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4520d1c5a6c460b2e3313fb26b93afc3" prot="public">
          <name>PCD_GenerateRandomID</name>
          <initializer>= 0x02</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1aee3289cb1accb952792affb0fc01a814" prot="public">
          <name>PCD_CalcCRC</name>
          <initializer>= 0x03</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a7648059b11bf420c077f83ad6c2df532" prot="public">
          <name>PCD_Transmit</name>
          <initializer>= 0x04</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a1aee4ac74a9b29beb57a6e5947f0b261" prot="public">
          <name>PCD_NoCmdChange</name>
          <initializer>= 0x07</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1af2436d9a2474b647ab1564f3c3ef7b81" prot="public">
          <name>PCD_Receive</name>
          <initializer>= 0x08</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1abef11bde1e2742480aa45fb1a8f99211" prot="public">
          <name>PCD_Transceive</name>
          <initializer>= 0x0C</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4504a068cace1f0b9164b2f3a3255d2b" prot="public">
          <name>PCD_MFAuthent</name>
          <initializer>= 0x0E</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a0e7e9956d273665874c0eaebd8c1557b" prot="public">
          <name>PCD_SoftReset</name>
          <initializer>= 0x0F</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="125" column="1" bodyfile="src/peripherals/MFRC522.h" bodystart="125" bodyend="136"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67" prot="public" static="no" strong="no">
        <type></type>
        <name>PCD_RxGain</name>
        <qualifiedname>mfrc522::MFRC522::PCD_RxGain</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a48d975686baa49a14c64c615165a2648" prot="public">
          <name>RxGain_18dB</name>
          <initializer>= 0x00 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a1f76a9a1002b4f5a214a744fdfd1e485" prot="public">
          <name>RxGain_23dB</name>
          <initializer>= 0x01 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a50c86eecc33ab1bc3ea765b381cbcc4f" prot="public">
          <name>RxGain_18dB_2</name>
          <initializer>= 0x02 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a94f97cd2d56becc29b2f6d2aaf52390e" prot="public">
          <name>RxGain_23dB_2</name>
          <initializer>= 0x03 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a8141508391403bda01e36b1b014bb3df" prot="public">
          <name>RxGain_33dB</name>
          <initializer>= 0x04 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67aeb2fa15224b6a3fc4ff9181771f49d26" prot="public">
          <name>RxGain_38dB</name>
          <initializer>= 0x05 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67af75e837882d2876e7cc43cefe08c658c" prot="public">
          <name>RxGain_43dB</name>
          <initializer>= 0x06 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67abf1cf1c7c0bbc05b36d2039af8edb778" prot="public">
          <name>RxGain_48dB</name>
          <initializer>= 0x07 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a521090cb926c7ec89ac919dc03221ec9" prot="public">
          <name>RxGain_min</name>
          <initializer>= 0x00 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a710cffcf94202bae75baf1446864aa8d" prot="public">
          <name>RxGain_avg</name>
          <initializer>= 0x04 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67aab79eef054b19d0c816203470aa2b00c" prot="public">
          <name>RxGain_max</name>
          <initializer>= 0x07 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a48d975686baa49a14c64c615165a2648" prot="public">
          <name>RxGain_18dB</name>
          <initializer>= 0x00 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a1f76a9a1002b4f5a214a744fdfd1e485" prot="public">
          <name>RxGain_23dB</name>
          <initializer>= 0x01 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a50c86eecc33ab1bc3ea765b381cbcc4f" prot="public">
          <name>RxGain_18dB_2</name>
          <initializer>= 0x02 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a94f97cd2d56becc29b2f6d2aaf52390e" prot="public">
          <name>RxGain_23dB_2</name>
          <initializer>= 0x03 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a8141508391403bda01e36b1b014bb3df" prot="public">
          <name>RxGain_33dB</name>
          <initializer>= 0x04 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67aeb2fa15224b6a3fc4ff9181771f49d26" prot="public">
          <name>RxGain_38dB</name>
          <initializer>= 0x05 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67af75e837882d2876e7cc43cefe08c658c" prot="public">
          <name>RxGain_43dB</name>
          <initializer>= 0x06 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67abf1cf1c7c0bbc05b36d2039af8edb778" prot="public">
          <name>RxGain_48dB</name>
          <initializer>= 0x07 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a521090cb926c7ec89ac919dc03221ec9" prot="public">
          <name>RxGain_min</name>
          <initializer>= 0x00 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a710cffcf94202bae75baf1446864aa8d" prot="public">
          <name>RxGain_avg</name>
          <initializer>= 0x04 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67aab79eef054b19d0c816203470aa2b00c" prot="public">
          <name>RxGain_max</name>
          <initializer>= 0x07 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="140" column="1" bodyfile="src/peripherals/MFRC522.h" bodystart="140" bodyend="152"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40" prot="public" static="no" strong="no">
        <type></type>
        <name>PICC_Command</name>
        <qualifiedname>mfrc522::MFRC522::PICC_Command</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abf8bb05ffb365cb0d01679abc678b7d1" prot="public">
          <name>PICC_CMD_REQA</name>
          <initializer>= 0x26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac69de174e9f3b7d8cc0b3e4b8be978ae" prot="public">
          <name>PICC_CMD_WUPA</name>
          <initializer>= 0x52</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a16883066555df303700ee5b7635a11f0" prot="public">
          <name>PICC_CMD_CT</name>
          <initializer>= 0x88</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac018ecee156fed326cdac2ceb29a38bd" prot="public">
          <name>PICC_CMD_SEL_CL1</name>
          <initializer>= 0x93</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a1eb5f3af0ce3d4728e6efc8f2d6d8a9c" prot="public">
          <name>PICC_CMD_SEL_CL2</name>
          <initializer>= 0x95</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aa3f6c8c1f347fb9fef575e09e6b4d26b" prot="public">
          <name>PICC_CMD_SEL_CL3</name>
          <initializer>= 0x97</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a4571c00e0e50ced328c148c72e8c8c8b" prot="public">
          <name>PICC_CMD_HLTA</name>
          <initializer>= 0x50</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abaeb71903ba91b26195148e8b7080432" prot="public">
          <name>PICC_CMD_MF_AUTH_KEY_A</name>
          <initializer>= 0x60</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaae1e4ebe0ba780376417fa3cbbc492a" prot="public">
          <name>PICC_CMD_MF_AUTH_KEY_B</name>
          <initializer>= 0x61</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a6e7b073f0a517053c124c3e539f97c7d" prot="public">
          <name>PICC_CMD_MF_READ</name>
          <initializer>= 0x30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaa1ee47263d5557db433506506d38644" prot="public">
          <name>PICC_CMD_MF_WRITE</name>
          <initializer>= 0xA0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a23b6cd831f9cf639542261446eaf3e88" prot="public">
          <name>PICC_CMD_MF_DECREMENT</name>
          <initializer>= 0xC0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac206f2ba080fd8bae26a60cf8e9aa0f0" prot="public">
          <name>PICC_CMD_MF_INCREMENT</name>
          <initializer>= 0xC1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a03960da2ba6fe363307249c0ebda4794" prot="public">
          <name>PICC_CMD_MF_RESTORE</name>
          <initializer>= 0xC2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aca11dd8f22ee92e74dea6eccb04acdbf" prot="public">
          <name>PICC_CMD_MF_TRANSFER</name>
          <initializer>= 0xB0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a05ab0577fc5ebef596758d0435caff6a" prot="public">
          <name>PICC_CMD_UL_WRITE</name>
          <initializer>= 0xA2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abf8bb05ffb365cb0d01679abc678b7d1" prot="public">
          <name>PICC_CMD_REQA</name>
          <initializer>= 0x26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac69de174e9f3b7d8cc0b3e4b8be978ae" prot="public">
          <name>PICC_CMD_WUPA</name>
          <initializer>= 0x52</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a16883066555df303700ee5b7635a11f0" prot="public">
          <name>PICC_CMD_CT</name>
          <initializer>= 0x88</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac018ecee156fed326cdac2ceb29a38bd" prot="public">
          <name>PICC_CMD_SEL_CL1</name>
          <initializer>= 0x93</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a1eb5f3af0ce3d4728e6efc8f2d6d8a9c" prot="public">
          <name>PICC_CMD_SEL_CL2</name>
          <initializer>= 0x95</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aa3f6c8c1f347fb9fef575e09e6b4d26b" prot="public">
          <name>PICC_CMD_SEL_CL3</name>
          <initializer>= 0x97</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a4571c00e0e50ced328c148c72e8c8c8b" prot="public">
          <name>PICC_CMD_HLTA</name>
          <initializer>= 0x50</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abaeb71903ba91b26195148e8b7080432" prot="public">
          <name>PICC_CMD_MF_AUTH_KEY_A</name>
          <initializer>= 0x60</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaae1e4ebe0ba780376417fa3cbbc492a" prot="public">
          <name>PICC_CMD_MF_AUTH_KEY_B</name>
          <initializer>= 0x61</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a6e7b073f0a517053c124c3e539f97c7d" prot="public">
          <name>PICC_CMD_MF_READ</name>
          <initializer>= 0x30</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaa1ee47263d5557db433506506d38644" prot="public">
          <name>PICC_CMD_MF_WRITE</name>
          <initializer>= 0xA0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a23b6cd831f9cf639542261446eaf3e88" prot="public">
          <name>PICC_CMD_MF_DECREMENT</name>
          <initializer>= 0xC0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac206f2ba080fd8bae26a60cf8e9aa0f0" prot="public">
          <name>PICC_CMD_MF_INCREMENT</name>
          <initializer>= 0xC1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a03960da2ba6fe363307249c0ebda4794" prot="public">
          <name>PICC_CMD_MF_RESTORE</name>
          <initializer>= 0xC2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aca11dd8f22ee92e74dea6eccb04acdbf" prot="public">
          <name>PICC_CMD_MF_TRANSFER</name>
          <initializer>= 0xB0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a05ab0577fc5ebef596758d0435caff6a" prot="public">
          <name>PICC_CMD_UL_WRITE</name>
          <initializer>= 0xA2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="155" column="1" bodyfile="src/peripherals/MFRC522.h" bodystart="155" bodyend="178"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41ca" prot="public" static="no" strong="no">
        <type></type>
        <name>MIFARE_Misc</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Misc</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caaea67bb493542ac43ee33b3dcf32a73d3" prot="public">
          <name>MF_ACK</name>
          <initializer>= 0xA</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caa6b49626dcb7cc58cb460378caf71908f" prot="public">
          <name>MF_KEY_SIZE</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caaea67bb493542ac43ee33b3dcf32a73d3" prot="public">
          <name>MF_ACK</name>
          <initializer>= 0xA</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caa6b49626dcb7cc58cb460378caf71908f" prot="public">
          <name>MF_KEY_SIZE</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="181" column="1" bodyfile="src/peripherals/MFRC522.h" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493" prot="public" static="no" strong="no">
        <type></type>
        <name>PICC_Type</name>
        <qualifiedname>mfrc522::MFRC522::PICC_Type</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a15db395f3889e5937b6d019b1ba4d0e7" prot="public">
          <name>PICC_TYPE_UNKNOWN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a97e77275960067a9507621a414d9ee77" prot="public">
          <name>PICC_TYPE_ISO_14443_4</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a6a7364b7bdd89dfdeb953c9d3e089d38" prot="public">
          <name>PICC_TYPE_ISO_18092</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" prot="public">
          <name>PICC_TYPE_MIFARE_MINI</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" prot="public">
          <name>PICC_TYPE_MIFARE_1K</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" prot="public">
          <name>PICC_TYPE_MIFARE_4K</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493abf543718b1dd9b3a1e067cf7b909a751" prot="public">
          <name>PICC_TYPE_MIFARE_UL</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ac3a75d9038b6298fe8294c1d142e450c" prot="public">
          <name>PICC_TYPE_MIFARE_PLUS</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a275fd46fd853ab8925afb1580ce1c3cb" prot="public">
          <name>PICC_TYPE_TNP3XXX</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ad18c78cf2973ca2f136bfb1ddbc31843" prot="public">
          <name>PICC_TYPE_NOT_COMPLETE</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a15db395f3889e5937b6d019b1ba4d0e7" prot="public">
          <name>PICC_TYPE_UNKNOWN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a97e77275960067a9507621a414d9ee77" prot="public">
          <name>PICC_TYPE_ISO_14443_4</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a6a7364b7bdd89dfdeb953c9d3e089d38" prot="public">
          <name>PICC_TYPE_ISO_18092</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" prot="public">
          <name>PICC_TYPE_MIFARE_MINI</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" prot="public">
          <name>PICC_TYPE_MIFARE_1K</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" prot="public">
          <name>PICC_TYPE_MIFARE_4K</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493abf543718b1dd9b3a1e067cf7b909a751" prot="public">
          <name>PICC_TYPE_MIFARE_UL</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ac3a75d9038b6298fe8294c1d142e450c" prot="public">
          <name>PICC_TYPE_MIFARE_PLUS</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a275fd46fd853ab8925afb1580ce1c3cb" prot="public">
          <name>PICC_TYPE_TNP3XXX</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ad18c78cf2973ca2f136bfb1ddbc31843" prot="public">
          <name>PICC_TYPE_NOT_COMPLETE</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="187" column="1" bodyfile="src/peripherals/MFRC522.h" bodystart="187" bodyend="198"/>
      </memberdef>
      <memberdef kind="enum" id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9e" prot="public" static="no" strong="no">
        <type></type>
        <name>StatusCode</name>
        <qualifiedname>mfrc522::MFRC522::StatusCode</qualifiedname>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" prot="public">
          <name>STATUS_OK</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" prot="public">
          <name>STATUS_ERROR</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" prot="public">
          <name>STATUS_COLLISION</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" prot="public">
          <name>STATUS_TIMEOUT</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" prot="public">
          <name>STATUS_NO_ROOM</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1c572582a06e252ccf3cccdfdaf051b2" prot="public">
          <name>STATUS_INTERNAL_ERROR</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" prot="public">
          <name>STATUS_INVALID</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31" prot="public">
          <name>STATUS_CRC_WRONG</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea991d8d22bd15cb327ce413664f43b314" prot="public">
          <name>STATUS_MIFARE_NACK</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" prot="public">
          <name>STATUS_OK</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" prot="public">
          <name>STATUS_ERROR</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" prot="public">
          <name>STATUS_COLLISION</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" prot="public">
          <name>STATUS_TIMEOUT</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" prot="public">
          <name>STATUS_NO_ROOM</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1c572582a06e252ccf3cccdfdaf051b2" prot="public">
          <name>STATUS_INTERNAL_ERROR</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" prot="public">
          <name>STATUS_INVALID</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31" prot="public">
          <name>STATUS_CRC_WRONG</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea991d8d22bd15cb327ce413664f43b314" prot="public">
          <name>STATUS_MIFARE_NACK</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="201" column="1" bodyfile="src/peripherals/MFRC522.h" bodystart="201" bodyend="211"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" prot="public" static="no" mutable="no">
        <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref></type>
        <definition>Uid mfrc522::MFRC522::uid</definition>
        <argsstring></argsstring>
        <name>uid</name>
        <qualifiedname>mfrc522::MFRC522::uid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="226" column="5" bodyfile="src/dependencies/mfrc522/mfrc522.h" bodystart="226" bodyend="-1"/>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" compoundref="mfrc522_8cc" startline="1588" endline="1685">MIFARE_SetUid</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" compoundref="mfrc522_8cc" startline="778" endline="798">PCD_Authenticate</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b" compoundref="mfrc522_8cc" startline="1300" endline="1443">PICC_DumpMifareClassicSectorToSerial</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a" compoundref="mfrc522_8cc" startline="1259" endline="1293">PICC_DumpMifareClassicToSerial</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a" compoundref="mfrc522_8cc" startline="1201" endline="1253">PICC_DumpToSerial</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1abc5229168077788c4ba0c67c568f479e" compoundref="mfrc522_8cc" startline="1732" endline="1735">PICC_ReadCardSerial</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" compoundref="mfrc522_8cc" startline="518" endline="726">PICC_Select</referencedby>
        <referencedby refid="class_r_f_i_d_1a91e8d4d6abb74ae099f9144d553db6ed" compoundref="_r_f_i_d_8h" startline="18" endline="64">RFID::RFID</referencedby>
        <referencedby refid="class_r_f_i_d_1a8a7a0e6133646a29c2102cc1b1633650" compoundref="_r_f_i_d_8h" startline="72" endline="110">RFID::start</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmfrc522_1_1_m_f_r_c522_1a05a6e11382dd107aaab12fc2b3fbdb13" prot="public" static="no" mutable="no">
        <type><ref refid="structmfrc522_1_1_i_spi" kindref="compound">ISpi</ref> &amp;</type>
        <definition>ISpi &amp; mfrc522::MFRC522::mSpi</definition>
        <argsstring></argsstring>
        <name>mSpi</name>
        <qualifiedname>mfrc522::MFRC522::mSpi</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="228" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.h" bodystart="228" bodyend="-1"/>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" compoundref="mfrc522_8cc" startline="69" endline="76">PCD_ReadRegister</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" compoundref="mfrc522_8cc" startline="40" endline="49">PCD_WriteRegister</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmfrc522_1_1_m_f_r_c522_1aa2d9006d9f17fb26ee1af3fea5dea2b2" prot="public" static="no" mutable="no">
        <type><ref refid="structmfrc522_1_1_i_gpio" kindref="compound">IGpio</ref> &amp;</type>
        <definition>IGpio &amp; mfrc522::MFRC522::mResetPin</definition>
        <argsstring></argsstring>
        <name>mResetPin</name>
        <qualifiedname>mfrc522::MFRC522::mResetPin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="229" column="7" bodyfile="src/dependencies/mfrc522/mfrc522.h" bodystart="229" bodyend="-1"/>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a9c32316768c27c643781df0d0a0bf248" compoundref="mfrc522_8cc" startline="24" endline="30">MFRC522</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1affff6fd4010044cc4337803de579b4f0" compoundref="mfrc522_8cc" startline="181" endline="199">PCD_Init</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classmfrc522_1_1_m_f_r_c522_1ab27df5c7a8d40f5918edd091621efb92" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>static const uint8_t mfrc522::MFRC522::FIFO_SIZE</definition>
        <argsstring></argsstring>
        <name>FIFO_SIZE</name>
        <qualifiedname>mfrc522::MFRC522::FIFO_SIZE</qualifiedname>
        <initializer>= 64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="232" column="22" bodyfile="src/dependencies/mfrc522/mfrc522.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a9c32316768c27c643781df0d0a0bf248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mfrc522::MFRC522::MFRC522</definition>
        <argsstring>(ISpi &amp;, IGpio &amp;resetPin)</argsstring>
        <name>MFRC522</name>
        <qualifiedname>mfrc522::MFRC522::MFRC522</qualifiedname>
        <param>
          <type><ref refid="structmfrc522_1_1_i_spi" kindref="compound">ISpi</ref> &amp;</type>
          <defname>spi</defname>
        </param>
        <param>
          <type><ref refid="structmfrc522_1_1_i_gpio" kindref="compound">IGpio</ref> &amp;</type>
          <declname>resetPin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="237" column="1" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="24" bodyend="30"/>
        <references refid="structmfrc522_1_1_i_gpio_1a8acb54d4651db39bea52c834b8570be9a53cced8d281a1a0ace3cb6594daaa4f7">mfrc522::IGpio::low</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aa2d9006d9f17fb26ee1af3fea5dea2b2" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="229">mResetPin</references>
        <references refid="structmfrc522_1_1_i_gpio_1a1d5cffeab7b6f7ca38093d98866d1188">mfrc522::IGpio::setValue</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_WriteRegister</definition>
        <argsstring>(uint8_t reg, uint8_t value)</argsstring>
        <name>PCD_WriteRegister</name>
        <qualifiedname>mfrc522::MFRC522::PCD_WriteRegister</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
          <briefdescription><para>The register to write to. One of the PCD_Register enums. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
          <briefdescription><para>The value to write. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes a byte to the specified register in the <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> chip. The interface is described in the datasheet section 8.1.2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="241" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="40" bodyend="49"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a05a6e11382dd107aaab12fc2b3fbdb13" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="228">mSpi</references>
        <references refid="structmfrc522_1_1_i_spi_1a9f98a44742d44089eee210f9d5908bed">mfrc522::ISpi::write</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a984248652522e8fd580a526a7a9b27d9" compoundref="mfrc522_8cc" startline="220" endline="225">PCD_AntennaOn</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" compoundref="mfrc522_8cc" startline="143" endline="171">PCD_CalculateCRC</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" compoundref="mfrc522_8cc" startline="129" endline="135">PCD_ClearRegisterBitMask</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" compoundref="mfrc522_8cc" startline="356" endline="447">PCD_CommunicateWithPICC</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1affff6fd4010044cc4337803de579b4f0" compoundref="mfrc522_8cc" startline="181" endline="199">PCD_Init</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1aabf66fe43403f40968049a2a87f0026d" compoundref="mfrc522_8cc" startline="263" endline="326">PCD_PerformSelfTest</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1aa3a0f87af9a7217c87de0b55592c1c60" compoundref="mfrc522_8cc" startline="204" endline="214">PCD_Reset</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" compoundref="mfrc522_8cc" startline="118" endline="124">PCD_SetRegisterBitMask</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a8f615a621af28925c38122b08ed3d03b" compoundref="mfrc522_8cc" startline="55" endline="63">PCD_WriteRegister</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" compoundref="mfrc522_8cc" startline="518" endline="726">PICC_Select</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a8f615a621af28925c38122b08ed3d03b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_WriteRegister</definition>
        <argsstring>(uint8_t reg, uint8_t count, uint8_t *values)</argsstring>
        <name>PCD_WriteRegister</name>
        <qualifiedname>mfrc522::MFRC522::PCD_WriteRegister</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
          <briefdescription><para>The register to write to. One of the PCD_Register enums. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>count</declname>
          <briefdescription><para>The number of bytes to write to the register </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>values</declname>
          <briefdescription><para>The values to write. Byte array. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes a number of bytes to the specified register in the <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> chip. The interface is described in the datasheet section 8.1.2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="242" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="55" bodyend="63"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" compoundref="mfrc522_8cc" startline="40" endline="49">PCD_WriteRegister</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_ReadRegister</definition>
        <argsstring>(uint8_t reg)</argsstring>
        <name>PCD_ReadRegister</name>
        <qualifiedname>mfrc522::MFRC522::PCD_ReadRegister</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
          <briefdescription><para>The register to read from. One of the PCD_Register enums. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads a byte from the specified register in the <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> chip. The interface is described in the datasheet section 8.1.2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="243" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="69" bodyend="76"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a05a6e11382dd107aaab12fc2b3fbdb13" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="228">mSpi</references>
        <references refid="structmfrc522_1_1_i_spi_1a251598542df9d4026fc28e832d4770ac">mfrc522::ISpi::writeRead</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a984248652522e8fd580a526a7a9b27d9" compoundref="mfrc522_8cc" startline="220" endline="225">PCD_AntennaOn</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" compoundref="mfrc522_8cc" startline="143" endline="171">PCD_CalculateCRC</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" compoundref="mfrc522_8cc" startline="129" endline="135">PCD_ClearRegisterBitMask</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" compoundref="mfrc522_8cc" startline="356" endline="447">PCD_CommunicateWithPICC</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a6df2b2a81b0259de285892bc61f247fc" compoundref="mfrc522_8cc" startline="241" endline="243">PCD_GetAntennaGain</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1aabf66fe43403f40968049a2a87f0026d" compoundref="mfrc522_8cc" startline="263" endline="326">PCD_PerformSelfTest</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1aa3a0f87af9a7217c87de0b55592c1c60" compoundref="mfrc522_8cc" startline="204" endline="214">PCD_Reset</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" compoundref="mfrc522_8cc" startline="118" endline="124">PCD_SetRegisterBitMask</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" compoundref="mfrc522_8cc" startline="518" endline="726">PICC_Select</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a8243247e881823152bfe9295651b0056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_ReadRegister</definition>
        <argsstring>(uint8_t reg, uint8_t count, uint8_t *values, uint8_t rxAlign=0)</argsstring>
        <name>PCD_ReadRegister</name>
        <qualifiedname>mfrc522::MFRC522::PCD_ReadRegister</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
          <briefdescription><para>The register to read from. One of the PCD_Register enums. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>count</declname>
          <briefdescription><para>The number of bytes to read </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>values</declname>
          <briefdescription><para>Byte array to store the values in. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>rxAlign</declname>
          <defval>0</defval>
          <briefdescription><para>Only bit positions rxAlign..7 in values[0] are updated. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads a number of bytes from the specified register in the <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> chip. The interface is described in the datasheet section 8.1.2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="244" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="82" bodyend="113"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a05a6e11382dd107aaab12fc2b3fbdb13" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="228">mSpi</references>
        <references refid="structmfrc522_1_1_i_spi_1a251598542df9d4026fc28e832d4770ac">mfrc522::ISpi::writeRead</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1ac54b5af1f98b9ac438e4164bce8ce927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::setBitMask</definition>
        <argsstring>(unsigned char reg, unsigned char mask)</argsstring>
        <name>setBitMask</name>
        <qualifiedname>mfrc522::MFRC522::setBitMask</qualifiedname>
        <param>
          <type>unsigned char</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="245" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_SetRegisterBitMask</definition>
        <argsstring>(uint8_t reg, uint8_t mask)</argsstring>
        <name>PCD_SetRegisterBitMask</name>
        <qualifiedname>mfrc522::MFRC522::PCD_SetRegisterBitMask</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
          <briefdescription><para>The register to update. One of the PCD_Register enums. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
          <briefdescription><para>The bits to set. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the bits given in mask in register reg. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="246" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="118" bodyend="124"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" compoundref="mfrc522_8cc" startline="69" endline="76">PCD_ReadRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" compoundref="mfrc522_8cc" startline="40" endline="49">PCD_WriteRegister</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" compoundref="mfrc522_8cc" startline="143" endline="171">PCD_CalculateCRC</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" compoundref="mfrc522_8cc" startline="356" endline="447">PCD_CommunicateWithPICC</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1aabf66fe43403f40968049a2a87f0026d" compoundref="mfrc522_8cc" startline="263" endline="326">PCD_PerformSelfTest</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a245f57d7ea35bfb3ea818171abb18b4b" compoundref="mfrc522_8cc" startline="250" endline="255">PCD_SetAntennaGain</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_ClearRegisterBitMask</definition>
        <argsstring>(uint8_t reg, uint8_t mask)</argsstring>
        <name>PCD_ClearRegisterBitMask</name>
        <qualifiedname>mfrc522::MFRC522::PCD_ClearRegisterBitMask</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
          <briefdescription><para>The register to update. One of the PCD_Register enums. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
          <briefdescription><para>The bits to clear. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears the bits given in mask from register reg. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="247" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="129" bodyend="135"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" compoundref="mfrc522_8cc" startline="69" endline="76">PCD_ReadRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" compoundref="mfrc522_8cc" startline="40" endline="49">PCD_WriteRegister</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a773b673bf8567d2cad97b136b9e269c9" compoundref="mfrc522_8cc" startline="230" endline="232">PCD_AntennaOff</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a245f57d7ea35bfb3ea818171abb18b4b" compoundref="mfrc522_8cc" startline="250" endline="255">PCD_SetAntennaGain</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b" compoundref="mfrc522_8cc" startline="804" endline="807">PCD_StopCrypto1</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775" compoundref="mfrc522_8cc" startline="479" endline="499">PICC_REQA_or_WUPA</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" compoundref="mfrc522_8cc" startline="518" endline="726">PICC_Select</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_CalculateCRC</definition>
        <argsstring>(uint8_t *data, uint8_t length, uint8_t *result)</argsstring>
        <name>PCD_CalculateCRC</name>
        <qualifiedname>mfrc522::MFRC522::PCD_CalculateCRC</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
          <briefdescription><para>In: Pointer to the data to transfer to the FIFO for CRC calculation. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>length</declname>
          <briefdescription><para>In: The number of bytes to transfer. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>result</declname>
          <briefdescription><para>Out: Pointer to result buffer. Result is written to result[0..1], low byte first. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use the CRC coprocessor in the <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> to calculate a CRC_A.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="248" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="143" bodyend="171"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="53">CommandReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa16b747cac59415d63c9aa61d4ca2eb1" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="89">CRCResultRegH</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7436bf87e87a12e003f0d36c6ee93c74" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="90">CRCResultRegL</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a8aa211e282986d84b2e47d67b5bf6337" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="57">DivIrqReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="61">FIFODataReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="62">FIFOLevelReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1aee3289cb1accb952792affb0fc01a814" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="129">PCD_CalcCRC</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="126">PCD_Idle</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" compoundref="mfrc522_8cc" startline="69" endline="76">PCD_ReadRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" compoundref="mfrc522_8cc" startline="118" endline="124">PCD_SetRegisterBitMask</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" compoundref="mfrc522_8cc" startline="40" endline="49">PCD_WriteRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="205">STATUS_TIMEOUT</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" compoundref="mfrc522_8cc" startline="825" endline="847">MIFARE_Read</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" compoundref="mfrc522_8cc" startline="356" endline="447">PCD_CommunicateWithPICC</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" compoundref="mfrc522_8cc" startline="1081" endline="1120">PCD_MIFARE_Transceive</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" compoundref="mfrc522_8cc" startline="733" endline="759">PICC_HaltA</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" compoundref="mfrc522_8cc" startline="518" endline="726">PICC_Select</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1affff6fd4010044cc4337803de579b4f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_Init</definition>
        <argsstring>()</argsstring>
        <name>PCD_Init</name>
        <qualifiedname>mfrc522::MFRC522::PCD_Init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes the <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> chip. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="253" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="181" bodyend="199"/>
        <references refid="structmfrc522_1_1_i_gpio_1a8acb54d4651db39bea52c834b8570be9a8d966b2253a917086c8604959e152243">mfrc522::IGpio::high</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3afd4e5e104dc9c24af4687e3d51da56" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="71">ModeReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aa2d9006d9f17fb26ee1af3fea5dea2b2" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="229">mResetPin</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a984248652522e8fd580a526a7a9b27d9" compoundref="mfrc522_8cc" startline="220" endline="225">PCD_AntennaOn</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" compoundref="mfrc522_8cc" startline="40" endline="49">PCD_WriteRegister</references>
        <references refid="structmfrc522_1_1_i_gpio_1a1d5cffeab7b6f7ca38093d98866d1188">mfrc522::IGpio::setValue</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a49e463ef0637de855d7f18f1b45d2183" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="98">TModeReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa2858d5ecb5db42b20bf9f26e8a82a85" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="99">TPrescalerReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7bc82b693e1f953c6ece972628b974d0" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="100">TReloadRegH</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a053386cc993ce5f6432efcf222758356" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="101">TReloadRegL</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2bdde783dcc91f1f456d188f3d4d71a6" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="75">TxASKReg</references>
        <referencedby refid="class_r_f_i_d_1a91e8d4d6abb74ae099f9144d553db6ed" compoundref="_r_f_i_d_8h" startline="18" endline="64">RFID::RFID</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1aa3a0f87af9a7217c87de0b55592c1c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_Reset</definition>
        <argsstring>()</argsstring>
        <name>PCD_Reset</name>
        <qualifiedname>mfrc522::MFRC522::PCD_Reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performs a soft reset on the <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> chip and waits for it to be ready again. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="254" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="204" bodyend="214"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="53">CommandReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" compoundref="mfrc522_8cc" startline="69" endline="76">PCD_ReadRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a0e7e9956d273665874c0eaebd8c1557b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="135">PCD_SoftReset</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" compoundref="mfrc522_8cc" startline="40" endline="49">PCD_WriteRegister</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1aabf66fe43403f40968049a2a87f0026d" compoundref="mfrc522_8cc" startline="263" endline="326">PCD_PerformSelfTest</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a984248652522e8fd580a526a7a9b27d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_AntennaOn</definition>
        <argsstring>()</argsstring>
        <name>PCD_AntennaOn</name>
        <qualifiedname>mfrc522::MFRC522::PCD_AntennaOn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turns the antenna on by enabling pins TX1 and TX2. After a reset these pins are disabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="255" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="220" bodyend="225"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" compoundref="mfrc522_8cc" startline="69" endline="76">PCD_ReadRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" compoundref="mfrc522_8cc" startline="40" endline="49">PCD_WriteRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a414850094de7c1e66a844e1a40978a33" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="74">TxControlReg</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1affff6fd4010044cc4337803de579b4f0" compoundref="mfrc522_8cc" startline="181" endline="199">PCD_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a773b673bf8567d2cad97b136b9e269c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_AntennaOff</definition>
        <argsstring>()</argsstring>
        <name>PCD_AntennaOff</name>
        <qualifiedname>mfrc522::MFRC522::PCD_AntennaOff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turns the antenna off by disabling pins TX1 and TX2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="256" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="230" bodyend="232"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" compoundref="mfrc522_8cc" startline="129" endline="135">PCD_ClearRegisterBitMask</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a414850094de7c1e66a844e1a40978a33" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="74">TxControlReg</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a6df2b2a81b0259de285892bc61f247fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_GetAntennaGain</definition>
        <argsstring>()</argsstring>
        <name>PCD_GetAntennaGain</name>
        <qualifiedname>mfrc522::MFRC522::PCD_GetAntennaGain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> Receiver Gain (RxGain[2:0]) value. See 9.3.3.6 / table 98 in <ulink url="http://www.nxp.com/documents/data_sheet/MFRC522.pdf">http://www.nxp.com/documents/data_sheet/MFRC522.pdf</ulink> NOTE: Return value scrubbed with (0x07&lt;&lt;4)=01110000b as RCFfgReg may use reserved bits.</para>
<para><simplesect kind="return"><para>Value of the RxGain, scrubbed to the 3 bits used. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="257" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="241" bodyend="243"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" compoundref="mfrc522_8cc" startline="69" endline="76">PCD_ReadRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a299d24d290d0d45196a9753fead96fcc" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="94">RFCfgReg</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a245f57d7ea35bfb3ea818171abb18b4b" compoundref="mfrc522_8cc" startline="250" endline="255">PCD_SetAntennaGain</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a245f57d7ea35bfb3ea818171abb18b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_SetAntennaGain</definition>
        <argsstring>(uint8_t mask)</argsstring>
        <name>PCD_SetAntennaGain</name>
        <qualifiedname>mfrc522::MFRC522::PCD_SetAntennaGain</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> Receiver Gain (RxGain) to value specified by given mask. See 9.3.3.6 / table 98 in <ulink url="http://www.nxp.com/documents/data_sheet/MFRC522.pdf">http://www.nxp.com/documents/data_sheet/MFRC522.pdf</ulink> NOTE: Given mask is scrubbed with (0x07&lt;&lt;4)=01110000b as RCFfgReg may use reserved bits. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="258" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="250" bodyend="255"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" compoundref="mfrc522_8cc" startline="129" endline="135">PCD_ClearRegisterBitMask</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6df2b2a81b0259de285892bc61f247fc" compoundref="mfrc522_8cc" startline="241" endline="243">PCD_GetAntennaGain</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" compoundref="mfrc522_8cc" startline="118" endline="124">PCD_SetRegisterBitMask</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a299d24d290d0d45196a9753fead96fcc" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="94">RFCfgReg</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1aabf66fe43403f40968049a2a87f0026d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mfrc522::MFRC522::PCD_PerformSelfTest</definition>
        <argsstring>()</argsstring>
        <name>PCD_PerformSelfTest</name>
        <qualifiedname>mfrc522::MFRC522::PCD_PerformSelfTest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performs a self-test of the <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> See 16.1.1 in <ulink url="http://www.nxp.com/documents/data_sheet/MFRC522.pdf">http://www.nxp.com/documents/data_sheet/MFRC522.pdf</ulink></para>
<para><simplesect kind="return"><para>Whether or not the test passed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="259" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="263" bodyend="326"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7673b1f3f1e0620ba14ab84eca449017" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="112">AutoTestReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="53">CommandReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a8aa211e282986d84b2e47d67b5bf6337" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="57">DivIrqReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="61">FIFODataReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="62">FIFOLevelReg</references>
        <references refid="namespacemfrc522_1a749840d7381e94883d25086e7fc02a5c" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="21">mfrc522::MFRC522_firmware_referenceV1_0</references>
        <references refid="namespacemfrc522_1aaca23097cb085bc7fb1336ced2e0f592" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="33">mfrc522::MFRC522_firmware_referenceV2_0</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1aee3289cb1accb952792affb0fc01a814" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="129">PCD_CalcCRC</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="126">PCD_Idle</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a33f0596a331add734571b0907bb8cd0c" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="127">PCD_Mem</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" compoundref="mfrc522_8cc" startline="69" endline="76">PCD_ReadRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aa3a0f87af9a7217c87de0b55592c1c60" compoundref="mfrc522_8cc" startline="204" endline="214">PCD_Reset</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" compoundref="mfrc522_8cc" startline="118" endline="124">PCD_SetRegisterBitMask</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" compoundref="mfrc522_8cc" startline="40" endline="49">PCD_WriteRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a987d995305be7f2a8fe9c058ec4bd902" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="113">VersionReg</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_TransceiveData</definition>
        <argsstring>(uint8_t *sendData, uint8_t sendLen, uint8_t *backData, uint8_t *backLen, uint8_t *validBits=NULL, uint8_t rxAlign=0, bool checkCRC=false)</argsstring>
        <name>PCD_TransceiveData</name>
        <qualifiedname>mfrc522::MFRC522::PCD_TransceiveData</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>sendData</declname>
          <briefdescription><para>Pointer to the data to transfer to the FIFO. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sendLen</declname>
          <briefdescription><para>Number of bytes to transfer to the FIFO. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>backData</declname>
          <briefdescription><para>NULL or pointer to buffer if data should be read back after executing the command. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>backLen</declname>
          <briefdescription><para>In: Max number of bytes to write to *backData. Out: The number of bytes returned. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>validBits</declname>
          <defval>NULL</defval>
          <briefdescription><para>In/Out: The number of valid bits in the last byte. 0 for 8 valid bits. Default NULL. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>rxAlign</declname>
          <defval>0</defval>
          <briefdescription><para>In: Defines the bit position in backData[0] for the first bit received. Default 0. </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>checkCRC</declname>
          <defval>false</defval>
          <briefdescription><para>In: True =&gt; The last two bytes of the response is assumed to be a CRC_A that must be validated. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes the Transceive command. CRC validation can only be done if backData and backLen are specified.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="264" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="338" bodyend="348"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" compoundref="mfrc522_8cc" startline="356" endline="447">PCD_CommunicateWithPICC</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1abef11bde1e2742480aa45fb1a8f99211" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="133">PCD_Transceive</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" compoundref="mfrc522_8cc" startline="1517" endline="1578">MIFARE_OpenUidBackdoor</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" compoundref="mfrc522_8cc" startline="825" endline="847">MIFARE_Read</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" compoundref="mfrc522_8cc" startline="733" endline="759">PICC_HaltA</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775" compoundref="mfrc522_8cc" startline="479" endline="499">PICC_REQA_or_WUPA</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" compoundref="mfrc522_8cc" startline="518" endline="726">PICC_Select</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_CommunicateWithPICC</definition>
        <argsstring>(uint8_t command, uint8_t waitIRq, uint8_t *sendData, uint8_t sendLen, uint8_t *backData=NULL, uint8_t *backLen=NULL, uint8_t *validBits=NULL, uint8_t rxAlign=0, bool checkCRC=false)</argsstring>
        <name>PCD_CommunicateWithPICC</name>
        <qualifiedname>mfrc522::MFRC522::PCD_CommunicateWithPICC</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
          <briefdescription><para>The command to execute. One of the PCD_Command enums. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>waitIRq</declname>
          <briefdescription><para>The bits in the ComIrqReg register that signals successful completion of the command. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>sendData</declname>
          <briefdescription><para>Pointer to the data to transfer to the FIFO. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sendLen</declname>
          <briefdescription><para>Number of bytes to transfer to the FIFO. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>backData</declname>
          <defval>NULL</defval>
          <briefdescription><para>NULL or pointer to buffer if data should be read back after executing the command. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>backLen</declname>
          <defval>NULL</defval>
          <briefdescription><para>In: Max number of bytes to write to *backData. Out: The number of bytes returned. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>validBits</declname>
          <defval>NULL</defval>
          <briefdescription><para>In/Out: The number of valid bits in the last byte. 0 for 8 valid bits. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>rxAlign</declname>
          <defval>0</defval>
          <briefdescription><para>In: Defines the bit position in backData[0] for the first bit received. Default 0. </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>checkCRC</declname>
          <defval>false</defval>
          <briefdescription><para>In: True =&gt; The last two bytes of the response is assumed to be a CRC_A that must be validated. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transfers data to the <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> FIFO, executes a command, waits for completion and transfers data back from the FIFO. CRC validation can only be done if backData and backLen are specified.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="265" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="356" bodyend="447"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aeef1ebc2d45524d9e3e2327f9cb3066b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="65">BitFramingReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a36d880f3febe92018582ed4d147ee406" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="56">ComIrqReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="53">CommandReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a950cb7f8d39d0d1fe78d1c877a6d44a0" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="64">ControlReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6803bc2b2af9b1b60d4b33f25e29a0a" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="58">ErrorReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="61">FIFODataReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="62">FIFOLevelReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" compoundref="mfrc522_8cc" startline="143" endline="171">PCD_CalculateCRC</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="126">PCD_Idle</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" compoundref="mfrc522_8cc" startline="69" endline="76">PCD_ReadRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" compoundref="mfrc522_8cc" startline="118" endline="124">PCD_SetRegisterBitMask</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1abef11bde1e2742480aa45fb1a8f99211" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="133">PCD_Transceive</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" compoundref="mfrc522_8cc" startline="40" endline="49">PCD_WriteRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="204">STATUS_COLLISION</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="209">STATUS_CRC_WRONG</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="203">STATUS_ERROR</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea991d8d22bd15cb327ce413664f43b314" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="210">STATUS_MIFARE_NACK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="206">STATUS_NO_ROOM</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="205">STATUS_TIMEOUT</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" compoundref="mfrc522_8cc" startline="778" endline="798">PCD_Authenticate</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" compoundref="mfrc522_8cc" startline="1081" endline="1120">PCD_MIFARE_Transceive</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" compoundref="mfrc522_8cc" startline="338" endline="348">PCD_TransceiveData</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a44dd708016d31efc20bd2dbdb1f67aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PICC_RequestA</definition>
        <argsstring>(uint8_t *bufferATQA, uint8_t *bufferSize)</argsstring>
        <name>PICC_RequestA</name>
        <qualifiedname>mfrc522::MFRC522::PICC_RequestA</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>bufferATQA</declname>
          <briefdescription><para>The buffer to store the ATQA (Answer to request) in </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bufferSize</declname>
          <briefdescription><para>Buffer size, at least two bytes. Also number of bytes returned if STATUS_OK. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmits a REQuest command, Type A. Invites PICCs in state IDLE to go to READY and prepare for anticollision or selection. 7 bit frame. Beware: When two PICCs are in the field at the same time I often get STATUS_TIMEOUT - probably due do bad antenna design.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="266" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="455" bodyend="459"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abf8bb05ffb365cb0d01679abc678b7d1" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="157">PICC_CMD_REQA</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775" compoundref="mfrc522_8cc" startline="479" endline="499">PICC_REQA_or_WUPA</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a8b123b82f4f6dffa7a88e8b61f2806a3" compoundref="mfrc522_8cc" startline="1717" endline="1722">PICC_IsNewCardPresent</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1add1b450123e4670d88e0b6cb2ddca0c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PICC_WakeupA</definition>
        <argsstring>(uint8_t *bufferATQA, uint8_t *bufferSize)</argsstring>
        <name>PICC_WakeupA</name>
        <qualifiedname>mfrc522::MFRC522::PICC_WakeupA</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>bufferATQA</declname>
          <briefdescription><para>The buffer to store the ATQA (Answer to request) in </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bufferSize</declname>
          <briefdescription><para>Buffer size, at least two bytes. Also number of bytes returned if STATUS_OK. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmits a Wake-UP command, Type A. Invites PICCs in state IDLE and HALT to go to READY(*) and prepare for anticollision or selection. 7 bit frame. Beware: When two PICCs are in the field at the same time I often get STATUS_TIMEOUT - probably due do bad antenna design.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="267" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="467" bodyend="471"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac69de174e9f3b7d8cc0b3e4b8be978ae" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="158">PICC_CMD_WUPA</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775" compoundref="mfrc522_8cc" startline="479" endline="499">PICC_REQA_or_WUPA</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" compoundref="mfrc522_8cc" startline="1588" endline="1685">MIFARE_SetUid</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PICC_REQA_or_WUPA</definition>
        <argsstring>(uint8_t command, uint8_t *bufferATQA, uint8_t *bufferSize)</argsstring>
        <name>PICC_REQA_or_WUPA</name>
        <qualifiedname>mfrc522::MFRC522::PICC_REQA_or_WUPA</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
          <briefdescription><para>The command to send - PICC_CMD_REQA or PICC_CMD_WUPA </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bufferATQA</declname>
          <briefdescription><para>The buffer to store the ATQA (Answer to request) in </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bufferSize</declname>
          <briefdescription><para>Buffer size, at least two bytes. Also number of bytes returned if STATUS_OK. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmits REQA or WUPA commands. Beware: When two PICCs are in the field at the same time I often get STATUS_TIMEOUT - probably due do bad antenna design.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="268" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="479" bodyend="499"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ac58131928da13c94b3a465c6a0276976" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="66">CollReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" compoundref="mfrc522_8cc" startline="129" endline="135">PCD_ClearRegisterBitMask</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" compoundref="mfrc522_8cc" startline="338" endline="348">PCD_TransceiveData</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="203">STATUS_ERROR</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="206">STATUS_NO_ROOM</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a44dd708016d31efc20bd2dbdb1f67aaf" compoundref="mfrc522_8cc" startline="455" endline="459">PICC_RequestA</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1add1b450123e4670d88e0b6cb2ddca0c7" compoundref="mfrc522_8cc" startline="467" endline="471">PICC_WakeupA</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PICC_Select</definition>
        <argsstring>(Uid *uid, uint8_t validBits=0)</argsstring>
        <name>PICC_Select</name>
        <qualifiedname>mfrc522::MFRC522::PICC_Select</qualifiedname>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> *</type>
          <declname>uid</declname>
          <briefdescription><para>Pointer to <ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> struct. Normally output, but can also be used to supply a known UID. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>validBits</declname>
          <defval>0</defval>
          <briefdescription><para>The number of known UID bits supplied in *uid. Normally 0. If set you must also supply uid-&gt;size. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transmits SELECT/ANTICOLLISION commands to select a single PICC. Before calling this function the PICCs must be placed in the READY(*) state by calling <ref refid="classmfrc522_1_1_m_f_r_c522_1a44dd708016d31efc20bd2dbdb1f67aaf" kindref="member">PICC_RequestA()</ref> or <ref refid="classmfrc522_1_1_m_f_r_c522_1add1b450123e4670d88e0b6cb2ddca0c7" kindref="member">PICC_WakeupA()</ref>. On success:<itemizedlist>
<listitem><para>The chosen PICC is in state ACTIVE(*) and all other PICCs have returned to state IDLE/HALT. (Figure 7 of the ISO/IEC 14443-3 draft.)</para>
</listitem><listitem><para>The UID size and value of the chosen PICC is returned in *uid along with the SAK.</para>
</listitem></itemizedlist>
</para>
<para>A PICC UID consists of 4, 7 or 10 bytes. Only 4 bytes can be specified in a SELECT command, so for the longer UIDs two or three iterations are used: UID size Number of UID bytes Cascade levels Example of PICC ======== =================== ============== =============== single 4 1 MIFARE Classic double 7 2 MIFARE Ultralight triple 10 3 Not currently in use?</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="269" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="518" bodyend="726"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aeef1ebc2d45524d9e3e2327f9cb3066b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="65">BitFramingReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ac58131928da13c94b3a465c6a0276976" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="66">CollReg</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" compoundref="mfrc522_8cc" startline="143" endline="171">PCD_CalculateCRC</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" compoundref="mfrc522_8cc" startline="129" endline="135">PCD_ClearRegisterBitMask</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" compoundref="mfrc522_8cc" startline="69" endline="76">PCD_ReadRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" compoundref="mfrc522_8cc" startline="338" endline="348">PCD_TransceiveData</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" compoundref="mfrc522_8cc" startline="40" endline="49">PCD_WriteRegister</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a16883066555df303700ee5b7635a11f0" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="159">PICC_CMD_CT</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac018ecee156fed326cdac2ceb29a38bd" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="160">PICC_CMD_SEL_CL1</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a1eb5f3af0ce3d4728e6efc8f2d6d8a9c" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="161">PICC_CMD_SEL_CL2</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aa3f6c8c1f347fb9fef575e09e6b4d26b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="162">PICC_CMD_SEL_CL3</references>
        <references refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a765eeb2bc53a0e2a00d5842916241745" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="217">mfrc522::MFRC522::Uid::sak</references>
        <references refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a3d5653ea12fd20b8c755b34cd0ea74de" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="215">mfrc522::MFRC522::Uid::size</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="204">STATUS_COLLISION</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="209">STATUS_CRC_WRONG</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="203">STATUS_ERROR</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1c572582a06e252ccf3cccdfdaf051b2" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="207">STATUS_INTERNAL_ERROR</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="208">STATUS_INVALID</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="226">uid</references>
        <references refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a1e24dca2d0702fbb6352a41cb598a0a9" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="216">mfrc522::MFRC522::Uid::uidByte</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1abc5229168077788c4ba0c67c568f479e" compoundref="mfrc522_8cc" startline="1732" endline="1735">PICC_ReadCardSerial</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PICC_HaltA</definition>
        <argsstring>()</argsstring>
        <name>PICC_HaltA</name>
        <qualifiedname>mfrc522::MFRC522::PICC_HaltA</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instructs a PICC in state ACTIVE(*) to go to state HALT.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="270" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="733" bodyend="759"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" compoundref="mfrc522_8cc" startline="143" endline="171">PCD_CalculateCRC</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" compoundref="mfrc522_8cc" startline="338" endline="348">PCD_TransceiveData</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a4571c00e0e50ced328c148c72e8c8c8b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="163">PICC_CMD_HLTA</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="203">STATUS_ERROR</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="205">STATUS_TIMEOUT</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" compoundref="mfrc522_8cc" startline="1517" endline="1578">MIFARE_OpenUidBackdoor</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a" compoundref="mfrc522_8cc" startline="1259" endline="1293">PICC_DumpMifareClassicToSerial</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a" compoundref="mfrc522_8cc" startline="1201" endline="1253">PICC_DumpToSerial</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_Authenticate</definition>
        <argsstring>(uint8_t command, uint8_t blockAddr, MIFARE_Key *key, Uid *uid)</argsstring>
        <name>PCD_Authenticate</name>
        <qualifiedname>mfrc522::MFRC522::PCD_Authenticate</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
          <briefdescription><para>PICC_CMD_MF_AUTH_KEY_A or PICC_CMD_MF_AUTH_KEY_B </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
          <briefdescription><para>The block number. See numbering in the comments in the .h file. </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key" kindref="compound">MIFARE_Key</ref> *</type>
          <declname>key</declname>
          <briefdescription><para>Pointer to the Crypteo1 key to use (6 bytes) </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> *</type>
          <declname>uid</declname>
          <briefdescription><para>Pointer to <ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> struct. The first 4 bytes of the UID is used. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes the <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> MFAuthent command. This command manages MIFARE authentication to enable a secure communication to any MIFARE Mini, MIFARE 1K and MIFARE 4K card. The authentication is described in the <ref refid="classmfrc522_1_1_m_f_r_c522" kindref="compound">MFRC522</ref> datasheet section 10.3.1.9 and <ulink url="http://www.nxp.com/documents/data_sheet/MF1S503x.pdf">http://www.nxp.com/documents/data_sheet/MF1S503x.pdf</ulink> section 10.1. For use with MIFARE Classic PICCs. The PICC must be selected - ie in state ACTIVE(*) - before calling this function. Remember to call <ref refid="classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b" kindref="member">PCD_StopCrypto1()</ref> after communicating with the authenticated PICC - otherwise no new communications can start.</para>
<para>All keys are set to FFFFFFFFFFFFh at chip delivery.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. Probably STATUS_TIMEOUT if you supply the wrong key. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="275" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="778" bodyend="798"/>
        <references refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key_1aa794e440258b611c8049d4f233b38bb9" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="222">mfrc522::MFRC522::MIFARE_Key::keyByte</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caa6b49626dcb7cc58cb460378caf71908f" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="183">MF_KEY_SIZE</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" compoundref="mfrc522_8cc" startline="356" endline="447">PCD_CommunicateWithPICC</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4504a068cace1f0b9164b2f3a3255d2b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="134">PCD_MFAuthent</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="226">uid</references>
        <references refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a1e24dca2d0702fbb6352a41cb598a0a9" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="216">mfrc522::MFRC522::Uid::uidByte</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" compoundref="mfrc522_8cc" startline="1588" endline="1685">MIFARE_SetUid</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b" compoundref="mfrc522_8cc" startline="1300" endline="1443">PICC_DumpMifareClassicSectorToSerial</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_StopCrypto1</definition>
        <argsstring>()</argsstring>
        <name>PCD_StopCrypto1</name>
        <qualifiedname>mfrc522::MFRC522::PCD_StopCrypto1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Used to exit the PCD from its authenticated state. Remember to call this function after communicating with an authenticated PICC - otherwise no new communications can start. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="276" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="804" bodyend="807"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" compoundref="mfrc522_8cc" startline="129" endline="135">PCD_ClearRegisterBitMask</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a77750cd41045db5305665ccfceb7ca77" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="60">Status2Reg</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" compoundref="mfrc522_8cc" startline="1588" endline="1685">MIFARE_SetUid</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a" compoundref="mfrc522_8cc" startline="1259" endline="1293">PICC_DumpMifareClassicToSerial</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Read</definition>
        <argsstring>(uint8_t blockAddr, uint8_t *buffer, uint8_t *bufferSize)</argsstring>
        <name>MIFARE_Read</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Read</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
          <briefdescription><para>MIFARE Classic: The block (0-0xff) number. MIFARE Ultralight: The first page to return data from. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
          <briefdescription><para>The buffer to store the data in </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bufferSize</declname>
          <briefdescription><para>Buffer size, at least 18 bytes. Also number of bytes returned if STATUS_OK. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads 16 bytes (+ 2 bytes CRC_A) from the active PICC.</para>
<para>For MIFARE Classic the sector containing the block must be authenticated before calling this function.</para>
<para>For MIFARE Ultralight only addresses 00h to 0Fh are decoded. The MF0ICU1 returns a NAK for higher addresses. The MF0ICU1 responds to the READ command by sending 16 bytes starting from the page address defined by the command argument. For example; if blockAddr is 03h then pages 03h, 04h, 05h, 06h are returned. A roll-back is implemented: If blockAddr is 0Eh, then the contents of pages 0Eh, 0Fh, 00h and 01h are returned.</para>
<para>The buffer must be at least 18 bytes because a CRC_A is also returned. Checks the CRC_A before returning STATUS_OK.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="277" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="825" bodyend="847"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" compoundref="mfrc522_8cc" startline="143" endline="171">PCD_CalculateCRC</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" compoundref="mfrc522_8cc" startline="338" endline="348">PCD_TransceiveData</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a6e7b073f0a517053c124c3e539f97c7d" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="169">PICC_CMD_MF_READ</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="206">STATUS_NO_ROOM</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1abf16c5a992c8692c2cf4f65e6ad19a13" compoundref="mfrc522_8cc" startline="1025" endline="1037">MIFARE_GetValue</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" compoundref="mfrc522_8cc" startline="1588" endline="1685">MIFARE_SetUid</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b" compoundref="mfrc522_8cc" startline="1300" endline="1443">PICC_DumpMifareClassicSectorToSerial</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a4ca5c68d509a9ead4d6d551e8c10bd40" compoundref="mfrc522_8cc" startline="1448" endline="1485">PICC_DumpMifareUltralightToSerial</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Write</definition>
        <argsstring>(uint8_t blockAddr, uint8_t *buffer, uint8_t bufferSize)</argsstring>
        <name>MIFARE_Write</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Write</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
          <briefdescription><para>MIFARE Classic: The block (0-0xff) number. MIFARE Ultralight: The page (2-15) to write to. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
          <briefdescription><para>The 16 bytes to write to the PICC </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bufferSize</declname>
          <briefdescription><para>Buffer size, must be at least 16 bytes. Exactly 16 bytes are written. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes 16 bytes to the active PICC.</para>
<para>For MIFARE Classic the sector containing the block must be authenticated before calling this function.</para>
<para>For MIFARE Ultralight the operation is called &quot;COMPATIBILITY WRITE&quot;. Even though 16 bytes are transferred to the Ultralight PICC, only the least significant 4 bytes (bytes 0 to 3) are written to the specified address. It is recommended to set the remaining bytes 04h to 0Fh to all logic 0.<itemizedlist>
<listitem><para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="278" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="860" bodyend="888"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" compoundref="mfrc522_8cc" startline="1081" endline="1120">PCD_MIFARE_Transceive</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaa1ee47263d5557db433506506d38644" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="170">PICC_CMD_MF_WRITE</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="208">STATUS_INVALID</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" compoundref="mfrc522_8cc" startline="1588" endline="1685">MIFARE_SetUid</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a1733fb64ad8fa119e3fe945d6287d059" compoundref="mfrc522_8cc" startline="1050" endline="1069">MIFARE_SetValue</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2ff9002344e9ee1fa0be91d2f56e1d5c" compoundref="mfrc522_8cc" startline="1690" endline="1705">MIFARE_UnbrickUidSector</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a56515c1027c5a471f56b128a1404f437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Decrement</definition>
        <argsstring>(uint8_t blockAddr, long delta)</argsstring>
        <name>MIFARE_Decrement</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Decrement</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
          <briefdescription><para>The block (0-0xff) number. </para>
</briefdescription>
        </param>
        <param>
          <type>long</type>
          <declname>delta</declname>
          <briefdescription><para>This number is subtracted from the value of block blockAddr. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MIFARE Decrement subtracts the delta from the value of the addressed block, and stores the result in a volatile memory. For MIFARE Classic only. The sector containing the block must be authenticated before calling this function. Only for blocks in &quot;value block&quot; mode, ie with access bits [C1 C2 C3] = [110] or [001]. Use <ref refid="classmfrc522_1_1_m_f_r_c522_1a3b85e9b839756a4eb516195ef498ce58" kindref="member">MIFARE_Transfer()</ref> to store the result in a block.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="279" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="928" bodyend="932"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a23b6cd831f9cf639542261446eaf3e88" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="171">PICC_CMD_MF_DECREMENT</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1af3a8dd85230de88fea86fa21d72ab742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Increment</definition>
        <argsstring>(uint8_t blockAddr, long delta)</argsstring>
        <name>MIFARE_Increment</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Increment</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
          <briefdescription><para>The block (0-0xff) number. </para>
</briefdescription>
        </param>
        <param>
          <type>long</type>
          <declname>delta</declname>
          <briefdescription><para>This number is added to the value of block blockAddr. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MIFARE Increment adds the delta to the value of the addressed block, and stores the result in a volatile memory. For MIFARE Classic only. The sector containing the block must be authenticated before calling this function. Only for blocks in &quot;value block&quot; mode, ie with access bits [C1 C2 C3] = [110] or [001]. Use <ref refid="classmfrc522_1_1_m_f_r_c522_1a3b85e9b839756a4eb516195ef498ce58" kindref="member">MIFARE_Transfer()</ref> to store the result in a block.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="280" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="942" bodyend="946"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac206f2ba080fd8bae26a60cf8e9aa0f0" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="172">PICC_CMD_MF_INCREMENT</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1aaba45a947ba5a47f11ab346a764cedaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Restore</definition>
        <argsstring>(uint8_t blockAddr)</argsstring>
        <name>MIFARE_Restore</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Restore</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
          <briefdescription><para>The block (0-0xff) number. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MIFARE Restore copies the value of the addressed block into a volatile memory. For MIFARE Classic only. The sector containing the block must be authenticated before calling this function. Only for blocks in &quot;value block&quot; mode, ie with access bits [C1 C2 C3] = [110] or [001]. Use <ref refid="classmfrc522_1_1_m_f_r_c522_1a3b85e9b839756a4eb516195ef498ce58" kindref="member">MIFARE_Transfer()</ref> to store the result in a block.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="281" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="956" bodyend="961"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a03960da2ba6fe363307249c0ebda4794" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="173">PICC_CMD_MF_RESTORE</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a3b85e9b839756a4eb516195ef498ce58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Transfer</definition>
        <argsstring>(uint8_t blockAddr)</argsstring>
        <name>MIFARE_Transfer</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Transfer</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
          <briefdescription><para>The block (0-0xff) number. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MIFARE Transfer writes the value stored in the volatile memory into one MIFARE Classic block. For MIFARE Classic only. The sector containing the block must be authenticated before calling this function. Only for blocks in &quot;value block&quot; mode, ie with access bits [C1 C2 C3] = [110] or [001].</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="282" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="999" bodyend="1012"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" compoundref="mfrc522_8cc" startline="1081" endline="1120">PCD_MIFARE_Transceive</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aca11dd8f22ee92e74dea6eccb04acdbf" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="174">PICC_CMD_MF_TRANSFER</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1afcd5d913410ed3694fab339f311b93de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Ultralight_Write</definition>
        <argsstring>(uint8_t page, uint8_t *buffer, uint8_t bufferSize)</argsstring>
        <name>MIFARE_Ultralight_Write</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Ultralight_Write</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>page</declname>
          <briefdescription><para>The page (2-15) to write to. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
          <briefdescription><para>The 4 bytes to write to the PICC </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bufferSize</declname>
          <briefdescription><para>Buffer size, must be at least 4 bytes. Exactly 4 bytes are written. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes a 4 byte page to the active MIFARE Ultralight PICC.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="283" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="895" bodyend="918"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" compoundref="mfrc522_8cc" startline="1081" endline="1120">PCD_MIFARE_Transceive</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a05ab0577fc5ebef596758d0435caff6a" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="177">PICC_CMD_UL_WRITE</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="208">STATUS_INVALID</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1abf16c5a992c8692c2cf4f65e6ad19a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_GetValue</definition>
        <argsstring>(uint8_t blockAddr, long *value)</argsstring>
        <name>MIFARE_GetValue</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_GetValue</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper routine to read the current value from a Value Block.</para>
<para>Only for MIFARE Classic and only for blocks in &quot;value block&quot; mode, that is: with access bits [C1 C2 C3] = [110] or [001]. The sector containing the block must be authenticated before calling this function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">blockAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>The block (0x00-0xff) number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Current value of the Value Block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="284" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1025" bodyend="1037"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" compoundref="mfrc522_8cc" startline="825" endline="847">MIFARE_Read</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a1733fb64ad8fa119e3fe945d6287d059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_SetValue</definition>
        <argsstring>(uint8_t blockAddr, long value)</argsstring>
        <name>MIFARE_SetValue</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_SetValue</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper routine to write a specific value into a Value Block.</para>
<para>Only for MIFARE Classic and only for blocks in &quot;value block&quot; mode, that is: with access bits [C1 C2 C3] = [110] or [001]. The sector containing the block must be authenticated before calling this function.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">blockAddr</parametername>
</parameternamelist>
<parameterdescription>
<para>The block (0x00-0xff) number. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>New value of the Value Block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="285" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1050" bodyend="1069"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" compoundref="mfrc522_8cc" startline="860" endline="888">MIFARE_Write</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_MIFARE_Transceive</definition>
        <argsstring>(uint8_t *sendData, uint8_t sendLen, bool acceptTimeout=false)</argsstring>
        <name>PCD_MIFARE_Transceive</name>
        <qualifiedname>mfrc522::MFRC522::PCD_MIFARE_Transceive</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>sendData</declname>
          <briefdescription><para>Pointer to the data to transfer to the FIFO. Do NOT include the CRC_A. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sendLen</declname>
          <briefdescription><para>Number of bytes in sendData. </para>
</briefdescription>
        </param>
        <param>
          <type>bool</type>
          <declname>acceptTimeout</declname>
          <defval>false</defval>
          <briefdescription><para>True =&gt; A timeout is also success </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wrapper for MIFARE protocol communication. Adds CRC_A, executes the Transceive command and checks that the response is MF_ACK or a timeout.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="290" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1081" bodyend="1120"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caaea67bb493542ac43ee33b3dcf32a73d3" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="182">MF_ACK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" compoundref="mfrc522_8cc" startline="143" endline="171">PCD_CalculateCRC</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" compoundref="mfrc522_8cc" startline="356" endline="447">PCD_CommunicateWithPICC</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1abef11bde1e2742480aa45fb1a8f99211" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="133">PCD_Transceive</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="203">STATUS_ERROR</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="208">STATUS_INVALID</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea991d8d22bd15cb327ce413664f43b314" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="210">STATUS_MIFARE_NACK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="205">STATUS_TIMEOUT</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a3b85e9b839756a4eb516195ef498ce58" compoundref="mfrc522_8cc" startline="999" endline="1012">MIFARE_Transfer</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1afcd5d913410ed3694fab339f311b93de" compoundref="mfrc522_8cc" startline="895" endline="918">MIFARE_Ultralight_Write</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" compoundref="mfrc522_8cc" startline="860" endline="888">MIFARE_Write</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>const string mfrc522::MFRC522::GetStatusCodeName</definition>
        <argsstring>(uint8_t code)</argsstring>
        <name>GetStatusCodeName</name>
        <qualifiedname>mfrc522::MFRC522::GetStatusCodeName</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>code</declname>
          <briefdescription><para>One of the StatusCode enums. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a __FlashStringHelper pointer to a status code name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="293" column="14" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1126" bodyend="1140"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="204">STATUS_COLLISION</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="209">STATUS_CRC_WRONG</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="203">STATUS_ERROR</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1c572582a06e252ccf3cccdfdaf051b2" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="207">STATUS_INTERNAL_ERROR</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="208">STATUS_INVALID</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea991d8d22bd15cb327ce413664f43b314" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="210">STATUS_MIFARE_NACK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="206">STATUS_NO_ROOM</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="205">STATUS_TIMEOUT</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" compoundref="mfrc522_8cc" startline="1517" endline="1578">MIFARE_OpenUidBackdoor</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" compoundref="mfrc522_8cc" startline="1588" endline="1685">MIFARE_SetUid</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2ff9002344e9ee1fa0be91d2f56e1d5c" compoundref="mfrc522_8cc" startline="1690" endline="1705">MIFARE_UnbrickUidSector</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b" compoundref="mfrc522_8cc" startline="1300" endline="1443">PICC_DumpMifareClassicSectorToSerial</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a4ca5c68d509a9ead4d6d551e8c10bd40" compoundref="mfrc522_8cc" startline="1448" endline="1485">PICC_DumpMifareUltralightToSerial</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a51d41355c15a2e3aebe43bffc2445212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PICC_GetType</definition>
        <argsstring>(uint8_t sak)</argsstring>
        <name>PICC_GetType</name>
        <qualifiedname>mfrc522::MFRC522::PICC_GetType</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>sak</declname>
          <briefdescription><para>The SAK byte returned from <ref refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" kindref="member">PICC_Select()</ref>. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Translates the SAK (Select Acknowledge) to a PICC type.</para>
<para><simplesect kind="return"><para>PICC_Type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="294" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1147" bodyend="1173"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a97e77275960067a9507621a414d9ee77" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="189">PICC_TYPE_ISO_14443_4</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a6a7364b7bdd89dfdeb953c9d3e089d38" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="190">PICC_TYPE_ISO_18092</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="192">PICC_TYPE_MIFARE_1K</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="193">PICC_TYPE_MIFARE_4K</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="191">PICC_TYPE_MIFARE_MINI</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ac3a75d9038b6298fe8294c1d142e450c" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="195">PICC_TYPE_MIFARE_PLUS</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493abf543718b1dd9b3a1e067cf7b909a751" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="194">PICC_TYPE_MIFARE_UL</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ad18c78cf2973ca2f136bfb1ddbc31843" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="197">PICC_TYPE_NOT_COMPLETE</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a275fd46fd853ab8925afb1580ce1c3cb" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="196">PICC_TYPE_TNP3XXX</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a15db395f3889e5937b6d019b1ba4d0e7" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="188">PICC_TYPE_UNKNOWN</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a" compoundref="mfrc522_8cc" startline="1201" endline="1253">PICC_DumpToSerial</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1ae32295310fef34afe04407f307e583a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>const string mfrc522::MFRC522::PICC_GetTypeName</definition>
        <argsstring>(uint8_t type)</argsstring>
        <name>PICC_GetTypeName</name>
        <qualifiedname>mfrc522::MFRC522::PICC_GetTypeName</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
          <defname>piccType</defname>
          <briefdescription><para>One of the PICC_Type enums. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a String pointer to the PICC type name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="297" column="14" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1179" bodyend="1194"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a97e77275960067a9507621a414d9ee77" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="189">PICC_TYPE_ISO_14443_4</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a6a7364b7bdd89dfdeb953c9d3e089d38" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="190">PICC_TYPE_ISO_18092</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="192">PICC_TYPE_MIFARE_1K</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="193">PICC_TYPE_MIFARE_4K</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="191">PICC_TYPE_MIFARE_MINI</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ac3a75d9038b6298fe8294c1d142e450c" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="195">PICC_TYPE_MIFARE_PLUS</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493abf543718b1dd9b3a1e067cf7b909a751" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="194">PICC_TYPE_MIFARE_UL</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ad18c78cf2973ca2f136bfb1ddbc31843" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="197">PICC_TYPE_NOT_COMPLETE</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a275fd46fd853ab8925afb1580ce1c3cb" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="196">PICC_TYPE_TNP3XXX</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a15db395f3889e5937b6d019b1ba4d0e7" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="188">PICC_TYPE_UNKNOWN</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a" compoundref="mfrc522_8cc" startline="1201" endline="1253">PICC_DumpToSerial</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PICC_DumpToSerial</definition>
        <argsstring>(Uid *uid)</argsstring>
        <name>PICC_DumpToSerial</name>
        <qualifiedname>mfrc522::MFRC522::PICC_DumpToSerial</qualifiedname>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> *</type>
          <declname>uid</declname>
          <briefdescription><para>Pointer to <ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> struct returned from a successful <ref refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" kindref="member">PICC_Select()</ref>. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dumps debug info about the selected PICC to Serial. On success the PICC is halted after dumping the data. For MIFARE Classic the factory default key of 0xFFFFFFFFFFFF is tried. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="298" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1201" bodyend="1253"/>
        <references refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key_1aa794e440258b611c8049d4f233b38bb9" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="222">mfrc522::MFRC522::MIFARE_Key::keyByte</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a" compoundref="mfrc522_8cc" startline="1259" endline="1293">PICC_DumpMifareClassicToSerial</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a4ca5c68d509a9ead4d6d551e8c10bd40" compoundref="mfrc522_8cc" startline="1448" endline="1485">PICC_DumpMifareUltralightToSerial</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a51d41355c15a2e3aebe43bffc2445212" compoundref="mfrc522_8cc" startline="1147" endline="1173">PICC_GetType</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae32295310fef34afe04407f307e583a9" compoundref="mfrc522_8cc" startline="1179" endline="1194">PICC_GetTypeName</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" compoundref="mfrc522_8cc" startline="733" endline="759">PICC_HaltA</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a97e77275960067a9507621a414d9ee77" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="189">PICC_TYPE_ISO_14443_4</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a6a7364b7bdd89dfdeb953c9d3e089d38" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="190">PICC_TYPE_ISO_18092</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="192">PICC_TYPE_MIFARE_1K</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="193">PICC_TYPE_MIFARE_4K</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="191">PICC_TYPE_MIFARE_MINI</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ac3a75d9038b6298fe8294c1d142e450c" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="195">PICC_TYPE_MIFARE_PLUS</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493abf543718b1dd9b3a1e067cf7b909a751" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="194">PICC_TYPE_MIFARE_UL</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ad18c78cf2973ca2f136bfb1ddbc31843" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="197">PICC_TYPE_NOT_COMPLETE</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a275fd46fd853ab8925afb1580ce1c3cb" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="196">PICC_TYPE_TNP3XXX</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a15db395f3889e5937b6d019b1ba4d0e7" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="188">PICC_TYPE_UNKNOWN</references>
        <references refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a765eeb2bc53a0e2a00d5842916241745" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="217">mfrc522::MFRC522::Uid::sak</references>
        <references refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a3d5653ea12fd20b8c755b34cd0ea74de" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="215">mfrc522::MFRC522::Uid::size</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="226">uid</references>
        <references refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a1e24dca2d0702fbb6352a41cb598a0a9" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="216">mfrc522::MFRC522::Uid::uidByte</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PICC_DumpMifareClassicToSerial</definition>
        <argsstring>(Uid *uid, uint8_t piccType, MIFARE_Key *key)</argsstring>
        <name>PICC_DumpMifareClassicToSerial</name>
        <qualifiedname>mfrc522::MFRC522::PICC_DumpMifareClassicToSerial</qualifiedname>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> *</type>
          <declname>uid</declname>
          <briefdescription><para>Pointer to <ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> struct returned from a successful <ref refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" kindref="member">PICC_Select()</ref>. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>piccType</declname>
          <briefdescription><para>One of the PICC_Type enums. </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key" kindref="compound">MIFARE_Key</ref> *</type>
          <declname>key</declname>
          <briefdescription><para>Key A used for all sectors. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dumps memory contents of a MIFARE Classic PICC. On success the PICC is halted after dumping the data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="299" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1259" bodyend="1293"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b" compoundref="mfrc522_8cc" startline="804" endline="807">PCD_StopCrypto1</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b" compoundref="mfrc522_8cc" startline="1300" endline="1443">PICC_DumpMifareClassicSectorToSerial</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" compoundref="mfrc522_8cc" startline="733" endline="759">PICC_HaltA</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="192">PICC_TYPE_MIFARE_1K</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="193">PICC_TYPE_MIFARE_4K</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="191">PICC_TYPE_MIFARE_MINI</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="226">uid</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a" compoundref="mfrc522_8cc" startline="1201" endline="1253">PICC_DumpToSerial</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PICC_DumpMifareClassicSectorToSerial</definition>
        <argsstring>(Uid *uid, MIFARE_Key *key, uint8_t sector)</argsstring>
        <name>PICC_DumpMifareClassicSectorToSerial</name>
        <qualifiedname>mfrc522::MFRC522::PICC_DumpMifareClassicSectorToSerial</qualifiedname>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> *</type>
          <declname>uid</declname>
          <briefdescription><para>Pointer to <ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> struct returned from a successful <ref refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" kindref="member">PICC_Select()</ref>. </para>
</briefdescription>
        </param>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key" kindref="compound">MIFARE_Key</ref> *</type>
          <declname>key</declname>
          <briefdescription><para>Key A for the sector. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sector</declname>
          <briefdescription><para>The sector to dump, 0..39. </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dumps memory contents of a sector of a MIFARE Classic PICC. Uses <ref refid="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" kindref="member">PCD_Authenticate()</ref>, <ref refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" kindref="member">MIFARE_Read()</ref> and PCD_StopCrypto1. Always uses PICC_CMD_MF_AUTH_KEY_A because only Key A can always read the sector trailer access bits. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="300" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1300" bodyend="1443"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" compoundref="mfrc522_8cc" startline="1126" endline="1140">GetStatusCodeName</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" compoundref="mfrc522_8cc" startline="825" endline="847">MIFARE_Read</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" compoundref="mfrc522_8cc" startline="778" endline="798">PCD_Authenticate</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abaeb71903ba91b26195148e8b7080432" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="167">PICC_CMD_MF_AUTH_KEY_A</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="226">uid</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a" compoundref="mfrc522_8cc" startline="1259" endline="1293">PICC_DumpMifareClassicToSerial</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a4ca5c68d509a9ead4d6d551e8c10bd40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PICC_DumpMifareUltralightToSerial</definition>
        <argsstring>()</argsstring>
        <name>PICC_DumpMifareUltralightToSerial</name>
        <qualifiedname>mfrc522::MFRC522::PICC_DumpMifareUltralightToSerial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dumps memory contents of a MIFARE Ultralight PICC. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="301" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1448" bodyend="1485"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" compoundref="mfrc522_8cc" startline="1126" endline="1140">GetStatusCodeName</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" compoundref="mfrc522_8cc" startline="825" endline="847">MIFARE_Read</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a" compoundref="mfrc522_8cc" startline="1201" endline="1253">PICC_DumpToSerial</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a622c5bd3b19e4093ebc774fc3a874f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::MIFARE_SetAccessBits</definition>
        <argsstring>(uint8_t *accessBitBuffer, uint8_t g0, uint8_t g1, uint8_t g2, uint8_t g3)</argsstring>
        <name>MIFARE_SetAccessBits</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_SetAccessBits</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>accessBitBuffer</declname>
          <briefdescription><para>Pointer to byte 6, 7 and 8 in the sector trailer. Bytes [0..2] will be set. </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>g0</declname>
          <briefdescription><para>Access bits [C1 C2 C3] for block 0 (for sectors 0-31) or blocks 0-4 (for sectors 32-39) </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>g1</declname>
          <briefdescription><para>Access bits C1 C2 C3] for block 1 (for sectors 0-31) or blocks 5-9 (for sectors 32-39) </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>g2</declname>
          <briefdescription><para>Access bits C1 C2 C3] for block 2 (for sectors 0-31) or blocks 10-14 (for sectors 32-39) </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>g3</declname>
          <briefdescription><para>Access bits C1 C2 C3] for the sector trailer, block 3 (for sectors 0-31) or block 15 (for sectors 32-39) </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the bit pattern needed for the specified access bits. In the [C1 C2 C3] tupples C1 is MSB (=4) and C3 is LSB (=1). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="302" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1490" bodyend="1503"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mfrc522::MFRC522::MIFARE_OpenUidBackdoor</definition>
        <argsstring>(bool logErrors)</argsstring>
        <name>MIFARE_OpenUidBackdoor</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_OpenUidBackdoor</qualifiedname>
        <param>
          <type>bool</type>
          <declname>logErrors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performs the &quot;magic sequence&quot; needed to get Chinese UID changeable Mifare cards to allow writing to sector 0, where the card UID is stored.</para>
<para>Note that you do not need to have selected the card through REQA or WUPA, this sequence works immediately when the card is in the reader vicinity. This means you can use this method even on &quot;bricked&quot; cards that your reader does not recognise anymore (see <ref refid="classmfrc522_1_1_m_f_r_c522_1a2ff9002344e9ee1fa0be91d2f56e1d5c" kindref="member">MFRC522::MIFARE_UnbrickUidSector</ref>).</para>
<para>Of course with non-bricked devices, you&apos;re free to select them before calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="303" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1517" bodyend="1578"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" compoundref="mfrc522_8cc" startline="1126" endline="1140">GetStatusCodeName</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" compoundref="mfrc522_8cc" startline="338" endline="348">PCD_TransceiveData</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" compoundref="mfrc522_8cc" startline="733" endline="759">PICC_HaltA</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" compoundref="mfrc522_8cc" startline="1588" endline="1685">MIFARE_SetUid</referencedby>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2ff9002344e9ee1fa0be91d2f56e1d5c" compoundref="mfrc522_8cc" startline="1690" endline="1705">MIFARE_UnbrickUidSector</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mfrc522::MFRC522::MIFARE_SetUid</definition>
        <argsstring>(uint8_t *newUid, uint8_t uidSize, bool logErrors)</argsstring>
        <name>MIFARE_SetUid</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_SetUid</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>newUid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>uidSize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>logErrors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads entire block 0, including all manufacturer data, and overwrites that block with the new UID, a freshly calculated BCC, and the original manufacturer data.</para>
<para>It assumes a default KEY A of 0xFFFFFFFFFFFF. Make sure to have selected the card before this function is called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="304" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1588" bodyend="1685"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" compoundref="mfrc522_8cc" startline="1126" endline="1140">GetStatusCodeName</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" compoundref="mfrc522_8cc" startline="1517" endline="1578">MIFARE_OpenUidBackdoor</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" compoundref="mfrc522_8cc" startline="825" endline="847">MIFARE_Read</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" compoundref="mfrc522_8cc" startline="860" endline="888">MIFARE_Write</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" compoundref="mfrc522_8cc" startline="778" endline="798">PCD_Authenticate</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b" compoundref="mfrc522_8cc" startline="804" endline="807">PCD_StopCrypto1</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abaeb71903ba91b26195148e8b7080432" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="167">PICC_CMD_MF_AUTH_KEY_A</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a8b123b82f4f6dffa7a88e8b61f2806a3" compoundref="mfrc522_8cc" startline="1717" endline="1722">PICC_IsNewCardPresent</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1abc5229168077788c4ba0c67c568f479e" compoundref="mfrc522_8cc" startline="1732" endline="1735">PICC_ReadCardSerial</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1add1b450123e4670d88e0b6cb2ddca0c7" compoundref="mfrc522_8cc" startline="467" endline="471">PICC_WakeupA</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="205">STATUS_TIMEOUT</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="226">uid</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a2ff9002344e9ee1fa0be91d2f56e1d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mfrc522::MFRC522::MIFARE_UnbrickUidSector</definition>
        <argsstring>(bool logErrors)</argsstring>
        <name>MIFARE_UnbrickUidSector</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_UnbrickUidSector</qualifiedname>
        <param>
          <type>bool</type>
          <declname>logErrors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resets entire sector 0 to zeroes, so the card can be read again by readers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="305" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1690" bodyend="1705"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" compoundref="mfrc522_8cc" startline="1126" endline="1140">GetStatusCodeName</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" compoundref="mfrc522_8cc" startline="1517" endline="1578">MIFARE_OpenUidBackdoor</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" compoundref="mfrc522_8cc" startline="860" endline="888">MIFARE_Write</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a8b123b82f4f6dffa7a88e8b61f2806a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mfrc522::MFRC522::PICC_IsNewCardPresent</definition>
        <argsstring>()</argsstring>
        <name>PICC_IsNewCardPresent</name>
        <qualifiedname>mfrc522::MFRC522::PICC_IsNewCardPresent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if a PICC responds to PICC_CMD_REQA. Only &quot;new&quot; cards in state IDLE are invited. Sleeping cards in state HALT are ignored.</para>
<para><simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="310" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1717" bodyend="1722"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a44dd708016d31efc20bd2dbdb1f67aaf" compoundref="mfrc522_8cc" startline="455" endline="459">PICC_RequestA</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="204">STATUS_COLLISION</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" compoundref="mfrc522_8cc" startline="1588" endline="1685">MIFARE_SetUid</referencedby>
        <referencedby refid="class_r_f_i_d_1a91e8d4d6abb74ae099f9144d553db6ed" compoundref="_r_f_i_d_8h" startline="18" endline="64">RFID::RFID</referencedby>
        <referencedby refid="class_r_f_i_d_1a8a7a0e6133646a29c2102cc1b1633650" compoundref="_r_f_i_d_8h" startline="72" endline="110">RFID::start</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1abc5229168077788c4ba0c67c568f479e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mfrc522::MFRC522::PICC_ReadCardSerial</definition>
        <argsstring>()</argsstring>
        <name>PICC_ReadCardSerial</name>
        <qualifiedname>mfrc522::MFRC522::PICC_ReadCardSerial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple wrapper around PICC_Select. Returns true if a UID could be read. Remember to call <ref refid="classmfrc522_1_1_m_f_r_c522_1a8b123b82f4f6dffa7a88e8b61f2806a3" kindref="member">PICC_IsNewCardPresent()</ref>, <ref refid="classmfrc522_1_1_m_f_r_c522_1a44dd708016d31efc20bd2dbdb1f67aaf" kindref="member">PICC_RequestA()</ref> or <ref refid="classmfrc522_1_1_m_f_r_c522_1add1b450123e4670d88e0b6cb2ddca0c7" kindref="member">PICC_WakeupA()</ref> first. The read UID is available in the class variable uid.</para>
<para><simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="311" column="6" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="1732" bodyend="1735"/>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" compoundref="mfrc522_8cc" startline="518" endline="726">PICC_Select</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="202">STATUS_OK</references>
        <references refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" compoundref="dependencies_2mfrc522_2mfrc522_8h" startline="226">uid</references>
        <referencedby refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" compoundref="mfrc522_8cc" startline="1588" endline="1685">MIFARE_SetUid</referencedby>
        <referencedby refid="class_r_f_i_d_1a91e8d4d6abb74ae099f9144d553db6ed" compoundref="_r_f_i_d_8h" startline="18" endline="64">RFID::RFID</referencedby>
        <referencedby refid="class_r_f_i_d_1a8a7a0e6133646a29c2102cc1b1633650" compoundref="_r_f_i_d_8h" startline="72" endline="110">RFID::start</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a9c32316768c27c643781df0d0a0bf248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mfrc522::MFRC522::MFRC522</definition>
        <argsstring>(ISpi &amp;, IGpio &amp;resetPin)</argsstring>
        <name>MFRC522</name>
        <qualifiedname>mfrc522::MFRC522::MFRC522</qualifiedname>
        <param>
          <type><ref refid="structmfrc522_1_1_i_spi" kindref="compound">ISpi</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="structmfrc522_1_1_i_gpio" kindref="compound">IGpio</ref> &amp;</type>
          <declname>resetPin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_WriteRegister</definition>
        <argsstring>(uint8_t reg, uint8_t value)</argsstring>
        <name>PCD_WriteRegister</name>
        <qualifiedname>mfrc522::MFRC522::PCD_WriteRegister</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="241" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a8f615a621af28925c38122b08ed3d03b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_WriteRegister</definition>
        <argsstring>(uint8_t reg, uint8_t count, uint8_t *values)</argsstring>
        <name>PCD_WriteRegister</name>
        <qualifiedname>mfrc522::MFRC522::PCD_WriteRegister</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="242" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_ReadRegister</definition>
        <argsstring>(uint8_t reg)</argsstring>
        <name>PCD_ReadRegister</name>
        <qualifiedname>mfrc522::MFRC522::PCD_ReadRegister</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="243" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a8243247e881823152bfe9295651b0056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_ReadRegister</definition>
        <argsstring>(uint8_t reg, uint8_t count, uint8_t *values, uint8_t rxAlign=0)</argsstring>
        <name>PCD_ReadRegister</name>
        <qualifiedname>mfrc522::MFRC522::PCD_ReadRegister</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>rxAlign</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="244" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1ac54b5af1f98b9ac438e4164bce8ce927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::setBitMask</definition>
        <argsstring>(unsigned char reg, unsigned char mask)</argsstring>
        <name>setBitMask</name>
        <qualifiedname>mfrc522::MFRC522::setBitMask</qualifiedname>
        <param>
          <type>unsigned char</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="245" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_SetRegisterBitMask</definition>
        <argsstring>(uint8_t reg, uint8_t mask)</argsstring>
        <name>PCD_SetRegisterBitMask</name>
        <qualifiedname>mfrc522::MFRC522::PCD_SetRegisterBitMask</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="246" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_ClearRegisterBitMask</definition>
        <argsstring>(uint8_t reg, uint8_t mask)</argsstring>
        <name>PCD_ClearRegisterBitMask</name>
        <qualifiedname>mfrc522::MFRC522::PCD_ClearRegisterBitMask</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="247" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_CalculateCRC</definition>
        <argsstring>(uint8_t *data, uint8_t length, uint8_t *result)</argsstring>
        <name>PCD_CalculateCRC</name>
        <qualifiedname>mfrc522::MFRC522::PCD_CalculateCRC</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="248" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1affff6fd4010044cc4337803de579b4f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_Init</definition>
        <argsstring>()</argsstring>
        <name>PCD_Init</name>
        <qualifiedname>mfrc522::MFRC522::PCD_Init</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="253" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1aa3a0f87af9a7217c87de0b55592c1c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_Reset</definition>
        <argsstring>()</argsstring>
        <name>PCD_Reset</name>
        <qualifiedname>mfrc522::MFRC522::PCD_Reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="254" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a984248652522e8fd580a526a7a9b27d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_AntennaOn</definition>
        <argsstring>()</argsstring>
        <name>PCD_AntennaOn</name>
        <qualifiedname>mfrc522::MFRC522::PCD_AntennaOn</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="255" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a773b673bf8567d2cad97b136b9e269c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_AntennaOff</definition>
        <argsstring>()</argsstring>
        <name>PCD_AntennaOff</name>
        <qualifiedname>mfrc522::MFRC522::PCD_AntennaOff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="256" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a6df2b2a81b0259de285892bc61f247fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_GetAntennaGain</definition>
        <argsstring>()</argsstring>
        <name>PCD_GetAntennaGain</name>
        <qualifiedname>mfrc522::MFRC522::PCD_GetAntennaGain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="257" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a245f57d7ea35bfb3ea818171abb18b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_SetAntennaGain</definition>
        <argsstring>(uint8_t mask)</argsstring>
        <name>PCD_SetAntennaGain</name>
        <qualifiedname>mfrc522::MFRC522::PCD_SetAntennaGain</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="258" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1aabf66fe43403f40968049a2a87f0026d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mfrc522::MFRC522::PCD_PerformSelfTest</definition>
        <argsstring>()</argsstring>
        <name>PCD_PerformSelfTest</name>
        <qualifiedname>mfrc522::MFRC522::PCD_PerformSelfTest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="259" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_TransceiveData</definition>
        <argsstring>(uint8_t *sendData, uint8_t sendLen, uint8_t *backData, uint8_t *backLen, uint8_t *validBits=NULL, uint8_t rxAlign=0, bool checkCRC=false)</argsstring>
        <name>PCD_TransceiveData</name>
        <qualifiedname>mfrc522::MFRC522::PCD_TransceiveData</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>sendData</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sendLen</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>backData</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>backLen</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>validBits</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>rxAlign</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>checkCRC</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="264" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_CommunicateWithPICC</definition>
        <argsstring>(uint8_t command, uint8_t waitIRq, uint8_t *sendData, uint8_t sendLen, uint8_t *backData=NULL, uint8_t *backLen=NULL, uint8_t *validBits=NULL, uint8_t rxAlign=0, bool checkCRC=false)</argsstring>
        <name>PCD_CommunicateWithPICC</name>
        <qualifiedname>mfrc522::MFRC522::PCD_CommunicateWithPICC</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>waitIRq</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>sendData</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sendLen</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>backData</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>backLen</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>validBits</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>rxAlign</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>checkCRC</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="265" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a44dd708016d31efc20bd2dbdb1f67aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PICC_RequestA</definition>
        <argsstring>(uint8_t *bufferATQA, uint8_t *bufferSize)</argsstring>
        <name>PICC_RequestA</name>
        <qualifiedname>mfrc522::MFRC522::PICC_RequestA</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>bufferATQA</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="266" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1add1b450123e4670d88e0b6cb2ddca0c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PICC_WakeupA</definition>
        <argsstring>(uint8_t *bufferATQA, uint8_t *bufferSize)</argsstring>
        <name>PICC_WakeupA</name>
        <qualifiedname>mfrc522::MFRC522::PICC_WakeupA</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>bufferATQA</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="267" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PICC_REQA_or_WUPA</definition>
        <argsstring>(uint8_t command, uint8_t *bufferATQA, uint8_t *bufferSize)</argsstring>
        <name>PICC_REQA_or_WUPA</name>
        <qualifiedname>mfrc522::MFRC522::PICC_REQA_or_WUPA</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bufferATQA</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="268" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PICC_Select</definition>
        <argsstring>(Uid *uid, uint8_t validBits=0)</argsstring>
        <name>PICC_Select</name>
        <qualifiedname>mfrc522::MFRC522::PICC_Select</qualifiedname>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>validBits</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="269" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PICC_HaltA</definition>
        <argsstring>()</argsstring>
        <name>PICC_HaltA</name>
        <qualifiedname>mfrc522::MFRC522::PICC_HaltA</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="270" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_Authenticate</definition>
        <argsstring>(uint8_t command, uint8_t blockAddr, MIFARE_Key *key, Uid *uid)</argsstring>
        <name>PCD_Authenticate</name>
        <qualifiedname>mfrc522::MFRC522::PCD_Authenticate</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
        </param>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key" kindref="compound">MIFARE_Key</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> *</type>
          <declname>uid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="275" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PCD_StopCrypto1</definition>
        <argsstring>()</argsstring>
        <name>PCD_StopCrypto1</name>
        <qualifiedname>mfrc522::MFRC522::PCD_StopCrypto1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="276" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Read</definition>
        <argsstring>(uint8_t blockAddr, uint8_t *buffer, uint8_t *bufferSize)</argsstring>
        <name>MIFARE_Read</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Read</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="277" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Write</definition>
        <argsstring>(uint8_t blockAddr, uint8_t *buffer, uint8_t bufferSize)</argsstring>
        <name>MIFARE_Write</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Write</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="278" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a56515c1027c5a471f56b128a1404f437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Decrement</definition>
        <argsstring>(uint8_t blockAddr, long delta)</argsstring>
        <name>MIFARE_Decrement</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Decrement</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="279" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1af3a8dd85230de88fea86fa21d72ab742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Increment</definition>
        <argsstring>(uint8_t blockAddr, long delta)</argsstring>
        <name>MIFARE_Increment</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Increment</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="280" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1aaba45a947ba5a47f11ab346a764cedaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Restore</definition>
        <argsstring>(uint8_t blockAddr)</argsstring>
        <name>MIFARE_Restore</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Restore</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="281" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a3b85e9b839756a4eb516195ef498ce58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Transfer</definition>
        <argsstring>(uint8_t blockAddr)</argsstring>
        <name>MIFARE_Transfer</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Transfer</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="282" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1afcd5d913410ed3694fab339f311b93de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_Ultralight_Write</definition>
        <argsstring>(uint8_t page, uint8_t *buffer, uint8_t bufferSize)</argsstring>
        <name>MIFARE_Ultralight_Write</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_Ultralight_Write</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>page</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bufferSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="283" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1abf16c5a992c8692c2cf4f65e6ad19a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_GetValue</definition>
        <argsstring>(uint8_t blockAddr, long *value)</argsstring>
        <name>MIFARE_GetValue</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_GetValue</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="284" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a1733fb64ad8fa119e3fe945d6287d059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_SetValue</definition>
        <argsstring>(uint8_t blockAddr, long value)</argsstring>
        <name>MIFARE_SetValue</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_SetValue</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="285" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PCD_MIFARE_Transceive</definition>
        <argsstring>(uint8_t *sendData, uint8_t sendLen, bool acceptTimeout=false)</argsstring>
        <name>PCD_MIFARE_Transceive</name>
        <qualifiedname>mfrc522::MFRC522::PCD_MIFARE_Transceive</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>sendData</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sendLen</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>acceptTimeout</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="290" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>const string mfrc522::MFRC522::GetStatusCodeName</definition>
        <argsstring>(uint8_t code)</argsstring>
        <name>GetStatusCodeName</name>
        <qualifiedname>mfrc522::MFRC522::GetStatusCodeName</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="293" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a51d41355c15a2e3aebe43bffc2445212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::PICC_GetType</definition>
        <argsstring>(uint8_t sak)</argsstring>
        <name>PICC_GetType</name>
        <qualifiedname>mfrc522::MFRC522::PICC_GetType</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>sak</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="294" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1ae32295310fef34afe04407f307e583a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>const string mfrc522::MFRC522::PICC_GetTypeName</definition>
        <argsstring>(uint8_t type)</argsstring>
        <name>PICC_GetTypeName</name>
        <qualifiedname>mfrc522::MFRC522::PICC_GetTypeName</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="297" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PICC_DumpToSerial</definition>
        <argsstring>(Uid *uid)</argsstring>
        <name>PICC_DumpToSerial</name>
        <qualifiedname>mfrc522::MFRC522::PICC_DumpToSerial</qualifiedname>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> *</type>
          <declname>uid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="298" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PICC_DumpMifareClassicToSerial</definition>
        <argsstring>(Uid *uid, uint8_t piccType, MIFARE_Key *key)</argsstring>
        <name>PICC_DumpMifareClassicToSerial</name>
        <qualifiedname>mfrc522::MFRC522::PICC_DumpMifareClassicToSerial</qualifiedname>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>piccType</declname>
        </param>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key" kindref="compound">MIFARE_Key</ref> *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="299" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PICC_DumpMifareClassicSectorToSerial</definition>
        <argsstring>(Uid *uid, MIFARE_Key *key, uint8_t sector)</argsstring>
        <name>PICC_DumpMifareClassicSectorToSerial</name>
        <qualifiedname>mfrc522::MFRC522::PICC_DumpMifareClassicSectorToSerial</qualifiedname>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref> *</type>
          <declname>uid</declname>
        </param>
        <param>
          <type><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key" kindref="compound">MIFARE_Key</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>sector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="300" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a4ca5c68d509a9ead4d6d551e8c10bd40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::PICC_DumpMifareUltralightToSerial</definition>
        <argsstring>()</argsstring>
        <name>PICC_DumpMifareUltralightToSerial</name>
        <qualifiedname>mfrc522::MFRC522::PICC_DumpMifareUltralightToSerial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="301" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a622c5bd3b19e4093ebc774fc3a874f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mfrc522::MFRC522::MIFARE_SetAccessBits</definition>
        <argsstring>(uint8_t *accessBitBuffer, uint8_t g0, uint8_t g1, uint8_t g2, uint8_t g3)</argsstring>
        <name>MIFARE_SetAccessBits</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_SetAccessBits</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>accessBitBuffer</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>g0</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>g1</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>g2</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>g3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="302" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mfrc522::MFRC522::MIFARE_OpenUidBackdoor</definition>
        <argsstring>(bool logErrors)</argsstring>
        <name>MIFARE_OpenUidBackdoor</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_OpenUidBackdoor</qualifiedname>
        <param>
          <type>bool</type>
          <declname>logErrors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="303" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mfrc522::MFRC522::MIFARE_SetUid</definition>
        <argsstring>(uint8_t *newUid, uint8_t uidSize, bool logErrors)</argsstring>
        <name>MIFARE_SetUid</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_SetUid</qualifiedname>
        <param>
          <type>uint8_t *</type>
          <declname>newUid</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>uidSize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>logErrors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="304" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a2ff9002344e9ee1fa0be91d2f56e1d5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mfrc522::MFRC522::MIFARE_UnbrickUidSector</definition>
        <argsstring>(bool logErrors)</argsstring>
        <name>MIFARE_UnbrickUidSector</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_UnbrickUidSector</qualifiedname>
        <param>
          <type>bool</type>
          <declname>logErrors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="305" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a8b123b82f4f6dffa7a88e8b61f2806a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mfrc522::MFRC522::PICC_IsNewCardPresent</definition>
        <argsstring>()</argsstring>
        <name>PICC_IsNewCardPresent</name>
        <qualifiedname>mfrc522::MFRC522::PICC_IsNewCardPresent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="310" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1abc5229168077788c4ba0c67c568f479e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mfrc522::MFRC522::PICC_ReadCardSerial</definition>
        <argsstring>()</argsstring>
        <name>PICC_ReadCardSerial</name>
        <qualifiedname>mfrc522::MFRC522::PICC_ReadCardSerial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="311" column="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a70f8b628c510acde463803fa05452c78" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_TwoStepHelper</definition>
        <argsstring>(uint8_t command, uint8_t blockAddr, long data)</argsstring>
        <name>MIFARE_TwoStepHelper</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_TwoStepHelper</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
          <briefdescription><para>The command to use </para>
</briefdescription>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
          <briefdescription><para>The block (0-0xff) number. </para>
</briefdescription>
        </param>
        <param>
          <type>long</type>
          <declname>data</declname>
          <briefdescription><para>The data to transfer in step 2 </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper function for the two-step MIFARE Classic protocol operations Decrement, Increment and Restore.</para>
<para><simplesect kind="return"><para>STATUS_OK on success, STATUS_??? otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dependencies/mfrc522/mfrc522.h" line="314" column="9" bodyfile="src/dependencies/mfrc522/mfrc522.cc" bodystart="968" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="classmfrc522_1_1_m_f_r_c522_1a70f8b628c510acde463803fa05452c78" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t mfrc522::MFRC522::MIFARE_TwoStepHelper</definition>
        <argsstring>(uint8_t command, uint8_t blockAddr, long data)</argsstring>
        <name>MIFARE_TwoStepHelper</name>
        <qualifiedname>mfrc522::MFRC522::MIFARE_TwoStepHelper</qualifiedname>
        <param>
          <type>uint8_t</type>
          <declname>command</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>blockAddr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/MFRC522.h" line="314" column="9"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>mfrc522::IGpio</label>
        <link refid="structmfrc522_1_1_i_gpio"/>
      </node>
      <node id="3">
        <label>mfrc522::ISpi</label>
        <link refid="structmfrc522_1_1_i_spi"/>
      </node>
      <node id="1">
        <label>mfrc522::MFRC522</label>
        <link refid="classmfrc522_1_1_m_f_r_c522"/>
        <childnode refid="2" relation="usage">
          <edgelabel>uid</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mSpi</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>mResetPin</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>mfrc522::MFRC522::Uid</label>
        <link refid="structmfrc522_1_1_m_f_r_c522_1_1_uid"/>
      </node>
    </collaborationgraph>
    <location file="src/dependencies/mfrc522/mfrc522.h" line="46" column="1" bodyfile="src/dependencies/mfrc522/mfrc522.h" bodystart="46" bodyend="315"/>
    <listofallmembers>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a50244824f81dc258ffe75f2cfa79f4f3" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>AnalogTestReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7673b1f3f1e0620ba14ab84eca449017" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>AutoTestReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aeef1ebc2d45524d9e3e2327f9cb3066b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>BitFramingReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ac58131928da13c94b3a465c6a0276976" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>CollReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2f50c41848a90f7cdf4f0800dcdd43a9" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>ComIEnReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a36d880f3febe92018582ed4d147ee406" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>ComIrqReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>CommandReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a950cb7f8d39d0d1fe78d1c877a6d44a0" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>ControlReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa16b747cac59415d63c9aa61d4ca2eb1" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>CRCResultRegH</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7436bf87e87a12e003f0d36c6ee93c74" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>CRCResultRegL</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a1f1437ca4438162e0c1905ca39f9e28a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>CWGsPReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a703240a6a220c43910e28703a74e3f52" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>DemodReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab0eea90d8cadb6473795b6afa2403916" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>DivIEnReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a8aa211e282986d84b2e47d67b5bf6337" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>DivIrqReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6803bc2b2af9b1b60d4b33f25e29a0a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>ErrorReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ab27df5c7a8d40f5918edd091621efb92" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>FIFO_SIZE</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>FIFODataReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>FIFOLevelReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>GetStatusCodeName</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>GetStatusCodeName</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6857839ec7c1ca85c546cca3a9371b0" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>GsNReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caaea67bb493542ac43ee33b3dcf32a73d3" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MF_ACK</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caa6b49626dcb7cc58cb460378caf71908f" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MF_KEY_SIZE</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9c32316768c27c643781df0d0a0bf248" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MFRC522</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9c32316768c27c643781df0d0a0bf248" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MFRC522</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab08f244016fd8cfe5c6e40795a056e61" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MfRxReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a62977c895c8ac99961603aa8dd58c8f6" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MfTxReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a56515c1027c5a471f56b128a1404f437" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Decrement</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a56515c1027c5a471f56b128a1404f437" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Decrement</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1abf16c5a992c8692c2cf4f65e6ad19a13" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_GetValue</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1abf16c5a992c8692c2cf4f65e6ad19a13" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_GetValue</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1af3a8dd85230de88fea86fa21d72ab742" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Increment</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1af3a8dd85230de88fea86fa21d72ab742" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Increment</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41ca" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Misc</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41ca" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Misc</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_OpenUidBackdoor</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_OpenUidBackdoor</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Read</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Read</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1aaba45a947ba5a47f11ab346a764cedaf" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Restore</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1aaba45a947ba5a47f11ab346a764cedaf" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Restore</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a622c5bd3b19e4093ebc774fc3a874f20" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_SetAccessBits</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a622c5bd3b19e4093ebc774fc3a874f20" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_SetAccessBits</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_SetUid</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_SetUid</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a1733fb64ad8fa119e3fe945d6287d059" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_SetValue</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a1733fb64ad8fa119e3fe945d6287d059" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_SetValue</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a3b85e9b839756a4eb516195ef498ce58" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Transfer</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a3b85e9b839756a4eb516195ef498ce58" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Transfer</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a70f8b628c510acde463803fa05452c78" prot="private" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_TwoStepHelper</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a70f8b628c510acde463803fa05452c78" prot="private" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_TwoStepHelper</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1afcd5d913410ed3694fab339f311b93de" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Ultralight_Write</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1afcd5d913410ed3694fab339f311b93de" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Ultralight_Write</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a2ff9002344e9ee1fa0be91d2f56e1d5c" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_UnbrickUidSector</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a2ff9002344e9ee1fa0be91d2f56e1d5c" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_UnbrickUidSector</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Write</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>MIFARE_Write</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3afd4e5e104dc9c24af4687e3d51da56" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>ModeReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11af2f78bc8b98861e3762bfb39e9330410" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>ModGsPReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a9133e895e83898c0132e967eac11733a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>ModWidthReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1aa2d9006d9f17fb26ee1af3fea5dea2b2" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>mResetPin</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a05a6e11382dd107aaab12fc2b3fbdb13" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>mSpi</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a773b673bf8567d2cad97b136b9e269c9" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_AntennaOff</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a773b673bf8567d2cad97b136b9e269c9" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_AntennaOff</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a984248652522e8fd580a526a7a9b27d9" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_AntennaOn</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a984248652522e8fd580a526a7a9b27d9" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_AntennaOn</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Authenticate</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Authenticate</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1aee3289cb1accb952792affb0fc01a814" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_CalcCRC</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_CalculateCRC</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_CalculateCRC</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_ClearRegisterBitMask</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_ClearRegisterBitMask</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Command</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Command</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_CommunicateWithPICC</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_CommunicateWithPICC</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4520d1c5a6c460b2e3313fb26b93afc3" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_GenerateRandomID</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a6df2b2a81b0259de285892bc61f247fc" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_GetAntennaGain</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a6df2b2a81b0259de285892bc61f247fc" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_GetAntennaGain</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Idle</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1affff6fd4010044cc4337803de579b4f0" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Init</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1affff6fd4010044cc4337803de579b4f0" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Init</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a33f0596a331add734571b0907bb8cd0c" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Mem</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4504a068cace1f0b9164b2f3a3255d2b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_MFAuthent</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_MIFARE_Transceive</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_MIFARE_Transceive</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a1aee4ac74a9b29beb57a6e5947f0b261" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_NoCmdChange</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1aabf66fe43403f40968049a2a87f0026d" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_PerformSelfTest</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1aabf66fe43403f40968049a2a87f0026d" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_PerformSelfTest</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_ReadRegister</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a8243247e881823152bfe9295651b0056" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_ReadRegister</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_ReadRegister</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a8243247e881823152bfe9295651b0056" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_ReadRegister</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1af2436d9a2474b647ab1564f3c3ef7b81" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Receive</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Register</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Register</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1aa3a0f87af9a7217c87de0b55592c1c60" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Reset</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1aa3a0f87af9a7217c87de0b55592c1c60" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Reset</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_RxGain</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_RxGain</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a245f57d7ea35bfb3ea818171abb18b4b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_SetAntennaGain</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a245f57d7ea35bfb3ea818171abb18b4b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_SetAntennaGain</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_SetRegisterBitMask</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_SetRegisterBitMask</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a0e7e9956d273665874c0eaebd8c1557b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_SoftReset</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_StopCrypto1</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_StopCrypto1</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1abef11bde1e2742480aa45fb1a8f99211" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Transceive</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_TransceiveData</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_TransceiveData</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a7648059b11bf420c077f83ad6c2df532" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_Transmit</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_WriteRegister</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a8f615a621af28925c38122b08ed3d03b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_WriteRegister</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_WriteRegister</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a8f615a621af28925c38122b08ed3d03b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PCD_WriteRegister</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a16883066555df303700ee5b7635a11f0" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_CT</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a4571c00e0e50ced328c148c72e8c8c8b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_HLTA</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abaeb71903ba91b26195148e8b7080432" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_MF_AUTH_KEY_A</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaae1e4ebe0ba780376417fa3cbbc492a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_MF_AUTH_KEY_B</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a23b6cd831f9cf639542261446eaf3e88" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_MF_DECREMENT</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac206f2ba080fd8bae26a60cf8e9aa0f0" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_MF_INCREMENT</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a6e7b073f0a517053c124c3e539f97c7d" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_MF_READ</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a03960da2ba6fe363307249c0ebda4794" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_MF_RESTORE</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aca11dd8f22ee92e74dea6eccb04acdbf" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_MF_TRANSFER</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaa1ee47263d5557db433506506d38644" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_MF_WRITE</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abf8bb05ffb365cb0d01679abc678b7d1" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_REQA</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac018ecee156fed326cdac2ceb29a38bd" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_SEL_CL1</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a1eb5f3af0ce3d4728e6efc8f2d6d8a9c" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_SEL_CL2</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aa3f6c8c1f347fb9fef575e09e6b4d26b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_SEL_CL3</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a05ab0577fc5ebef596758d0435caff6a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_UL_WRITE</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac69de174e9f3b7d8cc0b3e4b8be978ae" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_CMD_WUPA</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_Command</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_Command</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_DumpMifareClassicSectorToSerial</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_DumpMifareClassicSectorToSerial</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_DumpMifareClassicToSerial</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_DumpMifareClassicToSerial</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a4ca5c68d509a9ead4d6d551e8c10bd40" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_DumpMifareUltralightToSerial</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a4ca5c68d509a9ead4d6d551e8c10bd40" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_DumpMifareUltralightToSerial</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_DumpToSerial</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_DumpToSerial</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a51d41355c15a2e3aebe43bffc2445212" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_GetType</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a51d41355c15a2e3aebe43bffc2445212" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_GetType</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae32295310fef34afe04407f307e583a9" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_GetTypeName</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae32295310fef34afe04407f307e583a9" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_GetTypeName</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_HaltA</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_HaltA</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a8b123b82f4f6dffa7a88e8b61f2806a3" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_IsNewCardPresent</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a8b123b82f4f6dffa7a88e8b61f2806a3" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_IsNewCardPresent</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1abc5229168077788c4ba0c67c568f479e" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_ReadCardSerial</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1abc5229168077788c4ba0c67c568f479e" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_ReadCardSerial</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_REQA_or_WUPA</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_REQA_or_WUPA</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a44dd708016d31efc20bd2dbdb1f67aaf" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_RequestA</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a44dd708016d31efc20bd2dbdb1f67aaf" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_RequestA</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_Select</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_Select</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_Type</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_Type</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a97e77275960067a9507621a414d9ee77" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_TYPE_ISO_14443_4</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a6a7364b7bdd89dfdeb953c9d3e089d38" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_TYPE_ISO_18092</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_TYPE_MIFARE_1K</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_TYPE_MIFARE_4K</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_TYPE_MIFARE_MINI</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ac3a75d9038b6298fe8294c1d142e450c" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_TYPE_MIFARE_PLUS</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493abf543718b1dd9b3a1e067cf7b909a751" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_TYPE_MIFARE_UL</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ad18c78cf2973ca2f136bfb1ddbc31843" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_TYPE_NOT_COMPLETE</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a275fd46fd853ab8925afb1580ce1c3cb" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_TYPE_TNP3XXX</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a15db395f3889e5937b6d019b1ba4d0e7" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_TYPE_UNKNOWN</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1add1b450123e4670d88e0b6cb2ddca0c7" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_WakeupA</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1add1b450123e4670d88e0b6cb2ddca0c7" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>PICC_WakeupA</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a299d24d290d0d45196a9753fead96fcc" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RFCfgReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a48d975686baa49a14c64c615165a2648" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxGain_18dB</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a50c86eecc33ab1bc3ea765b381cbcc4f" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxGain_18dB_2</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a1f76a9a1002b4f5a214a744fdfd1e485" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxGain_23dB</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a94f97cd2d56becc29b2f6d2aaf52390e" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxGain_23dB_2</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a8141508391403bda01e36b1b014bb3df" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxGain_33dB</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67aeb2fa15224b6a3fc4ff9181771f49d26" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxGain_38dB</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67af75e837882d2876e7cc43cefe08c658c" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxGain_43dB</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67abf1cf1c7c0bbc05b36d2039af8edb778" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxGain_48dB</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a710cffcf94202bae75baf1446864aa8d" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxGain_avg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67aab79eef054b19d0c816203470aa2b00c" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxGain_max</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a35d4bf0d1e8383ee59b68056e619ad67a521090cb926c7ec89ac919dc03221ec9" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxGain_min</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ad9f6e967e3390192a00ac4256a56251b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxModeReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a033d032ceede4ad4fe79788aa5f6962f" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxSelReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae2d1f8b133337135b58f6d76b9d7033a" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>RxThresholdReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a1af7727119be183eb6ef7630d659a208" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>SerialSpeedReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac54b5af1f98b9ac438e4164bce8ce927" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>setBitMask</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ac54b5af1f98b9ac438e4164bce8ce927" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>setBitMask</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a37caf50e5570a887ebc9958dea7fcea0" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>Status1Reg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a77750cd41045db5305665ccfceb7ca77" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>Status2Reg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>STATUS_COLLISION</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>STATUS_CRC_WRONG</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>STATUS_ERROR</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1c572582a06e252ccf3cccdfdaf051b2" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>STATUS_INTERNAL_ERROR</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>STATUS_INVALID</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea991d8d22bd15cb327ce413664f43b314" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>STATUS_MIFARE_NACK</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>STATUS_NO_ROOM</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>STATUS_OK</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>STATUS_TIMEOUT</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9e" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>StatusCode</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9e" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>StatusCode</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3ac38e27924e94a67fb817a883309183" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TCounterValueRegH</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa8d709a47229dd8591f5a620fc892cab" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TCounterValueRegL</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a941ecf7c53cf726968861607c4b5e5f7" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TestADCReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a649cac3dfc392bc43209500fb785dc14" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TestBusReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a38dd71ef93140244120bb7b91f816e68" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TestDAC1Reg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11abea8ddee770eff435fbb6bacac13a481" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TestDAC2Reg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa3bebfe547d6c53c3d0efe77a40c9935" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TestPinEnReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a94cf3b29f1e8ef62a57563fc6c443fa3" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TestPinValueReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a6995fdac6117f20475b18d8f3ac3b37c" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TestSel1Reg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aee2f6cf70362951f686e90fb3e935d50" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TestSel2Reg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a49e463ef0637de855d7f18f1b45d2183" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TModeReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa2858d5ecb5db42b20bf9f26e8a82a85" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TPrescalerReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7bc82b693e1f953c6ece972628b974d0" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TReloadRegH</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a053386cc993ce5f6432efcf222758356" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TReloadRegL</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2bdde783dcc91f1f456d188f3d4d71a6" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TxASKReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a414850094de7c1e66a844e1a40978a33" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TxControlReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ab6cd4c5dcfa675bbf5b2c162d47ba78e" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TxModeReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ad0479359a7a1697baed406f972601bdd" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>TxSelReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>uid</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a987d995305be7f2a8fe9c058ec4bd902" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>VersionReg</name></member>
      <member refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adba422f51894c1b1d644e6f7d77c8f19" prot="public" virt="non-virtual"><scope>mfrc522::MFRC522</scope><name>WaterLevelReg</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
