<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_g_p_i_o_driver_8cpp" kind="file" language="C++">
    <compoundname>GPIODriver.cpp</compoundname>
    <includes refid="_g_p_i_o_driver_8h" local="yes">GPIODriver.h</includes>
    <includes refid="_relay_board_8h" local="yes">RelayBoard.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes local="no">sys/mman.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/peripherals/GPIODriver.cpp</label>
        <link refid="_g_p_i_o_driver_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>GPIODriver.h</label>
        <link refid="_g_p_i_o_driver_8h"/>
      </node>
      <node id="3">
        <label>RelayBoard.h</label>
        <link refid="_relay_board_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>errno.h</label>
      </node>
      <node id="5">
        <label>fcntl.h</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="13">
        <label>sys/mman.h</label>
      </node>
      <node id="8">
        <label>sys/stat.h</label>
      </node>
      <node id="9">
        <label>sys/types.h</label>
      </node>
      <node id="10">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_g_p_i_o_driver_8cpp_1ac2bbd6d630a06a980d9a92ddb9a49928" prot="public" static="no">
        <name>IN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/GPIODriver.cpp" line="23" column="9" bodyfile="src/peripherals/GPIODriver.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_g_p_i_o_driver_8cpp_1aec78e7a9e90a406a56f859ee456e8eae" prot="public" static="no">
        <name>OUT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/GPIODriver.cpp" line="24" column="9" bodyfile="src/peripherals/GPIODriver.cpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_g_p_i_o_driver_8cpp_1ab811d8c6ff3a505312d3276590444289" prot="public" static="no">
        <name>LOW</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/GPIODriver.cpp" line="26" column="9" bodyfile="src/peripherals/GPIODriver.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_g_p_i_o_driver_8cpp_1a5bb885982ff66a2e0a0a45a8ee9c35e2" prot="public" static="no">
        <name>HIGH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/GPIODriver.cpp" line="27" column="9" bodyfile="src/peripherals/GPIODriver.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_g_p_i_o_driver_8cpp_1a437e2826e590435de33777cdab13faef" prot="public" static="no">
        <name>GPIO_STRING_LENGTH</name>
        <initializer>3</initializer>
        <briefdescription>
<para>Define B. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/GPIODriver.cpp" line="29" column="9" bodyfile="src/peripherals/GPIODriver.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_g_p_i_o_driver_8cpp_1ad0ca8f10a33dc934babb22393b1eee16" prot="public" static="no">
        <name>DIRECTION_STRING_MAX_LENGTH</name>
        <initializer>35</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/GPIODriver.cpp" line="31" column="9" bodyfile="src/peripherals/GPIODriver.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_g_p_i_o_driver_8cpp_1aad53eaa9f18598639a489d0a5c05cd02" prot="public" static="no">
        <name>VALUE_STRING_MAX_LENGTH</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/peripherals/GPIODriver.cpp" line="32" column="9" bodyfile="src/peripherals/GPIODriver.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Chinmay Nagrale </para>
</simplesect>
<simplesect kind="version"><para>0.1</para>
</simplesect>
This file contains the functions for GPIO driver class. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_g_p_i_o_driver_8h" kindref="compound">GPIODriver.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_relay_board_8h" kindref="compound">RelayBoard.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>Input<sp/>&amp;<sp/>Output<sp/>directions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_g_p_i_o_driver_8cpp_1ac2bbd6d630a06a980d9a92ddb9a49928" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IN<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="_g_p_i_o_driver_8cpp_1aec78e7a9e90a406a56f859ee456e8eae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OUT<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>High<sp/>&amp;<sp/>Low<sp/>value<sp/>states<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="_g_p_i_o_driver_8cpp_1ab811d8c6ff3a505312d3276590444289" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LOW<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="_g_p_i_o_driver_8cpp_1a5bb885982ff66a2e0a0a45a8ee9c35e2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HIGH<sp/>1</highlight></codeline>
<codeline lineno="29" refid="_g_p_i_o_driver_8cpp_1a437e2826e590435de33777cdab13faef" refkind="member"><highlight class="preprocessor">#define<sp/>GPIO_STRING_LENGTH<sp/>3<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>maximum<sp/>length<sp/>for<sp/>strings<sp/>in<sp/>formatting<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="_g_p_i_o_driver_8cpp_1ad0ca8f10a33dc934babb22393b1eee16" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIRECTION_STRING_MAX_LENGTH<sp/>35</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="_g_p_i_o_driver_8cpp_1aad53eaa9f18598639a489d0a5c05cd02" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VALUE_STRING_MAX_LENGTH<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GPIODriver::ExportGPIO(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpioPinNumber)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringBuffer[<ref refid="_g_p_i_o_driver_8cpp_1a437e2826e590435de33777cdab13faef" kindref="member">GPIO_STRING_LENGTH</ref>];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBytesToWrite;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>GPIO<sp/>file<sp/>descriptor<sp/>for<sp/>export<sp/>gpio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;/sys/class/gpio/export&quot;</highlight><highlight class="normal">,<sp/>O_WRONLY);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>file<sp/>description<sp/>is<sp/>-1<sp/>an<sp/>error<sp/>occured.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>==<sp/>-1)<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>occured,<sp/>print<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;GPIO<sp/>Driver:<sp/>Failed<sp/>to<sp/>open<sp/>export<sp/>for<sp/>writing!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Format<sp/>GPIO<sp/>pin<sp/>number<sp/>to<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>nBytesToWrite<sp/>=<sp/>snprintf(stringBuffer,<sp/><ref refid="_g_p_i_o_driver_8cpp_1a437e2826e590435de33777cdab13faef" kindref="member">GPIO_STRING_LENGTH</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>gpioPinNumber);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>string<sp/>containing<sp/>GPIO<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>write(fd,<sp/>stringBuffer,<sp/>nBytesToWrite);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>export<sp/>GPIO<sp/>file<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GPIODriver::UnexportGPIO(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpioPinNumber)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>stringBuffer[<ref refid="_g_p_i_o_driver_8cpp_1a437e2826e590435de33777cdab13faef" kindref="member">GPIO_STRING_LENGTH</ref>];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t<sp/>bytes_written;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&quot;/sys/class/gpio/unexport&quot;</highlight><highlight class="normal">,<sp/>O_WRONLY);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-1<sp/>==<sp/>fd)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>occured,<sp/>print<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;GPIO<sp/>Driver:<sp/>Failed<sp/>to<sp/>open<sp/>unexport<sp/>for<sp/>writing!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes_written<sp/>=<sp/>snprintf(stringBuffer,<sp/><ref refid="_g_p_i_o_driver_8cpp_1a437e2826e590435de33777cdab13faef" kindref="member">GPIO_STRING_LENGTH</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>gpioPinNumber);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>write(fd,<sp/>stringBuffer,<sp/>bytes_written);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>unexport<sp/>GPIO<sp/>file<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GPIODriver::SetGPIODirection(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpioPinNumber,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>direction)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Direction<sp/>string<sp/>used<sp/>in<sp/>ternary<sp/>operation<sp/>to<sp/>c<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>directionString[]<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;in\0out&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sysPath[<ref refid="_g_p_i_o_driver_8cpp_1ad0ca8f10a33dc934babb22393b1eee16" kindref="member">DIRECTION_STRING_MAX_LENGTH</ref>];</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Format<sp/>direction<sp/>string<sp/>with<sp/>the<sp/>GPIO<sp/>pin<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(sysPath,<sp/><ref refid="_g_p_i_o_driver_8cpp_1ad0ca8f10a33dc934babb22393b1eee16" kindref="member">DIRECTION_STRING_MAX_LENGTH</ref>,<sp/></highlight><highlight class="stringliteral">&quot;/sys/class/gpio/gpio%d/direction&quot;</highlight><highlight class="normal">,<sp/>gpioPinNumber);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>file<sp/>descriptor<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>open(sysPath,<sp/>O_WRONLY);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>file<sp/>descriptor<sp/>opened<sp/>sucessfully</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>occured,<sp/>print<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;GPIO<sp/>Driver:<sp/>Set<sp/>GPIO<sp/>Direction:<sp/>Failed<sp/>to<sp/>open<sp/>gpio<sp/>direction<sp/>for<sp/>writing!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>ternary<sp/>operator<sp/>to<sp/>write<sp/>appropriate<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>Set<sp/>the<sp/>start<sp/>of<sp/>the<sp/>string<sp/>then<sp/>number<sp/>of<sp/>bytes/characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-1<sp/>==<sp/>write(fd,<sp/>&amp;directionString[<ref refid="_g_p_i_o_driver_8cpp_1ac2bbd6d630a06a980d9a92ddb9a49928" kindref="member">IN</ref><sp/>==<sp/>direction<sp/>?<sp/>0<sp/>:<sp/>3],<sp/><ref refid="_g_p_i_o_driver_8cpp_1ac2bbd6d630a06a980d9a92ddb9a49928" kindref="member">IN</ref><sp/>==<sp/>direction<sp/>?<sp/>2<sp/>:<sp/>3))</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>occured,<sp/>print<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;GPIO<sp/>Driver:<sp/>Set<sp/>GPIO<sp/>Direction:<sp/>Failed<sp/>to<sp/>set<sp/>direction!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="class_g_p_i_o_driver_1a68be60ab1fb0e9c29f60818654766a32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_g_p_i_o_driver_1a68be60ab1fb0e9c29f60818654766a32" kindref="member">GPIODriver::GPIORead</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpioPinNumber)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Path<sp/>for<sp/>opening<sp/>file<sp/>descriptor<sp/>to<sp/>GPIO<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sysPath[<ref refid="_g_p_i_o_driver_8cpp_1aad53eaa9f18598639a489d0a5c05cd02" kindref="member">VALUE_STRING_MAX_LENGTH</ref>];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>valueString[3];</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Format<sp/>value<sp/>string<sp/>with<sp/>the<sp/>GPIO<sp/>pin<sp/>number<sp/>into<sp/>a<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(sysPath,<sp/><ref refid="_g_p_i_o_driver_8cpp_1aad53eaa9f18598639a489d0a5c05cd02" kindref="member">VALUE_STRING_MAX_LENGTH</ref>,<sp/></highlight><highlight class="stringliteral">&quot;/sys/class/gpio/gpio%d/value&quot;</highlight><highlight class="normal">,<sp/>gpioPinNumber);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>file<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>open(sysPath,<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>file<sp/>descriptor<sp/>has<sp/>not<sp/>oppened<sp/>sucessfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>occured,<sp/>print<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;GPIO<sp/>Driver:<sp/>GPIO<sp/>Read:<sp/>Failed<sp/>To<sp/>Open<sp/>GPIO<sp/>for<sp/>State<sp/>Reading!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>GPIO<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read(fd,<sp/>valueString,<sp/>3)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>occured,<sp/>print<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;GPIO<sp/>Driver:<sp/>GPIO<sp/>Read:<sp/>Failed<sp/>To<sp/>Read<sp/>State!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>file<sp/>descriptor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>value<sp/>of<sp/>the<sp/>GPIO<sp/>Pin<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(atoi(valueString));</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_g_p_i_o_driver_1a32a483cec3179d1d13acb1dad37b21ad" refkind="member"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_g_p_i_o_driver_1a32a483cec3179d1d13acb1dad37b21ad" kindref="member">GPIODriver::SetGPIOState</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpioPinNumber,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>valueString[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;01&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>path[<ref refid="_g_p_i_o_driver_8cpp_1aad53eaa9f18598639a489d0a5c05cd02" kindref="member">VALUE_STRING_MAX_LENGTH</ref>];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Format<sp/>value<sp/>string<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(path,<sp/><ref refid="_g_p_i_o_driver_8cpp_1aad53eaa9f18598639a489d0a5c05cd02" kindref="member">VALUE_STRING_MAX_LENGTH</ref>,<sp/></highlight><highlight class="stringliteral">&quot;/sys/class/gpio/gpio%d/value&quot;</highlight><highlight class="normal">,<sp/>gpioPinNumber);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>fd<sp/>=<sp/>open(path,<sp/>O_WRONLY);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>file<sp/>descriptor<sp/>has<sp/>not<sp/>oppened<sp/>sucessfully.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-1<sp/>==<sp/>fd)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>occured,<sp/>print<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;GPIO<sp/>Driver:<sp/>Failed<sp/>to<sp/>open<sp/>gpio<sp/>value<sp/>for<sp/>writing!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>between<sp/>0<sp/>and<sp/>1<sp/>from<sp/>a<sp/>valueString<sp/>string<sp/>using<sp/>ternary<sp/>operator<sp/>and<sp/>write<sp/>it<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>other<sp/>than<sp/>one<sp/>byte<sp/>has<sp/>been<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write(fd,<sp/>&amp;valueString[<ref refid="_g_p_i_o_driver_8cpp_1ab811d8c6ff3a505312d3276590444289" kindref="member">LOW</ref><sp/>==<sp/>value<sp/>?<sp/>0<sp/>:<sp/>1],<sp/>1)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>occured,<sp/>print<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;GPIO<sp/>Driver:<sp/>Failed<sp/>to<sp/>write<sp/>value!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>file<sp/>descriptor<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>errors<sp/>return<sp/>Sucessfully</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="class_g_p_i_o_driver_1a314ce5622d8049f62b662b62fd3debe7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_g_p_i_o_driver_1a314ce5622d8049f62b662b62fd3debe7" kindref="member">GPIODriver::SetUpPin</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gpioPinNumber)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Export<sp/>Pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ExportGPIO(gpioPinNumber)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>occured,<sp/>print<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;GPIO<sp/>Driver:<sp/>Exporting<sp/>GPIO<sp/>%d<sp/>Failed!\n&quot;</highlight><highlight class="normal">,<sp/>gpioPinNumber);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Direction<sp/>to<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>SetGPIODirection(gpioPinNumber<sp/>,<sp/>1)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>occured,<sp/>print<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;GPIO<sp/>Driver:<sp/>Setting<sp/>GPIO<sp/>%d<sp/>Direction<sp/>Failed!\n&quot;</highlight><highlight class="normal">,<sp/>gpioPinNumber);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>GPIO<sp/>state<sp/>value<sp/>to<sp/>high</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="class_g_p_i_o_driver_1a32a483cec3179d1d13acb1dad37b21ad" kindref="member">SetGPIOState</ref>(gpioPinNumber,<sp/>1)<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>error<sp/>occured,<sp/>print<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;GPIO<sp/>Driver:<sp/>Setting<sp/>GPIO<sp/>%d<sp/>State<sp/>Failed!\n&quot;</highlight><highlight class="normal">,<sp/>gpioPinNumber);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/peripherals/GPIODriver.cpp"/>
  </compounddef>
</doxygen>
