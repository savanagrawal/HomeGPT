<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="mfrc522_8cc" kind="file" language="C++">
    <compoundname>mfrc522.cc</compoundname>
    <includes refid="dependencies_2mfrc522_2mfrc522_8h" local="yes">mfrc522.h</includes>
    <includes local="no">linux/types.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">cstring</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes local="no">thread</includes>
    <incdepgraph>
      <node id="5">
        <label>igpio.h</label>
        <link refid="dependencies_2mfrc522_2igpio_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ispi.h</label>
        <link refid="dependencies_2mfrc522_2ispi_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/dependencies/mfrc522/mfrc522.cc</label>
        <link refid="mfrc522_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>mfrc522.h</label>
        <link refid="dependencies_2mfrc522_2mfrc522_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cstddef</label>
      </node>
      <node id="10">
        <label>cstring</label>
      </node>
      <node id="11">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>linux/types.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="12">
        <label>thread</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacemfrc522">mfrc522</innernamespace>
    <innernamespace refid="namespacestd">std</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>MFRC522.cpp<sp/>-<sp/>Library<sp/>to<sp/>use<sp/>ARDUINO<sp/>RFID<sp/>MODULE<sp/>KIT<sp/>13.56<sp/>MHZ<sp/>WITH<sp/>TAGS<sp/>SPI<sp/>W<sp/>AND<sp/>R<sp/>BY<sp/>COOQROBOT.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>Please<sp/>also<sp/>check<sp/>the<sp/>comments<sp/>in<sp/>MFRC522.h<sp/>-<sp/>they<sp/>provide<sp/>useful<sp/>hints<sp/>and<sp/>background<sp/>information.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Released<sp/>into<sp/>the<sp/>public<sp/>domain.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="peripherals_2mfrc522_8h" kindref="compound">mfrc522.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;linux/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemfrc522" kindref="compound">mfrc522</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classmfrc522_1_1_m_f_r_c522_1a9c32316768c27c643781df0d0a0bf248" refkind="member"><highlight class="normal"><ref refid="classmfrc522_1_1_m_f_r_c522_1a9c32316768c27c643781df0d0a0bf248" kindref="member">MFRC522::MFRC522</ref>(<ref refid="structmfrc522_1_1_i_spi" kindref="compound">ISpi</ref>&amp;<sp/>spi,<sp/><ref refid="structmfrc522_1_1_i_gpio" kindref="compound">IGpio</ref>&amp;<sp/>resetPin)<sp/>:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>mSpi(spi),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>mResetPin(resetPin){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aa2d9006d9f17fb26ee1af3fea5dea2b2" kindref="member">mResetPin</ref>.<ref refid="structmfrc522_1_1_i_gpio_1a1d5cffeab7b6f7ca38093d98866d1188" kindref="member">setValue</ref>(<ref refid="structmfrc522_1_1_i_gpio_1a8acb54d4651db39bea52c834b8570be9a53cced8d281a1a0ace3cb6594daaa4f7" kindref="member">IGpio::Value::low</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="comment">//<sp/>Basic<sp/>interface<sp/>functions<sp/>for<sp/>communicating<sp/>with<sp/>the<sp/>MFRC522</highlight></codeline>
<codeline lineno="35"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">MFRC522::PCD_WriteRegister</ref>(<sp/><sp/><sp/><sp/>uint8_t<sp/>reg,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>value<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[2];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>data[0]<sp/>=<sp/>reg<sp/>&amp;<sp/>0x7E;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>data[1]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a05a6e11382dd107aaab12fc2b3fbdb13" kindref="member">mSpi</ref>.<ref refid="structmfrc522_1_1_i_spi_1a9f98a44742d44089eee210f9d5908bed" kindref="member">write</ref>(data,<sp/>2);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_WriteRegister()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classmfrc522_1_1_m_f_r_c522_1a8f615a621af28925c38122b08ed3d03b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">MFRC522::PCD_WriteRegister</ref>(<sp/><sp/><sp/><sp/>uint8_t<sp/>reg,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>count,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*values<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>count;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(reg,<sp/>values[index]);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_WriteRegister()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">MFRC522::PCD_ReadRegister</ref>(<sp/><sp/>uint8_t<sp/>reg<sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data[2];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>data[0]<sp/>=<sp/>0x80<sp/>|<sp/>((reg)<sp/>&amp;<sp/>0x7E);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a05a6e11382dd107aaab12fc2b3fbdb13" kindref="member">mSpi</ref>.<ref refid="structmfrc522_1_1_i_spi_1a251598542df9d4026fc28e832d4770ac" kindref="member">writeRead</ref>(data,<sp/>2);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">uint8_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data[1]);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_ReadRegister()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classmfrc522_1_1_m_f_r_c522_1a8243247e881823152bfe9295651b0056" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">MFRC522::PCD_ReadRegister</ref>(uint8_t<sp/>reg,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>count,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*values,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>rxAlign<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Serial.print(F(&quot;Reading<sp/>&quot;));<sp/><sp/><sp/><sp/>Serial.print(count);<sp/>Serial.println(F(&quot;<sp/>bytes<sp/>from<sp/>register.&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>uint8_t<sp/>address<sp/>=<sp/>0x80<sp/>|<sp/>(reg<sp/>&amp;<sp/>0x7E);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MSB<sp/>==<sp/>1<sp/>is<sp/>for<sp/>reading.<sp/>LSB<sp/>is<sp/>not<sp/>used<sp/>in<sp/>address.<sp/>Datasheet<sp/>section<sp/>8.1.2.3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>uint8_t<sp/>index<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>in<sp/>values<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>count--;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>read<sp/>is<sp/>performed<sp/>outside<sp/>of<sp/>the<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a05a6e11382dd107aaab12fc2b3fbdb13" kindref="member">mSpi</ref>.<ref refid="structmfrc522_1_1_i_spi_1a251598542df9d4026fc28e832d4770ac" kindref="member">writeRead</ref>(address);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>rxAlign)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>update<sp/>bit<sp/>positions<sp/>rxAlign..7<sp/>in<sp/>values[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>bit<sp/>mask<sp/>for<sp/>bit<sp/>positions<sp/>rxAlign..7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>mask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>rxAlign;<sp/>i<sp/>&lt;=<sp/>7;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>mask<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>value<sp/>and<sp/>tell<sp/>that<sp/>we<sp/>want<sp/>to<sp/>read<sp/>the<sp/>same<sp/>address<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>value<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a05a6e11382dd107aaab12fc2b3fbdb13" kindref="member">mSpi</ref>.<ref refid="structmfrc522_1_1_i_spi_1a251598542df9d4026fc28e832d4770ac" kindref="member">writeRead</ref>(address);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>mask<sp/>to<sp/>both<sp/>current<sp/>value<sp/>of<sp/>values[0]<sp/>and<sp/>the<sp/>new<sp/>data<sp/>in<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[0]<sp/>=<sp/>(values[index]<sp/>&amp;<sp/>~mask)<sp/>|<sp/>(value<sp/>&amp;<sp/>mask);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Normal<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values[index]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a05a6e11382dd107aaab12fc2b3fbdb13" kindref="member">mSpi</ref>.<ref refid="structmfrc522_1_1_i_spi_1a251598542df9d4026fc28e832d4770ac" kindref="member">writeRead</ref>(address);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>values[index]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a05a6e11382dd107aaab12fc2b3fbdb13" kindref="member">mSpi</ref>.<ref refid="structmfrc522_1_1_i_spi_1a251598542df9d4026fc28e832d4770ac" kindref="member">writeRead</ref>(0);</highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>final<sp/>byte.<sp/>Send<sp/>0<sp/>to<sp/>stop<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_ReadRegister()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" kindref="member">MFRC522::PCD_SetRegisterBitMask</ref>(uint8_t<sp/>reg,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>mask<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>uint8_t<sp/>tmp;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(reg);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(reg,<sp/>tmp<sp/>|<sp/>mask);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>bit<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_SetRegisterBitMask()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" kindref="member">MFRC522::PCD_ClearRegisterBitMask</ref>(uint8_t<sp/>reg,<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>mask<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>uint8_t<sp/>tmp;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(reg);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(reg,<sp/>tmp<sp/>&amp;<sp/>(~mask));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>bit<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_ClearRegisterBitMask()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" kindref="member">MFRC522::PCD_CalculateCRC</ref>(uint8_t<sp/>*data,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>length,<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*result<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" kindref="member">CommandReg</ref>,<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6" kindref="member">PCD_Idle</ref>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>any<sp/>active<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a8aa211e282986d84b2e47d67b5bf6337" kindref="member">DivIrqReg</ref>,<sp/>0x04);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>CRCIRq<sp/>interrupt<sp/>request<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" kindref="member">PCD_SetRegisterBitMask</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac" kindref="member">FIFOLevelReg</ref>,<sp/>0x80);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FlushBuffer<sp/>=<sp/>1,<sp/>FIFO<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" kindref="member">FIFODataReg</ref>,<sp/>length,<sp/>data);<sp/></highlight><highlight class="comment">//<sp/>Write<sp/>data<sp/>to<sp/>the<sp/>FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" kindref="member">CommandReg</ref>,<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1aee3289cb1accb952792affb0fc01a814" kindref="member">PCD_CalcCRC</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>CRC<sp/>calculation<sp/>to<sp/>complete.<sp/>Each<sp/>iteration<sp/>of<sp/>the<sp/>while-loop<sp/>takes<sp/>17.73�s.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="namespacemfrc522_1a6e204398594060a281d6f9157a612549" kindref="member">word</ref><sp/>i<sp/>=<sp/>5000;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>uint8_t<sp/>n;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a8aa211e282986d84b2e47d67b5bf6337" kindref="member">DivIrqReg</ref>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DivIrqReg[7..0]<sp/>bits<sp/>are:<sp/>Set2<sp/>reserved<sp/>reserved<sp/>MfinActIRq<sp/>reserved<sp/>CRCIRq<sp/>reserved<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;<sp/>0x04)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CRCIRq<sp/>bit<sp/>set<sp/>-<sp/>calculation<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--i<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>emergency<sp/>break.<sp/>We<sp/>will<sp/>eventually<sp/>terminate<sp/>on<sp/>this<sp/>one<sp/>after<sp/>89ms.<sp/>Communication<sp/>with<sp/>the<sp/>MFRC522<sp/>might<sp/>be<sp/>down.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" kindref="member">STATUS_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" kindref="member">CommandReg</ref>,<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6" kindref="member">PCD_Idle</ref>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>calculating<sp/>CRC<sp/>for<sp/>new<sp/>content<sp/>in<sp/>the<sp/>FIFO.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transfer<sp/>the<sp/>result<sp/>from<sp/>the<sp/>registers<sp/>to<sp/>the<sp/>result<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>result[0]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7436bf87e87a12e003f0d36c6ee93c74" kindref="member">CRCResultRegL</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>result[1]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa16b747cac59415d63c9aa61d4ca2eb1" kindref="member">CRCResultRegH</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_CalculateCRC()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="comment">//<sp/>Functions<sp/>for<sp/>manipulating<sp/>the<sp/>MFRC522</highlight></codeline>
<codeline lineno="177"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classmfrc522_1_1_m_f_r_c522_1affff6fd4010044cc4337803de579b4f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1affff6fd4010044cc4337803de579b4f0" kindref="member">MFRC522::PCD_Init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>digitalWrite(RSTPIN,<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Exit<sp/>power<sp/>down<sp/>mode.<sp/>This<sp/>triggers<sp/>a<sp/>hard<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aa2d9006d9f17fb26ee1af3fea5dea2b2" kindref="member">mResetPin</ref>.<ref refid="structmfrc522_1_1_i_gpio_1a1d5cffeab7b6f7ca38093d98866d1188" kindref="member">setValue</ref>(<ref refid="structmfrc522_1_1_i_gpio_1a8acb54d4651db39bea52c834b8570be9a8d966b2253a917086c8604959e152243" kindref="member">IGpio::Value::high</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Section<sp/>8.8.2<sp/>in<sp/>the<sp/>datasheet<sp/>says<sp/>the<sp/>oscillator<sp/>start-up<sp/>time<sp/>is<sp/>the<sp/>start<sp/>up<sp/>time<sp/>of<sp/>the<sp/>crystal<sp/>+<sp/>37,74�s.<sp/>Let<sp/>us<sp/>be<sp/>generous:<sp/>50ms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>std::this_thread::sleep_for(std::chrono::milliseconds(50));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>communicating<sp/>with<sp/>a<sp/>PICC<sp/>we<sp/>need<sp/>a<sp/>timeout<sp/>if<sp/>something<sp/>goes<sp/>wrong.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>f_timer<sp/>=<sp/>13.56<sp/>MHz<sp/>/<sp/>(2*TPreScaler+1)<sp/>where<sp/>TPreScaler<sp/>=<sp/>[TPrescaler_Hi:TPrescaler_Lo].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TPrescaler_Hi<sp/>are<sp/>the<sp/>four<sp/>low<sp/>bits<sp/>in<sp/>TModeReg.<sp/>TPrescaler_Lo<sp/>is<sp/>TPrescalerReg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a49e463ef0637de855d7f18f1b45d2183" kindref="member">TModeReg</ref>,<sp/>0x80);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TAuto=1;<sp/>timer<sp/>starts<sp/>automatically<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>transmission<sp/>in<sp/>all<sp/>communication<sp/>modes<sp/>at<sp/>all<sp/>speeds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa2858d5ecb5db42b20bf9f26e8a82a85" kindref="member">TPrescalerReg</ref>,<sp/>0xA9);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TPreScaler<sp/>=<sp/>TModeReg[3..0]:TPrescalerReg,<sp/>ie<sp/>0x0A9<sp/>=<sp/>169<sp/>=&gt;<sp/>f_timer=40kHz,<sp/>ie<sp/>a<sp/>timer<sp/>period<sp/>of<sp/>25�s.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7bc82b693e1f953c6ece972628b974d0" kindref="member">TReloadRegH</ref>,<sp/>0x03);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reload<sp/>timer<sp/>with<sp/>0x3E8<sp/>=<sp/>1000,<sp/>ie<sp/>25ms<sp/>before<sp/>timeout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a053386cc993ce5f6432efcf222758356" kindref="member">TReloadRegL</ref>,<sp/>0xE8);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a2bdde783dcc91f1f456d188f3d4d71a6" kindref="member">TxASKReg</ref>,<sp/>0x40);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>0x00.<sp/>Force<sp/>a<sp/>100<sp/>%<sp/>ASK<sp/>modulation<sp/>independent<sp/>of<sp/>the<sp/>ModGsPReg<sp/>register<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a3afd4e5e104dc9c24af4687e3d51da56" kindref="member">ModeReg</ref>,<sp/>0x3D);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>0x3F.<sp/>Set<sp/>the<sp/>preset<sp/>value<sp/>for<sp/>the<sp/>CRC<sp/>coprocessor<sp/>for<sp/>the<sp/>CalcCRC<sp/>command<sp/>to<sp/>0x6363<sp/>(ISO<sp/>14443-3<sp/>part<sp/>6.2.4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a984248652522e8fd580a526a7a9b27d9" kindref="member">PCD_AntennaOn</ref>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>antenna<sp/>driver<sp/>pins<sp/>TX1<sp/>and<sp/>TX2<sp/>(they<sp/>were<sp/>disabled<sp/>by<sp/>the<sp/>reset)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_Init()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classmfrc522_1_1_m_f_r_c522_1aa3a0f87af9a7217c87de0b55592c1c60" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aa3a0f87af9a7217c87de0b55592c1c60" kindref="member">MFRC522::PCD_Reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" kindref="member">CommandReg</ref>,<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a0e7e9956d273665874c0eaebd8c1557b" kindref="member">PCD_SoftReset</ref>);<sp/></highlight><highlight class="comment">//<sp/>Issue<sp/>the<sp/>SoftReset<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>datasheet<sp/>does<sp/>not<sp/>mention<sp/>how<sp/>long<sp/>the<sp/>SoftRest<sp/>command<sp/>takes<sp/>to<sp/>complete.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>the<sp/>MFRC522<sp/>might<sp/>have<sp/>been<sp/>in<sp/>soft<sp/>power-down<sp/>mode<sp/>(triggered<sp/>by<sp/>bit<sp/>4<sp/>of<sp/>CommandReg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Section<sp/>8.8.2<sp/>in<sp/>the<sp/>datasheet<sp/>says<sp/>the<sp/>oscillator<sp/>start-up<sp/>time<sp/>is<sp/>the<sp/>start<sp/>up<sp/>time<sp/>of<sp/>the<sp/>crystal<sp/>+<sp/>37,74�s.<sp/>Let<sp/>us<sp/>be<sp/>generous:<sp/>50ms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>std::this_thread::sleep_for(std::chrono::milliseconds(50));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>PowerDown<sp/>bit<sp/>in<sp/>CommandReg<sp/>to<sp/>be<sp/>cleared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" kindref="member">CommandReg</ref>)<sp/>&amp;<sp/>(1&lt;&lt;4))<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PCD<sp/>still<sp/>restarting<sp/>-<sp/>unlikely<sp/>after<sp/>waiting<sp/>50ms,<sp/>but<sp/>better<sp/>safe<sp/>than<sp/>sorry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_Reset()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classmfrc522_1_1_m_f_r_c522_1a984248652522e8fd580a526a7a9b27d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a984248652522e8fd580a526a7a9b27d9" kindref="member">MFRC522::PCD_AntennaOn</ref>()<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>uint8_t<sp/>value<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a414850094de7c1e66a844e1a40978a33" kindref="member">TxControlReg</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((value<sp/>&amp;<sp/>0x03)<sp/>!=<sp/>0x03)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a414850094de7c1e66a844e1a40978a33" kindref="member">TxControlReg</ref>,<sp/>value<sp/>|<sp/>0x03);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_AntennaOn()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classmfrc522_1_1_m_f_r_c522_1a773b673bf8567d2cad97b136b9e269c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a773b673bf8567d2cad97b136b9e269c9" kindref="member">MFRC522::PCD_AntennaOff</ref>()<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" kindref="member">PCD_ClearRegisterBitMask</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a414850094de7c1e66a844e1a40978a33" kindref="member">TxControlReg</ref>,<sp/>0x03);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_AntennaOff()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="classmfrc522_1_1_m_f_r_c522_1a6df2b2a81b0259de285892bc61f247fc" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6df2b2a81b0259de285892bc61f247fc" kindref="member">MFRC522::PCD_GetAntennaGain</ref>()<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a299d24d290d0d45196a9753fead96fcc" kindref="member">RFCfgReg</ref>)<sp/>&amp;<sp/>(0x07&lt;&lt;4);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_GetAntennaGain()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classmfrc522_1_1_m_f_r_c522_1a245f57d7ea35bfb3ea818171abb18b4b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a245f57d7ea35bfb3ea818171abb18b4b" kindref="member">MFRC522::PCD_SetAntennaGain</ref>(uint8_t<sp/>mask)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a6df2b2a81b0259de285892bc61f247fc" kindref="member">PCD_GetAntennaGain</ref>()<sp/>!=<sp/>mask)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>bother<sp/>if<sp/>there<sp/>is<sp/>a<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" kindref="member">PCD_ClearRegisterBitMask</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a299d24d290d0d45196a9753fead96fcc" kindref="member">RFCfgReg</ref>,<sp/>(0x07&lt;&lt;4));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>needed<sp/>to<sp/>allow<sp/>000<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" kindref="member">PCD_SetRegisterBitMask</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a299d24d290d0d45196a9753fead96fcc" kindref="member">RFCfgReg</ref>,<sp/>mask<sp/>&amp;<sp/>(0x07&lt;&lt;4));<sp/></highlight><highlight class="comment">//<sp/>only<sp/>set<sp/>RxGain[2:0]<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_SetAntennaGain()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="classmfrc522_1_1_m_f_r_c522_1aabf66fe43403f40968049a2a87f0026d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aabf66fe43403f40968049a2a87f0026d" kindref="member">MFRC522::PCD_PerformSelfTest</ref>()<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>follows<sp/>directly<sp/>the<sp/>steps<sp/>outlined<sp/>in<sp/>16.1.1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/>Perform<sp/>a<sp/>soft<sp/>reset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aa3a0f87af9a7217c87de0b55592c1c60" kindref="member">PCD_Reset</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/>Clear<sp/>the<sp/>internal<sp/>buffer<sp/>by<sp/>writing<sp/>25<sp/>bytes<sp/>of<sp/>00h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>uint8_t<sp/>ZEROES[25]<sp/>=<sp/>{0x00};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" kindref="member">PCD_SetRegisterBitMask</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac" kindref="member">FIFOLevelReg</ref>,<sp/>0x80);<sp/></highlight><highlight class="comment">//<sp/>flush<sp/>the<sp/>FIFO<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" kindref="member">FIFODataReg</ref>,<sp/>25,<sp/>ZEROES);<sp/></highlight><highlight class="comment">//<sp/>write<sp/>25<sp/>bytes<sp/>of<sp/>00h<sp/>to<sp/>FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" kindref="member">CommandReg</ref>,<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a33f0596a331add734571b0907bb8cd0c" kindref="member">PCD_Mem</ref>);<sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>to<sp/>internal<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3.<sp/>Enable<sp/>self-test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7673b1f3f1e0620ba14ab84eca449017" kindref="member">AutoTestReg</ref>,<sp/>0x09);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>4.<sp/>Write<sp/>00h<sp/>to<sp/>FIFO<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" kindref="member">FIFODataReg</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>5.<sp/>Start<sp/>self-test<sp/>by<sp/>issuing<sp/>the<sp/>CalcCRC<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" kindref="member">CommandReg</ref>,<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1aee3289cb1accb952792affb0fc01a814" kindref="member">PCD_CalcCRC</ref>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>6.<sp/>Wait<sp/>for<sp/>self-test<sp/>to<sp/>complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><ref refid="namespacemfrc522_1a6e204398594060a281d6f9157a612549" kindref="member">word</ref><sp/>i;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>uint8_t<sp/>n;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>0xFF;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a8aa211e282986d84b2e47d67b5bf6337" kindref="member">DivIrqReg</ref>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DivIrqReg[7..0]<sp/>bits<sp/>are:<sp/>Set2<sp/>reserved<sp/>reserved<sp/>MfinActIRq<sp/>reserved<sp/>CRCIRq<sp/>reserved<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;<sp/>0x04)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CRCIRq<sp/>bit<sp/>set<sp/>-<sp/>calculation<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" kindref="member">CommandReg</ref>,<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6" kindref="member">PCD_Idle</ref>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>calculating<sp/>CRC<sp/>for<sp/>new<sp/>content<sp/>in<sp/>the<sp/>FIFO.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>7.<sp/>Read<sp/>out<sp/>resulting<sp/>64<sp/>bytes<sp/>from<sp/>the<sp/>FIFO<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>uint8_t<sp/>result[64];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" kindref="member">FIFODataReg</ref>,<sp/>64,<sp/>result,<sp/>0);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Auto<sp/>self-test<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>AutoTestReg<sp/>register<sp/>to<sp/>be<sp/>0<sp/>again.<sp/>Required<sp/>for<sp/>normal<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a7673b1f3f1e0620ba14ab84eca449017" kindref="member">AutoTestReg</ref>,<sp/>0x00);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>firmware<sp/>version<sp/>(see<sp/>section<sp/>9.3.4.8<sp/>in<sp/>spec)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>uint8_t<sp/>version<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a987d995305be7f2a8fe9c058ec4bd902" kindref="member">VersionReg</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pick<sp/>the<sp/>appropriate<sp/>reference<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*reference;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(version)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x91:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Version<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/>=<sp/><ref refid="namespacemfrc522_1a749840d7381e94883d25086e7fc02a5c" kindref="member">MFRC522_firmware_referenceV1_0</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x92:<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Version<sp/>2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/>=<sp/><ref refid="namespacemfrc522_1aaca23097cb085bc7fb1336ced2e0f592" kindref="member">MFRC522_firmware_referenceV2_0</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="comment">//<sp/>Unknown<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>the<sp/>results<sp/>match<sp/>up<sp/>to<sp/>our<sp/>expectations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>64;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result[i]<sp/>!=<sp/>reference[i])<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>passed;<sp/>all<sp/>is<sp/>good.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_PerformSelfTest()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="comment">//<sp/>Functions<sp/>for<sp/>communicating<sp/>with<sp/>PICCs</highlight></codeline>
<codeline lineno="331"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" kindref="member">MFRC522::PCD_TransceiveData</ref>(<sp/><sp/><sp/><sp/>uint8_t<sp/>*sendData,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>sendLen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*backData,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*backLen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*validBits,<sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>rxAlign,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkCRC<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>uint8_t<sp/>waitIRq<sp/>=<sp/>0x30;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RxIRq<sp/>and<sp/>IdleIRq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" kindref="member">PCD_CommunicateWithPICC</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1abef11bde1e2742480aa45fb1a8f99211" kindref="member">PCD_Transceive</ref>,<sp/>waitIRq,<sp/>sendData,<sp/>sendLen,<sp/>backData,<sp/>backLen,<sp/>validBits,<sp/>rxAlign,<sp/>checkCRC);</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_TransceiveData()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" kindref="member">MFRC522::PCD_CommunicateWithPICC</ref>(uint8_t<sp/>command,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>waitIRq,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*sendData,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>sendLen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*backData,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*backLen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*validBits,<sp/></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>rxAlign,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkCRC<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>uint8_t<sp/>n,<sp/>_validBits;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>values<sp/>for<sp/>BitFramingReg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>uint8_t<sp/>txLastBits<sp/>=<sp/>validBits<sp/>?<sp/>*validBits<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bitFraming<sp/>=<sp/>(rxAlign<sp/>&lt;&lt;<sp/>4)<sp/>+<sp/>txLastBits;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RxAlign<sp/>=<sp/>BitFramingReg[6..4].<sp/>TxLastBits<sp/>=<sp/>BitFramingReg[2..0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" kindref="member">CommandReg</ref>,<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a9c68698c25dc780fc93c3d6623597ea6" kindref="member">PCD_Idle</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>any<sp/>active<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a36d880f3febe92018582ed4d147ee406" kindref="member">ComIrqReg</ref>,<sp/>0x7F);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>all<sp/>seven<sp/>interrupt<sp/>request<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" kindref="member">PCD_SetRegisterBitMask</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac" kindref="member">FIFOLevelReg</ref>,<sp/>0x80);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FlushBuffer<sp/>=<sp/>1,<sp/>FIFO<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" kindref="member">FIFODataReg</ref>,<sp/>sendLen,<sp/>sendData);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>sendData<sp/>to<sp/>the<sp/>FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aeef1ebc2d45524d9e3e2327f9cb3066b" kindref="member">BitFramingReg</ref>,<sp/>bitFraming);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bit<sp/>adjustments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aec944136235d455b5a6fa522ac362bb7" kindref="member">CommandReg</ref>,<sp/>command);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Execute<sp/>the<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1abef11bde1e2742480aa45fb1a8f99211" kindref="member">PCD_Transceive</ref>)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1af7304dd35540a5e47f1f34890c455286" kindref="member">PCD_SetRegisterBitMask</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aeef1ebc2d45524d9e3e2327f9cb3066b" kindref="member">BitFramingReg</ref>,<sp/>0x80);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>StartSend=1,<sp/>transmission<sp/>of<sp/>data<sp/>starts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>the<sp/>command<sp/>to<sp/>complete.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>PCD_Init()<sp/>we<sp/>set<sp/>the<sp/>TAuto<sp/>flag<sp/>in<sp/>TModeReg.<sp/>This<sp/>means<sp/>the<sp/>timer<sp/>automatically<sp/>starts<sp/>when<sp/>the<sp/>PCD<sp/>stops<sp/>transmitting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>iteration<sp/>of<sp/>the<sp/>do-while-loop<sp/>takes<sp/>17.86�s.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>2000;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a36d880f3febe92018582ed4d147ee406" kindref="member">ComIrqReg</ref>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ComIrqReg[7..0]<sp/>bits<sp/>are:<sp/>Set1<sp/>TxIRq<sp/>RxIRq<sp/>IdleIRq<sp/>HiAlertIRq<sp/>LoAlertIRq<sp/>ErrIRq<sp/>TimerIRq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;<sp/>waitIRq)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>of<sp/>the<sp/>interrupts<sp/>that<sp/>signal<sp/>success<sp/>has<sp/>been<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&amp;<sp/>0x01)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timer<sp/>interrupt<sp/>-<sp/>nothing<sp/>received<sp/>in<sp/>25ms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" kindref="member">STATUS_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--i<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>emergency<sp/>break.<sp/>If<sp/>all<sp/>other<sp/>condions<sp/>fail<sp/>we<sp/>will<sp/>eventually<sp/>terminate<sp/>on<sp/>this<sp/>one<sp/>after<sp/>35.7ms.<sp/>Communication<sp/>with<sp/>the<sp/>MFRC522<sp/>might<sp/>be<sp/>down.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" kindref="member">STATUS_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>now<sp/>if<sp/>any<sp/>errors<sp/>except<sp/>collisions<sp/>were<sp/>detected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>uint8_t<sp/>errorRegValue<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aa6803bc2b2af9b1b60d4b33f25e29a0a" kindref="member">ErrorReg</ref>);<sp/></highlight><highlight class="comment">//<sp/>ErrorReg[7..0]<sp/>bits<sp/>are:<sp/>WrErr<sp/>TempErr<sp/>reserved<sp/>BufferOvfl<sp/>CollErr<sp/>CRCErr<sp/>ParityErr<sp/>ProtocolErr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorRegValue<sp/>&amp;<sp/>0x13)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BufferOvfl<sp/>ParityErr<sp/>ProtocolErr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" kindref="member">STATUS_ERROR</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>caller<sp/>wants<sp/>data<sp/>back,<sp/>get<sp/>it<sp/>from<sp/>the<sp/>MFRC522.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backData<sp/>&amp;&amp;<sp/>backLen)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11adf909659c714fa0a8938ef4bef5d72ac" kindref="member">FIFOLevelReg</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>bytes<sp/>in<sp/>the<sp/>FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>*backLen)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" kindref="member">STATUS_NO_ROOM</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>*backLen<sp/>=<sp/>n;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>bytes<sp/>returned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ae479f4fb5840e001a90ca6e19ec87a4b" kindref="member">FIFODataReg</ref>,<sp/>n,<sp/>backData,<sp/>rxAlign);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>received<sp/>data<sp/>from<sp/>FIFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>_validBits<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a950cb7f8d39d0d1fe78d1c877a6d44a0" kindref="member">ControlReg</ref>)<sp/>&amp;<sp/>0x07;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RxLastBits[2:0]<sp/>indicates<sp/>the<sp/>number<sp/>of<sp/>valid<sp/>bits<sp/>in<sp/>the<sp/>last<sp/>received<sp/>byte.<sp/>If<sp/>this<sp/>value<sp/>is<sp/>000b,<sp/>the<sp/>whole<sp/>byte<sp/>is<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validBits)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*validBits<sp/>=<sp/>_validBits;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>about<sp/>collisions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errorRegValue<sp/>&amp;<sp/>0x08)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CollErr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" kindref="member">STATUS_COLLISION</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>CRC_A<sp/>validation<sp/>if<sp/>requested.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(backData<sp/>&amp;&amp;<sp/>backLen<sp/>&amp;&amp;<sp/>checkCRC)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>case<sp/>a<sp/>MIFARE<sp/>Classic<sp/>NAK<sp/>is<sp/>not<sp/>OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*backLen<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>_validBits<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea991d8d22bd15cb327ce413664f43b314" kindref="member">STATUS_MIFARE_NACK</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>at<sp/>least<sp/>the<sp/>CRC_A<sp/>value<sp/>and<sp/>all<sp/>8<sp/>bits<sp/>of<sp/>the<sp/>last<sp/>byte<sp/>must<sp/>be<sp/>received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*backLen<sp/>&lt;<sp/>2<sp/>||<sp/>_validBits<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31" kindref="member">STATUS_CRC_WRONG</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>CRC_A<sp/>-<sp/>do<sp/>our<sp/>own<sp/>calculation<sp/>and<sp/>store<sp/>the<sp/>control<sp/>in<sp/>controlBuffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>controlBuffer[2];</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" kindref="member">PCD_CalculateCRC</ref>(&amp;backData[0],<sp/>*backLen<sp/>-<sp/>2,<sp/>&amp;controlBuffer[0]);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((backData[*backLen<sp/>-<sp/>2]<sp/>!=<sp/>controlBuffer[0])<sp/>||<sp/>(backData[*backLen<sp/>-<sp/>1]<sp/>!=<sp/>controlBuffer[1]))<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31" kindref="member">STATUS_CRC_WRONG</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_CommunicateWithPICC()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="classmfrc522_1_1_m_f_r_c522_1a44dd708016d31efc20bd2dbdb1f67aaf" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a44dd708016d31efc20bd2dbdb1f67aaf" kindref="member">MFRC522::PICC_RequestA</ref>(uint8_t<sp/>*bufferATQA,<sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*bufferSize<sp/></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775" kindref="member">PICC_REQA_or_WUPA</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abf8bb05ffb365cb0d01679abc678b7d1" kindref="member">PICC_CMD_REQA</ref>,<sp/>bufferATQA,<sp/>bufferSize);</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_RequestA()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="classmfrc522_1_1_m_f_r_c522_1add1b450123e4670d88e0b6cb2ddca0c7" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1add1b450123e4670d88e0b6cb2ddca0c7" kindref="member">MFRC522::PICC_WakeupA</ref>(uint8_t<sp/>*bufferATQA,<sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*bufferSize<sp/></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775" kindref="member">PICC_REQA_or_WUPA</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac69de174e9f3b7d8cc0b3e4b8be978ae" kindref="member">PICC_CMD_WUPA</ref>,<sp/>bufferATQA,<sp/>bufferSize);</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_WakeupA()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a3a28f6484ea6b1ed85745512da6ab775" kindref="member">MFRC522::PICC_REQA_or_WUPA</ref>(uint8_t<sp/>command,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*bufferATQA,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*bufferSize<sp/></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>uint8_t<sp/>validBits;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>uint8_t<sp/>status;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufferATQA<sp/>==<sp/>NULL<sp/>||<sp/>*bufferSize<sp/>&lt;<sp/>2)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>ATQA<sp/>response<sp/>is<sp/>2<sp/>bytes<sp/>long.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" kindref="member">STATUS_NO_ROOM</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" kindref="member">PCD_ClearRegisterBitMask</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ac58131928da13c94b3a465c6a0276976" kindref="member">CollReg</ref>,<sp/>0x80);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ValuesAfterColl=1<sp/>=&gt;<sp/>Bits<sp/>received<sp/>after<sp/>collision<sp/>are<sp/>cleared.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>validBits<sp/>=<sp/>7;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>REQA<sp/>and<sp/>WUPA<sp/>we<sp/>need<sp/>the<sp/>short<sp/>frame<sp/>format<sp/>-<sp/>transmit<sp/>only<sp/>7<sp/>bits<sp/>of<sp/>the<sp/>last<sp/>(and<sp/>only)<sp/>byte.<sp/>TxLastBits<sp/>=<sp/>BitFramingReg[2..0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" kindref="member">PCD_TransceiveData</ref>(&amp;command,<sp/>1,<sp/>bufferATQA,<sp/>bufferSize,<sp/>&amp;validBits);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*bufferSize<sp/>!=<sp/>2<sp/>||<sp/>validBits<sp/>!=<sp/>0)<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ATQA<sp/>must<sp/>be<sp/>exactly<sp/>16<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" kindref="member">STATUS_ERROR</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_REQA_or_WUPA()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" kindref="member">MFRC522::PICC_Select</ref>(<sp/><sp/><sp/><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref><sp/>*uid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>validBits<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>uidComplete;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectDone;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useCascadeTag;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>uint8_t<sp/>cascadeLevel<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>uint8_t<sp/>result;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>uint8_t<sp/>count;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>uint8_t<sp/>index;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>uint8_t<sp/>uidIndex;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>index<sp/>in<sp/>uid-&gt;uidByte[]<sp/>that<sp/>is<sp/>used<sp/>in<sp/>the<sp/>current<sp/>Cascade<sp/>Level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>currentLevelKnownBits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>known<sp/>UID<sp/>bits<sp/>in<sp/>the<sp/>current<sp/>Cascade<sp/>Level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/>uint8_t<sp/>buffer[9];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>SELECT/ANTICOLLISION<sp/>commands<sp/>uses<sp/>a<sp/>7<sp/>byte<sp/>standard<sp/>frame<sp/>+<sp/>2<sp/>bytes<sp/>CRC_A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bufferUsed;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>used<sp/>in<sp/>the<sp/>buffer,<sp/>ie<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>transfer<sp/>to<sp/>the<sp/>FIFO.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>uint8_t<sp/>rxAlign;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>in<sp/>BitFramingReg.<sp/>Defines<sp/>the<sp/>bit<sp/>position<sp/>for<sp/>the<sp/>first<sp/>bit<sp/>received.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>uint8_t<sp/>txLastBits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>in<sp/>BitFramingReg.<sp/>The<sp/>number<sp/>of<sp/>valid<sp/>bits<sp/>in<sp/>the<sp/>last<sp/>transmitted<sp/>byte.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*responseBuffer;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>uint8_t<sp/>responseLength;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Description<sp/>of<sp/>buffer<sp/>structure:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>0:<sp/>SEL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>the<sp/>Cascade<sp/>Level:<sp/>PICC_CMD_SEL_CL1,<sp/>PICC_CMD_SEL_CL2<sp/>or<sp/>PICC_CMD_SEL_CL3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>1:<sp/>NVB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>Valid<sp/>Bits<sp/>(in<sp/>complete<sp/>command,<sp/>not<sp/>just<sp/>the<sp/>UID):<sp/>High<sp/>nibble:<sp/>complete<sp/>bytes,<sp/>Low<sp/>nibble:<sp/>Extra<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>2:<sp/>UID-data<sp/>or<sp/>CT<sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>explanation<sp/>below.<sp/>CT<sp/>means<sp/>Cascade<sp/>Tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>3:<sp/>UID-data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>4:<sp/>UID-data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>5:<sp/>UID-data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>6:<sp/>BCC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Block<sp/>Check<sp/>Character<sp/>-<sp/>XOR<sp/>of<sp/>bytes<sp/>2-5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>7:<sp/>CRC_A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>8:<sp/>CRC_A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>BCC<sp/>and<sp/>CRC_A<sp/>is<sp/>only<sp/>transmitted<sp/>if<sp/>we<sp/>know<sp/>all<sp/>the<sp/>UID<sp/>bits<sp/>of<sp/>the<sp/>current<sp/>Cascade<sp/>Level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Description<sp/>of<sp/>bytes<sp/>2-5:<sp/>(Section<sp/>6.5.4<sp/>of<sp/>the<sp/>ISO/IEC<sp/>14443-3<sp/>draft:<sp/>UID<sp/>contents<sp/>and<sp/>cascade<sp/>levels)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UID<sp/>size<sp/><sp/><sp/><sp/>Cascade<sp/>level<sp/><sp/><sp/>Byte2<sp/><sp/><sp/>Byte3<sp/><sp/><sp/>Byte4<sp/><sp/><sp/>Byte5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>========<sp/><sp/><sp/><sp/>=============<sp/><sp/><sp/>=====<sp/><sp/><sp/>=====<sp/><sp/><sp/>=====<sp/><sp/><sp/>=====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>bytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid0<sp/><sp/><sp/><sp/>uid1<sp/><sp/><sp/><sp/>uid2<sp/><sp/><sp/><sp/>uid3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/>bytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CT<sp/><sp/><sp/><sp/><sp/><sp/>uid0<sp/><sp/><sp/><sp/>uid1<sp/><sp/><sp/><sp/>uid2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid3<sp/><sp/><sp/><sp/>uid4<sp/><sp/><sp/><sp/>uid5<sp/><sp/><sp/><sp/>uid6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10<sp/>bytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CT<sp/><sp/><sp/><sp/><sp/><sp/>uid0<sp/><sp/><sp/><sp/>uid1<sp/><sp/><sp/><sp/>uid2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CT<sp/><sp/><sp/><sp/><sp/><sp/>uid3<sp/><sp/><sp/><sp/>uid4<sp/><sp/><sp/><sp/>uid5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uid6<sp/><sp/><sp/><sp/>uid7<sp/><sp/><sp/><sp/>uid8<sp/><sp/><sp/><sp/>uid9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validBits<sp/>&gt;<sp/>80)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" kindref="member">STATUS_INVALID</ref>;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>MFRC522</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" kindref="member">PCD_ClearRegisterBitMask</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ac58131928da13c94b3a465c6a0276976" kindref="member">CollReg</ref>,<sp/>0x80);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ValuesAfterColl=1<sp/>=&gt;<sp/>Bits<sp/>received<sp/>after<sp/>collision<sp/>are<sp/>cleared.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Repeat<sp/>Cascade<sp/>Level<sp/>loop<sp/>until<sp/>we<sp/>have<sp/>a<sp/>complete<sp/>UID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>uidComplete<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!uidComplete)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>Cascade<sp/>Level<sp/>in<sp/>the<sp/>SEL<sp/>byte,<sp/>find<sp/>out<sp/>if<sp/>we<sp/>need<sp/>to<sp/>use<sp/>the<sp/>Cascade<sp/>Tag<sp/>in<sp/>byte<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cascadeLevel)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac018ecee156fed326cdac2ceb29a38bd" kindref="member">PICC_CMD_SEL_CL1</ref>;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uidIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>useCascadeTag<sp/>=<sp/>validBits<sp/>&amp;&amp;<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>-&gt;<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a3d5653ea12fd20b8c755b34cd0ea74de" kindref="member">size</ref><sp/>&gt;<sp/>4;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>know<sp/>that<sp/>the<sp/>UID<sp/>has<sp/>more<sp/>than<sp/>4<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a1eb5f3af0ce3d4728e6efc8f2d6d8a9c" kindref="member">PICC_CMD_SEL_CL2</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uidIndex<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>useCascadeTag<sp/>=<sp/>validBits<sp/>&amp;&amp;<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>-&gt;<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a3d5653ea12fd20b8c755b34cd0ea74de" kindref="member">size</ref><sp/>&gt;<sp/>7;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>know<sp/>that<sp/>the<sp/>UID<sp/>has<sp/>more<sp/>than<sp/>7<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aa3f6c8c1f347fb9fef575e09e6b4d26b" kindref="member">PICC_CMD_SEL_CL3</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uidIndex<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>useCascadeTag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Never<sp/>used<sp/>in<sp/>CL3.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1c572582a06e252ccf3cccdfdaf051b2" kindref="member">STATUS_INTERNAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>many<sp/>UID<sp/>bits<sp/>are<sp/>known<sp/>in<sp/>this<sp/>Cascade<sp/>Level?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>currentLevelKnownBits<sp/>=<sp/>validBits<sp/>-<sp/>(8<sp/>*<sp/>uidIndex);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentLevelKnownBits<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentLevelKnownBits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>known<sp/>bits<sp/>from<sp/>uid-&gt;uidByte[]<sp/>to<sp/>buffer[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>destination<sp/>index<sp/>in<sp/>buffer[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useCascadeTag)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[index++]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a16883066555df303700ee5b7635a11f0" kindref="member">PICC_CMD_CT</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bytesToCopy<sp/>=<sp/>currentLevelKnownBits<sp/>/<sp/>8<sp/>+<sp/>(currentLevelKnownBits<sp/>%<sp/>8<sp/>?<sp/>1<sp/>:<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>bytes<sp/>needed<sp/>to<sp/>represent<sp/>the<sp/>known<sp/>bits<sp/>for<sp/>this<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytesToCopy)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>maxBytes<sp/>=<sp/>useCascadeTag<sp/>?<sp/>3<sp/>:<sp/>4;<sp/></highlight><highlight class="comment">//<sp/>Max<sp/>4<sp/>bytes<sp/>in<sp/>each<sp/>Cascade<sp/>Level.<sp/>Only<sp/>3<sp/>left<sp/>if<sp/>we<sp/>use<sp/>the<sp/>Cascade<sp/>Tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytesToCopy<sp/>&gt;<sp/>maxBytes)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>bytesToCopy<sp/>=<sp/>maxBytes;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(count<sp/>=<sp/>0;<sp/>count<sp/>&lt;<sp/>bytesToCopy;<sp/>count++)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[index++]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>-&gt;<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a1e24dca2d0702fbb6352a41cb598a0a9" kindref="member">uidByte</ref>[uidIndex<sp/>+<sp/>count];</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>that<sp/>the<sp/>data<sp/>has<sp/>been<sp/>copied<sp/>we<sp/>need<sp/>to<sp/>include<sp/>the<sp/>8<sp/>bits<sp/>in<sp/>CT<sp/>in<sp/>currentLevelKnownBits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useCascadeTag)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentLevelKnownBits<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Repeat<sp/>anti<sp/>collision<sp/>loop<sp/>until<sp/>we<sp/>can<sp/>transmit<sp/>all<sp/>UID<sp/>bits<sp/>+<sp/>BCC<sp/>and<sp/>receive<sp/>a<sp/>SAK<sp/>-<sp/>max<sp/>32<sp/>iterations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>selectDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!selectDone)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>out<sp/>how<sp/>many<sp/>bits<sp/>and<sp/>bytes<sp/>to<sp/>send<sp/>and<sp/>receive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentLevelKnownBits<sp/>&gt;=<sp/>32)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>All<sp/>UID<sp/>bits<sp/>in<sp/>this<sp/>Cascade<sp/>Level<sp/>are<sp/>known.<sp/>This<sp/>is<sp/>a<sp/>SELECT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(F(&quot;SELECT:<sp/>currentLevelKnownBits=&quot;));<sp/>Serial.println(currentLevelKnownBits,<sp/>DEC);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[1]<sp/>=<sp/>0x70;<sp/></highlight><highlight class="comment">//<sp/>NVB<sp/>-<sp/>Number<sp/>of<sp/>Valid<sp/>Bits:<sp/>Seven<sp/>whole<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>BCC<sp/>-<sp/>Block<sp/>Check<sp/>Character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[6]<sp/>=<sp/>buffer[2]<sp/>^<sp/>buffer[3]<sp/>^<sp/>buffer[4]<sp/>^<sp/>buffer[5];</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>CRC_A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" kindref="member">PCD_CalculateCRC</ref>(buffer,<sp/>7,<sp/>&amp;buffer[7]);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>txLastBits<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>=&gt;<sp/>All<sp/>8<sp/>bits<sp/>are<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferUsed<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>response<sp/>in<sp/>the<sp/>last<sp/>3<sp/>bytes<sp/>of<sp/>buffer<sp/>(BCC<sp/>and<sp/>CRC_A<sp/>-<sp/>not<sp/>needed<sp/>after<sp/>tx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>responseBuffer<sp/><sp/>=<sp/>&amp;buffer[6];</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>responseLength<sp/><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>an<sp/>ANTICOLLISION.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Serial.print(F(&quot;ANTICOLLISION:<sp/>currentLevelKnownBits=&quot;));<sp/>Serial.println(currentLevelKnownBits,<sp/>DEC);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>txLastBits<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>currentLevelKnownBits<sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>currentLevelKnownBits<sp/>/<sp/>8;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>whole<sp/>bytes<sp/>in<sp/>the<sp/>UID<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2<sp/>+<sp/>count;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>whole<sp/>bytes:<sp/>SEL<sp/>+<sp/>NVB<sp/>+<sp/>UIDs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(index<sp/>&lt;&lt;<sp/>4)<sp/>+<sp/>txLastBits;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NVB<sp/>-<sp/>Number<sp/>of<sp/>Valid<sp/>Bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferUsed<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>index<sp/>+<sp/>(txLastBits<sp/>?<sp/>1<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>response<sp/>in<sp/>the<sp/>unused<sp/>part<sp/>of<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>responseBuffer<sp/><sp/>=<sp/>&amp;buffer[index];</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>responseLength<sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer)<sp/>-<sp/>index;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>bit<sp/>adjustments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rxAlign<sp/>=<sp/>txLastBits;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Having<sp/>a<sp/>seperate<sp/>variable<sp/>is<sp/>overkill.<sp/>But<sp/>it<sp/>makes<sp/>the<sp/>next<sp/>line<sp/>easier<sp/>to<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aef8efdbb515b419df6c0038312c4f4e3" kindref="member">PCD_WriteRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11aeef1ebc2d45524d9e3e2327f9cb3066b" kindref="member">BitFramingReg</ref>,<sp/>(rxAlign<sp/>&lt;&lt;<sp/>4)<sp/>+<sp/>txLastBits);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RxAlign<sp/>=<sp/>BitFramingReg[6..4].<sp/>TxLastBits<sp/>=<sp/>BitFramingReg[2..0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transmit<sp/>the<sp/>buffer<sp/>and<sp/>receive<sp/>the<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" kindref="member">PCD_TransceiveData</ref>(buffer,<sp/>bufferUsed,<sp/>responseBuffer,<sp/>&amp;responseLength,<sp/>&amp;txLastBits,<sp/>rxAlign);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" kindref="member">STATUS_COLLISION</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>More<sp/>than<sp/>one<sp/>PICC<sp/>in<sp/>the<sp/>field<sp/>=&gt;<sp/>collision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a54b1e0960ffe689bb512b9ed79dcdece" kindref="member">PCD_ReadRegister</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11ac58131928da13c94b3a465c6a0276976" kindref="member">CollReg</ref>);<sp/></highlight><highlight class="comment">//<sp/>CollReg[7..0]<sp/>bits<sp/>are:<sp/>ValuesAfterColl<sp/>reserved<sp/>CollPosNotValid<sp/>CollPos[4:0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&amp;<sp/>0x20)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>CollPosNotValid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" kindref="member">STATUS_COLLISION</ref>;<sp/></highlight><highlight class="comment">//<sp/>Without<sp/>a<sp/>valid<sp/>collision<sp/>position<sp/>we<sp/>cannot<sp/>continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>collisionPos<sp/>=<sp/>result<sp/>&amp;<sp/>0x1F;<sp/></highlight><highlight class="comment">//<sp/>Values<sp/>0-31,<sp/>0<sp/>means<sp/>bit<sp/>32.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(collisionPos<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>collisionPos<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(collisionPos<sp/>&lt;=<sp/>currentLevelKnownBits)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>No<sp/>progress<sp/>-<sp/>should<sp/>not<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1c572582a06e252ccf3cccdfdaf051b2" kindref="member">STATUS_INTERNAL_ERROR</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>the<sp/>PICC<sp/>with<sp/>the<sp/>bit<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>currentLevelKnownBits<sp/>=<sp/>collisionPos;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(currentLevelKnownBits<sp/>-<sp/>1)<sp/>%<sp/>8;<sp/></highlight><highlight class="comment">//<sp/>The<sp/>bit<sp/>to<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>+<sp/>(currentLevelKnownBits<sp/>/<sp/>8)<sp/>+<sp/>(count<sp/>?<sp/>1<sp/>:<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>First<sp/>byte<sp/>is<sp/>index<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[index]<sp/><sp/><sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>count);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>STATUS_OK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentLevelKnownBits<sp/>&gt;=<sp/>32)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>This<sp/>was<sp/>a<sp/>SELECT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>selectDone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>No<sp/>more<sp/>anticollision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>continue<sp/>below<sp/>outside<sp/>the<sp/>while.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>This<sp/>was<sp/>an<sp/>ANTICOLLISION.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>now<sp/>have<sp/>all<sp/>32<sp/>bits<sp/>of<sp/>the<sp/>UID<sp/>in<sp/>this<sp/>Cascade<sp/>Level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>currentLevelKnownBits<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>loop<sp/>again<sp/>to<sp/>do<sp/>the<sp/>SELECT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>while<sp/>(!selectDone)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>not<sp/>check<sp/>the<sp/>CBB<sp/>-<sp/>it<sp/>was<sp/>constructed<sp/>by<sp/>us<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>found<sp/>UID<sp/>bytes<sp/>from<sp/>buffer[]<sp/>to<sp/>uid-&gt;uidByte[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(buffer[2]<sp/>==<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a16883066555df303700ee5b7635a11f0" kindref="member">PICC_CMD_CT</ref>)<sp/>?<sp/>3<sp/>:<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>source<sp/>index<sp/>in<sp/>buffer[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>bytesToCopy<sp/><sp/><sp/><sp/><sp/>=<sp/>(buffer[2]<sp/>==<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a16883066555df303700ee5b7635a11f0" kindref="member">PICC_CMD_CT</ref>)<sp/>?<sp/>3<sp/>:<sp/>4;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(count<sp/>=<sp/>0;<sp/>count<sp/>&lt;<sp/>bytesToCopy;<sp/>count++)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>-&gt;<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a1e24dca2d0702fbb6352a41cb598a0a9" kindref="member">uidByte</ref>[uidIndex<sp/>+<sp/>count]<sp/>=<sp/>buffer[index++];</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>response<sp/>SAK<sp/>(Select<sp/>Acknowledge)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(responseLength<sp/>!=<sp/>3<sp/>||<sp/>txLastBits<sp/>!=<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>SAK<sp/>must<sp/>be<sp/>exactly<sp/>24<sp/>bits<sp/>(1<sp/>byte<sp/>+<sp/>CRC_A).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" kindref="member">STATUS_ERROR</ref>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>CRC_A<sp/>-<sp/>do<sp/>our<sp/>own<sp/>calculation<sp/>and<sp/>store<sp/>the<sp/>control<sp/>in<sp/>buffer[2..3]<sp/>-<sp/>those<sp/>bytes<sp/>are<sp/>not<sp/>needed<sp/>anymore.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" kindref="member">PCD_CalculateCRC</ref>(responseBuffer,<sp/>1,<sp/>&amp;buffer[2]);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((buffer[2]<sp/>!=<sp/>responseBuffer[1])<sp/>||<sp/>(buffer[3]<sp/>!=<sp/>responseBuffer[2]))<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31" kindref="member">STATUS_CRC_WRONG</ref>;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(responseBuffer[0]<sp/>&amp;<sp/>0x04)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Cascade<sp/>bit<sp/>set<sp/>-<sp/>UID<sp/>not<sp/>complete<sp/>yes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cascadeLevel++;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uidComplete<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>-&gt;<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a765eeb2bc53a0e2a00d5842916241745" kindref="member">sak</ref><sp/>=<sp/>responseBuffer[0];</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>while<sp/>(!uidComplete)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>correct<sp/>uid-&gt;size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>-&gt;<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a3d5653ea12fd20b8c755b34cd0ea74de" kindref="member">size</ref><sp/>=<sp/>3<sp/>*<sp/>cascadeLevel<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_Select()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" kindref="member">MFRC522::PICC_HaltA</ref>()<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>uint8_t<sp/>result;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>uint8_t<sp/>buffer[4];</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>command<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>buffer[0]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a4571c00e0e50ced328c148c72e8c8c8b" kindref="member">PICC_CMD_HLTA</ref>;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>buffer[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>CRC_A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" kindref="member">PCD_CalculateCRC</ref>(buffer,<sp/>2,<sp/>&amp;buffer[2]);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>standard<sp/>says:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>PICC<sp/>responds<sp/>with<sp/>any<sp/>modulation<sp/>during<sp/>a<sp/>period<sp/>of<sp/>1<sp/>ms<sp/>after<sp/>the<sp/>end<sp/>of<sp/>the<sp/>frame<sp/>containing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HLTA<sp/>command,<sp/>this<sp/>response<sp/>shall<sp/>be<sp/>interpreted<sp/>as<sp/>&apos;not<sp/>acknowledge&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>interpret<sp/>that<sp/>this<sp/>way:<sp/>Only<sp/>STATUS_TIMEOUT<sp/>is<sp/>an<sp/>success.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" kindref="member">PCD_TransceiveData</ref>(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer),<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" kindref="member">STATUS_TIMEOUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>That<sp/>is<sp/>ironically<sp/>NOT<sp/>ok<sp/>in<sp/>this<sp/>case<sp/>;-)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" kindref="member">STATUS_ERROR</ref>;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="759"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_HaltA()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="comment">//<sp/>Functions<sp/>for<sp/>communicating<sp/>with<sp/>MIFARE<sp/>PICCs</highlight></codeline>
<codeline lineno="765"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778" refid="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" kindref="member">MFRC522::PCD_Authenticate</ref>(uint8_t<sp/>command,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>blockAddr,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key" kindref="compound">MIFARE_Key</ref><sp/>*key,<sp/></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref><sp/>*uid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>uint8_t<sp/>waitIRq<sp/>=<sp/>0x10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IdleIRq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>command<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>uint8_t<sp/>sendData[12];</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>sendData[0]<sp/>=<sp/>command;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>sendData[1]<sp/>=<sp/>blockAddr;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caa6b49626dcb7cc58cb460378caf71908f" kindref="member">MF_KEY_SIZE</ref>;<sp/>i++)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6<sp/>key<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>sendData[2+i]<sp/>=<sp/>key-&gt;<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key_1aa794e440258b611c8049d4f233b38bb9" kindref="member">keyByte</ref>[i];</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>4<sp/>bytes<sp/>of<sp/>the<sp/>UID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>sendData[8+i]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>-&gt;<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a1e24dca2d0702fbb6352a41cb598a0a9" kindref="member">uidByte</ref>[i];</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>the<sp/>authentication.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" kindref="member">PCD_CommunicateWithPICC</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1a4504a068cace1f0b9164b2f3a3255d2b" kindref="member">PCD_MFAuthent</ref>,<sp/>waitIRq,<sp/>&amp;sendData[0],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sendData));</highlight></codeline>
<codeline lineno="798"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_Authenticate()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="804" refid="classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b" kindref="member">MFRC522::PCD_StopCrypto1</ref>()<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>MFCrypto1On<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a24112afc3d08921c21d718c74dc8ca71" kindref="member">PCD_ClearRegisterBitMask</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a79379909c9677dab97379aa6e73d3c11a77750cd41045db5305665ccfceb7ca77" kindref="member">Status2Reg</ref>,<sp/>0x08);<sp/></highlight><highlight class="comment">//<sp/>Status2Reg[7..0]<sp/>bits<sp/>are:<sp/>TempSensClear<sp/>I2CForceHS<sp/>reserved<sp/>reserved<sp/>MFCrypto1On<sp/>ModemState[2:0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_StopCrypto1()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" kindref="member">MFRC522::MIFARE_Read</ref>(<sp/><sp/><sp/>uint8_t<sp/>blockAddr,<sp/><sp/></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*buffer,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*bufferSize<sp/></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>uint8_t<sp/>result;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>NULL<sp/>||<sp/>*bufferSize<sp/>&lt;<sp/>18)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" kindref="member">STATUS_NO_ROOM</ref>;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>command<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>buffer[0]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a6e7b073f0a517053c124c3e539f97c7d" kindref="member">PICC_CMD_MF_READ</ref>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>buffer[1]<sp/>=<sp/>blockAddr;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>CRC_A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" kindref="member">PCD_CalculateCRC</ref>(buffer,<sp/>2,<sp/>&amp;buffer[2]);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transmit<sp/>the<sp/>buffer<sp/>and<sp/>receive<sp/>the<sp/>response,<sp/>validate<sp/>CRC_A.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" kindref="member">PCD_TransceiveData</ref>(buffer,<sp/>4,<sp/>buffer,<sp/>bufferSize,<sp/>NULL,<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>MIFARE_Read()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="860" refid="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" kindref="member">MFRC522::MIFARE_Write</ref>(<sp/><sp/>uint8_t<sp/>blockAddr,<sp/></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*buffer,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>bufferSize<sp/><sp/></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>uint8_t<sp/>result;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>NULL<sp/>||<sp/>bufferSize<sp/>&lt;<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" kindref="member">STATUS_INVALID</ref>;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mifare<sp/>Classic<sp/>protocol<sp/>requires<sp/>two<sp/>communications<sp/>to<sp/>perform<sp/>a<sp/>write.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1:<sp/>Tell<sp/>the<sp/>PICC<sp/>we<sp/>want<sp/>to<sp/>write<sp/>to<sp/>block<sp/>blockAddr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/>uint8_t<sp/>cmdBuffer[2];</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>cmdBuffer[0]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aaa1ee47263d5557db433506506d38644" kindref="member">PICC_CMD_MF_WRITE</ref>;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/>cmdBuffer[1]<sp/>=<sp/>blockAddr;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" kindref="member">PCD_MIFARE_Transceive</ref>(cmdBuffer,<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>CRC_A<sp/>and<sp/>checks<sp/>that<sp/>the<sp/>response<sp/>is<sp/>MF_ACK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>2:<sp/>Transfer<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" kindref="member">PCD_MIFARE_Transceive</ref>(buffer,<sp/>bufferSize);<sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>CRC_A<sp/>and<sp/>checks<sp/>that<sp/>the<sp/>response<sp/>is<sp/>MF_ACK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="888"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>MIFARE_Write()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="895" refid="classmfrc522_1_1_m_f_r_c522_1afcd5d913410ed3694fab339f311b93de" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1afcd5d913410ed3694fab339f311b93de" kindref="member">MFRC522::MIFARE_Ultralight_Write</ref>(<sp/><sp/><sp/>uint8_t<sp/>page,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*buffer,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>bufferSize<sp/><sp/></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>uint8_t<sp/>result;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>NULL<sp/>||<sp/>bufferSize<sp/>&lt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" kindref="member">STATUS_INVALID</ref>;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>commmand<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>uint8_t<sp/>cmdBuffer[6];</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/>cmdBuffer[0]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a05ab0577fc5ebef596758d0435caff6a" kindref="member">PICC_CMD_UL_WRITE</ref>;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>cmdBuffer[1]<sp/>=<sp/>page;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>memcpy(&amp;cmdBuffer[2],<sp/>buffer,<sp/>4);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>the<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" kindref="member">PCD_MIFARE_Transceive</ref>(cmdBuffer,<sp/>6);<sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>CRC_A<sp/>and<sp/>checks<sp/>that<sp/>the<sp/>response<sp/>is<sp/>MF_ACK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="918"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>MIFARE_Ultralight_Write()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="928" refid="classmfrc522_1_1_m_f_r_c522_1a56515c1027c5a471f56b128a1404f437" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a56515c1027c5a471f56b128a1404f437" kindref="member">MFRC522::MIFARE_Decrement</ref>(<sp/><sp/>uint8_t<sp/>blockAddr,<sp/></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>delta<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MIFARE_TwoStepHelper(<ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a23b6cd831f9cf639542261446eaf3e88" kindref="member">PICC_CMD_MF_DECREMENT</ref>,<sp/>blockAddr,<sp/>delta);</highlight></codeline>
<codeline lineno="932"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>MIFARE_Decrement()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="942" refid="classmfrc522_1_1_m_f_r_c522_1af3a8dd85230de88fea86fa21d72ab742" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1af3a8dd85230de88fea86fa21d72ab742" kindref="member">MFRC522::MIFARE_Increment</ref>(<sp/><sp/>uint8_t<sp/>blockAddr,<sp/></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>delta<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MIFARE_TwoStepHelper(<ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40ac206f2ba080fd8bae26a60cf8e9aa0f0" kindref="member">PICC_CMD_MF_INCREMENT</ref>,<sp/>blockAddr,<sp/>delta);</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>MIFARE_Increment()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="956" refid="classmfrc522_1_1_m_f_r_c522_1aaba45a947ba5a47f11ab346a764cedaf" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1aaba45a947ba5a47f11ab346a764cedaf" kindref="member">MFRC522::MIFARE_Restore</ref>(<sp/><sp/><sp/><sp/>uint8_t<sp/>blockAddr<sp/></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>datasheet<sp/>describes<sp/>Restore<sp/>as<sp/>a<sp/>two<sp/>step<sp/>operation,<sp/>but<sp/>does<sp/>not<sp/>explain<sp/>what<sp/>data<sp/>to<sp/>transfer<sp/>in<sp/>step<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Doing<sp/>only<sp/>a<sp/>single<sp/>step<sp/>does<sp/>not<sp/>work,<sp/>so<sp/>I<sp/>chose<sp/>to<sp/>transfer<sp/>0L<sp/>in<sp/>step<sp/>two.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MIFARE_TwoStepHelper(<ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40a03960da2ba6fe363307249c0ebda4794" kindref="member">PICC_CMD_MF_RESTORE</ref>,<sp/>blockAddr,<sp/>0L);</highlight></codeline>
<codeline lineno="961"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>MIFARE_Restore()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal">uint8_t<sp/>MFRC522::MIFARE_TwoStepHelper(<sp/><sp/>uint8_t<sp/>command,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>blockAddr,<sp/><sp/></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>data<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>uint8_t<sp/>result;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/>uint8_t<sp/>cmdBuffer[2];<sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>need<sp/>room<sp/>for<sp/>2<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1:<sp/>Tell<sp/>the<sp/>PICC<sp/>the<sp/>command<sp/>and<sp/>block<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/>cmdBuffer[0]<sp/>=<sp/>command;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/>cmdBuffer[1]<sp/>=<sp/>blockAddr;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" kindref="member">PCD_MIFARE_Transceive</ref>(<sp/><sp/><sp/>cmdBuffer,<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>CRC_A<sp/>and<sp/>checks<sp/>that<sp/>the<sp/>response<sp/>is<sp/>MF_ACK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>2:<sp/>Transfer<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" kindref="member">PCD_MIFARE_Transceive</ref>(<sp/><sp/><sp/>(uint8_t<sp/>*)&amp;data,<sp/>4,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>CRC_A<sp/>and<sp/>accept<sp/>timeout<sp/>as<sp/>success.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>MIFARE_TwoStepHelper()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="999" refid="classmfrc522_1_1_m_f_r_c522_1a3b85e9b839756a4eb516195ef498ce58" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a3b85e9b839756a4eb516195ef498ce58" kindref="member">MFRC522::MIFARE_Transfer</ref>(<sp/><sp/><sp/>uint8_t<sp/>blockAddr<sp/></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>uint8_t<sp/>result;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/>uint8_t<sp/>cmdBuffer[2];<sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>need<sp/>room<sp/>for<sp/>2<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>PICC<sp/>we<sp/>want<sp/>to<sp/>transfer<sp/>the<sp/>result<sp/>into<sp/>block<sp/>blockAddr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>cmdBuffer[0]<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40aca11dd8f22ee92e74dea6eccb04acdbf" kindref="member">PICC_CMD_MF_TRANSFER</ref>;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>cmdBuffer[1]<sp/>=<sp/>blockAddr;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" kindref="member">PCD_MIFARE_Transceive</ref>(<sp/><sp/><sp/>cmdBuffer,<sp/>2);<sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>CRC_A<sp/>and<sp/>checks<sp/>that<sp/>the<sp/>response<sp/>is<sp/>MF_ACK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>MIFARE_Transfer()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025" refid="classmfrc522_1_1_m_f_r_c522_1abf16c5a992c8692c2cf4f65e6ad19a13" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1abf16c5a992c8692c2cf4f65e6ad19a13" kindref="member">MFRC522::MIFARE_GetValue</ref>(uint8_t<sp/>blockAddr,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*value)<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/>uint8_t<sp/>status;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/>uint8_t<sp/>buffer[18];</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>uint8_t<sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" kindref="member">MIFARE_Read</ref>(blockAddr,<sp/>buffer,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>(long(buffer[3])&lt;&lt;24)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">(buffer[2])&lt;&lt;16)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">(buffer[1])&lt;&lt;8)<sp/>|<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">(buffer[0]);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>MIFARE_GetValue()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050" refid="classmfrc522_1_1_m_f_r_c522_1a1733fb64ad8fa119e3fe945d6287d059" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a1733fb64ad8fa119e3fe945d6287d059" kindref="member">MFRC522::MIFARE_SetValue</ref>(uint8_t<sp/>blockAddr,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>uint8_t<sp/>buffer[18];</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Translate<sp/>the<sp/>long<sp/>into<sp/>4<sp/>bytes;<sp/>repeated<sp/>2x<sp/>in<sp/>value<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/>buffer[0]<sp/>=<sp/>buffer[<sp/>8]<sp/>=<sp/>(value<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/>buffer[1]<sp/>=<sp/>buffer[<sp/>9]<sp/>=<sp/>(value<sp/>&amp;<sp/>0xFF00)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/>buffer[2]<sp/>=<sp/>buffer[10]<sp/>=<sp/>(value<sp/>&amp;<sp/>0xFF0000)<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>buffer[3]<sp/>=<sp/>buffer[11]<sp/>=<sp/>(value<sp/>&amp;<sp/>0xFF000000)<sp/>&gt;&gt;<sp/>24;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Inverse<sp/>4<sp/>bytes<sp/>also<sp/>found<sp/>in<sp/>value<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/>buffer[4]<sp/>=<sp/>~buffer[0];</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/>buffer[5]<sp/>=<sp/>~buffer[1];</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/>buffer[6]<sp/>=<sp/>~buffer[2];</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/>buffer[7]<sp/>=<sp/>~buffer[3];</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Address<sp/>2x<sp/>with<sp/>inverse<sp/>address<sp/>2x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/>buffer[12]<sp/>=<sp/>buffer[14]<sp/>=<sp/>blockAddr;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/>buffer[13]<sp/>=<sp/>buffer[15]<sp/>=<sp/>~blockAddr;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>whole<sp/>data<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" kindref="member">MIFARE_Write</ref>(blockAddr,<sp/>buffer,<sp/>16);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>MIFARE_SetValue()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="comment">//<sp/>Support<sp/>functions</highlight></codeline>
<codeline lineno="1074"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081" refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a73c639f5869b7d6c23d8c1cc5aa2178e" kindref="member">MFRC522::PCD_MIFARE_Transceive</ref>(<sp/>uint8_t<sp/>*sendData,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>sendLen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>acceptTimeout<sp/><sp/></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>uint8_t<sp/>result;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/>uint8_t<sp/>cmdBuffer[18];<sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>room<sp/>for<sp/>16<sp/>bytes<sp/>data<sp/>and<sp/>2<sp/>bytes<sp/>CRC_A.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendData<sp/>==<sp/>NULL<sp/>||<sp/>sendLen<sp/>&gt;<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" kindref="member">STATUS_INVALID</ref>;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>sendData[]<sp/>to<sp/>cmdBuffer[]<sp/>and<sp/>add<sp/>CRC_A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/>memcpy(cmdBuffer,<sp/>sendData,<sp/>sendLen);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a5db7f98b9ace325a290f0d72e12bd05b" kindref="member">PCD_CalculateCRC</ref>(cmdBuffer,<sp/>sendLen,<sp/>&amp;cmdBuffer[sendLen]);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/>sendLen<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Transceive<sp/>the<sp/>data,<sp/>store<sp/>the<sp/>reply<sp/>in<sp/>cmdBuffer[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/>uint8_t<sp/>waitIRq<sp/>=<sp/>0x30;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>RxIRq<sp/>and<sp/>IdleIRq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/>uint8_t<sp/>cmdBufferSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cmdBuffer);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>uint8_t<sp/>validBits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a366fced589c1009264d5c2410c06b03e" kindref="member">PCD_CommunicateWithPICC</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1ac7dcc49f03949baad359d102b61141f1abef11bde1e2742480aa45fb1a8f99211" kindref="member">PCD_Transceive</ref>,<sp/>waitIRq,<sp/>cmdBuffer,<sp/>sendLen,<sp/>cmdBuffer,<sp/>&amp;cmdBufferSize,<sp/>&amp;validBits);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(acceptTimeout<sp/>&amp;&amp;<sp/>result<sp/>==<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" kindref="member">STATUS_TIMEOUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>PICC<sp/>must<sp/>reply<sp/>with<sp/>a<sp/>4<sp/>bit<sp/>ACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmdBufferSize<sp/>!=<sp/>1<sp/>||<sp/>validBits<sp/>!=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" kindref="member">STATUS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmdBuffer[0]<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a3f3bd54c208c88176a1e0dff67ff41caaea67bb493542ac43ee33b3dcf32a73d3" kindref="member">MF_ACK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea991d8d22bd15cb327ce413664f43b314" kindref="member">STATUS_MIFARE_NACK</ref>;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PCD_MIFARE_Transceive()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126" refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" kindref="member">MFRC522::GetStatusCodeName</ref>(uint8_t<sp/>code<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(code)<sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Success.&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea76ceaae23d0b59f4bf067ac708e9a5d3" kindref="member">STATUS_ERROR</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>communication.&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" kindref="member">STATUS_COLLISION</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Collission<sp/>detected.&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" kindref="member">STATUS_TIMEOUT</ref>:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Timeout<sp/>in<sp/>communication.&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea55eec210026c49f46dcf883ef2ff17aa" kindref="member">STATUS_NO_ROOM</ref>:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;A<sp/>buffer<sp/>is<sp/>not<sp/>big<sp/>enough.&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1c572582a06e252ccf3cccdfdaf051b2" kindref="member">STATUS_INTERNAL_ERROR</ref>:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Internal<sp/>error<sp/>in<sp/>the<sp/>code.<sp/>Should<sp/>not<sp/>happen.&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea1627f22aa06120d8df1f7d7acb1c0b21" kindref="member">STATUS_INVALID</ref>:<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>argument.&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eac29e2590ded4d4c1d9b6e2d6ebeefb31" kindref="member">STATUS_CRC_WRONG</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;The<sp/>CRC_A<sp/>does<sp/>not<sp/>match.&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea991d8d22bd15cb327ce413664f43b314" kindref="member">STATUS_MIFARE_NACK</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;A<sp/>MIFARE<sp/>PICC<sp/>responded<sp/>with<sp/>NAK.&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>error&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>GetStatusCodeName()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147" refid="classmfrc522_1_1_m_f_r_c522_1a51d41355c15a2e3aebe43bffc2445212" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a51d41355c15a2e3aebe43bffc2445212" kindref="member">MFRC522::PICC_GetType</ref>(uint8_t<sp/>sak<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sak<sp/>&amp;<sp/>0x04)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>UID<sp/>not<sp/>complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ad18c78cf2973ca2f136bfb1ddbc31843" kindref="member">PICC_TYPE_NOT_COMPLETE</ref>;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sak)<sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x09:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" kindref="member">PICC_TYPE_MIFARE_MINI</ref>;<sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x08:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" kindref="member">PICC_TYPE_MIFARE_1K</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x18:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" kindref="member">PICC_TYPE_MIFARE_4K</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x00:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493abf543718b1dd9b3a1e067cf7b909a751" kindref="member">PICC_TYPE_MIFARE_UL</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x10:</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x11:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ac3a75d9038b6298fe8294c1d142e450c" kindref="member">PICC_TYPE_MIFARE_PLUS</ref>;<sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01:<sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a275fd46fd853ab8925afb1580ce1c3cb" kindref="member">PICC_TYPE_TNP3XXX</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sak<sp/>&amp;<sp/>0x20)<sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a97e77275960067a9507621a414d9ee77" kindref="member">PICC_TYPE_ISO_14443_4</ref>;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sak<sp/>&amp;<sp/>0x40)<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a6a7364b7bdd89dfdeb953c9d3e089d38" kindref="member">PICC_TYPE_ISO_18092</ref>;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a15db395f3889e5937b6d019b1ba4d0e7" kindref="member">PICC_TYPE_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_GetType()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179" refid="classmfrc522_1_1_m_f_r_c522_1ae32295310fef34afe04407f307e583a9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae32295310fef34afe04407f307e583a9" kindref="member">MFRC522::PICC_GetTypeName</ref>(uint8_t<sp/>piccType<sp/></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(piccType)<sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a97e77275960067a9507621a414d9ee77" kindref="member">PICC_TYPE_ISO_14443_4</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;PICC<sp/>compliant<sp/>with<sp/>ISO/IEC<sp/>14443-4&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a6a7364b7bdd89dfdeb953c9d3e089d38" kindref="member">PICC_TYPE_ISO_18092</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;PICC<sp/>compliant<sp/>with<sp/>ISO/IEC<sp/>18092<sp/>(NFC)&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" kindref="member">PICC_TYPE_MIFARE_MINI</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;MIFARE<sp/>Mini,<sp/>320<sp/>bytes&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" kindref="member">PICC_TYPE_MIFARE_1K</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;MIFARE<sp/>1KB&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" kindref="member">PICC_TYPE_MIFARE_4K</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;MIFARE<sp/>4KB&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493abf543718b1dd9b3a1e067cf7b909a751" kindref="member">PICC_TYPE_MIFARE_UL</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;MIFARE<sp/>Ultralight<sp/>or<sp/>Ultralight<sp/>C&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ac3a75d9038b6298fe8294c1d142e450c" kindref="member">PICC_TYPE_MIFARE_PLUS</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;MIFARE<sp/>Plus&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a275fd46fd853ab8925afb1580ce1c3cb" kindref="member">PICC_TYPE_TNP3XXX</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;MIFARE<sp/>TNP3XXX&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ad18c78cf2973ca2f136bfb1ddbc31843" kindref="member">PICC_TYPE_NOT_COMPLETE</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;SAK<sp/>indicates<sp/>UID<sp/>is<sp/>not<sp/>complete.&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a15db395f3889e5937b6d019b1ba4d0e7" kindref="member">PICC_TYPE_UNKNOWN</ref>:</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>type&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_GetTypeName()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1201" refid="classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a98d66dfc8460ae366a56d3762bcd278a" kindref="member">MFRC522::PICC_DumpToSerial</ref>(<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref><sp/>*uid<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key" kindref="compound">MIFARE_Key</ref><sp/>key;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>UID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Card<sp/>UID:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>-&gt;<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a3d5653ea12fd20b8c755b34cd0ea74de" kindref="member">size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>-&gt;<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a1e24dca2d0702fbb6352a41cb598a0a9" kindref="member">uidByte</ref>[i]<sp/>&lt;<sp/>0x10)</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%X&quot;</highlight><highlight class="normal">,<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>-&gt;<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a1e24dca2d0702fbb6352a41cb598a0a9" kindref="member">uidByte</ref>[i]);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>PICC<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/>uint8_t<sp/>piccType<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a51d41355c15a2e3aebe43bffc2445212" kindref="member">PICC_GetType</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>-&gt;<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid_1a765eeb2bc53a0e2a00d5842916241745" kindref="member">sak</ref>);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;PICC<sp/>type:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Serial.println(PICC_GetTypeName(piccType));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae32295310fef34afe04407f307e583a9" kindref="member">PICC_GetTypeName</ref>(piccType).c_str());</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(piccType)<sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" kindref="member">PICC_TYPE_MIFARE_MINI</ref>:</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" kindref="member">PICC_TYPE_MIFARE_1K</ref>:</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" kindref="member">PICC_TYPE_MIFARE_4K</ref>:</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>keys<sp/>are<sp/>set<sp/>to<sp/>FFFFFFFFFFFFh<sp/>at<sp/>chip<sp/>delivery<sp/>from<sp/>the<sp/>factory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>key.<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key_1aa794e440258b611c8049d4f233b38bb9" kindref="member">keyByte</ref>[i]<sp/>=<sp/>0xFF;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a" kindref="member">PICC_DumpMifareClassicToSerial</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>,<sp/>piccType,<sp/>&amp;key);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493abf543718b1dd9b3a1e067cf7b909a751" kindref="member">PICC_TYPE_MIFARE_UL</ref>:</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a4ca5c68d509a9ead4d6d551e8c10bd40" kindref="member">PICC_DumpMifareUltralightToSerial</ref>();</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a97e77275960067a9507621a414d9ee77" kindref="member">PICC_TYPE_ISO_14443_4</ref>:</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a6a7364b7bdd89dfdeb953c9d3e089d38" kindref="member">PICC_TYPE_ISO_18092</ref>:</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ac3a75d9038b6298fe8294c1d142e450c" kindref="member">PICC_TYPE_MIFARE_PLUS</ref>:</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a275fd46fd853ab8925afb1580ce1c3cb" kindref="member">PICC_TYPE_TNP3XXX</ref>:</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Dumping<sp/>memory<sp/>contents<sp/>not<sp/>implemented<sp/>for<sp/>that<sp/>PICC<sp/>type.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a15db395f3889e5937b6d019b1ba4d0e7" kindref="member">PICC_TYPE_UNKNOWN</ref>:</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ad18c78cf2973ca2f136bfb1ddbc31843" kindref="member">PICC_TYPE_NOT_COMPLETE</ref>:</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>No<sp/>memory<sp/>dump<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" kindref="member">PICC_HaltA</ref>();<sp/></highlight><highlight class="comment">//<sp/>Already<sp/>done<sp/>if<sp/>it<sp/>was<sp/>a<sp/>MIFARE<sp/>Classic<sp/>PICC.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_DumpToSerial()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259" refid="classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6a0c6040b5f66d0a37b407f11a1a531a" kindref="member">MFRC522::PICC_DumpMifareClassicToSerial</ref>(<sp/><sp/><sp/><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref><sp/>*uid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>piccType,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key" kindref="compound">MIFARE_Key</ref><sp/>*key<sp/></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/>uint8_t<sp/>no_of_sectors<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(piccType)<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a7d80d9d0a5adf15d762b9ce105bcc56e" kindref="member">PICC_TYPE_MIFARE_MINI</ref>:</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>5<sp/>sectors<sp/>*<sp/>4<sp/>blocks/sector<sp/>*<sp/>16<sp/>bytes/block<sp/>=<sp/>320<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>no_of_sectors<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493ab8e5defa66b9600f4d872c3b47276ebc" kindref="member">PICC_TYPE_MIFARE_1K</ref>:</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>16<sp/>sectors<sp/>*<sp/>4<sp/>blocks/sector<sp/>*<sp/>16<sp/>bytes/block<sp/>=<sp/>1024<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>no_of_sectors<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a09ebe345aa2d535c9a82ba4d4972f493a83a507121e0ba4b01826cfabea916d98" kindref="member">PICC_TYPE_MIFARE_4K</ref>:</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Has<sp/>(32<sp/>sectors<sp/>*<sp/>4<sp/>blocks/sector<sp/>+<sp/>8<sp/>sectors<sp/>*<sp/>16<sp/>blocks/sector)<sp/>*<sp/>16<sp/>bytes/block<sp/>=<sp/>4096<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>no_of_sectors<sp/>=<sp/>40;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>Should<sp/>not<sp/>happen.<sp/>Ignore.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>sectors,<sp/>highest<sp/>address<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(no_of_sectors)<sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Sector<sp/>Block<sp/><sp/><sp/>0<sp/><sp/>1<sp/><sp/>2<sp/><sp/>3<sp/><sp/><sp/>4<sp/><sp/>5<sp/><sp/>6<sp/><sp/>7<sp/><sp/><sp/>8<sp/><sp/>9<sp/>10<sp/>11<sp/><sp/>12<sp/>13<sp/>14<sp/>15<sp/><sp/>AccessBits\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>no_of_sectors<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b" kindref="member">PICC_DumpMifareClassicSectorToSerial</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>,<sp/>key,<sp/>i);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" kindref="member">PICC_HaltA</ref>();<sp/></highlight><highlight class="comment">//<sp/>Halt<sp/>the<sp/>PICC<sp/>before<sp/>stopping<sp/>the<sp/>encrypted<sp/>session.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b" kindref="member">PCD_StopCrypto1</ref>();</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_DumpMifareClassicToSerial()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300" refid="classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a8517bd5b6752cc42da0bb6cb0ade3e0b" kindref="member">MFRC522::PICC_DumpMifareClassicSectorToSerial</ref>(<ref refid="structmfrc522_1_1_m_f_r_c522_1_1_uid" kindref="compound">Uid</ref><sp/>*uid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key" kindref="compound">MIFARE_Key</ref><sp/>*key,<sp/></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>sector<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/>uint8_t<sp/>status;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/>uint8_t<sp/>firstBlock;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Address<sp/>of<sp/>lowest<sp/>address<sp/>to<sp/>dump<sp/>actually<sp/>last<sp/>block<sp/>dumped)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/>uint8_t<sp/>no_of_blocks;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>blocks<sp/>in<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSectorTrailer;<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>true<sp/>while<sp/>handling<sp/>the<sp/>&quot;last&quot;<sp/>(ie<sp/>highest<sp/>address)<sp/>in<sp/>the<sp/>sector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>access<sp/>bits<sp/>are<sp/>stored<sp/>in<sp/>a<sp/>peculiar<sp/>fashion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>four<sp/>groups:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g[3]<sp/><sp/><sp/><sp/>Access<sp/>bits<sp/>for<sp/>the<sp/>sector<sp/>trailer,<sp/>block<sp/>3<sp/>(for<sp/>sectors<sp/>0-31)<sp/>or<sp/>block<sp/>15<sp/>(for<sp/>sectors<sp/>32-39)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g[2]<sp/><sp/><sp/><sp/>Access<sp/>bits<sp/>for<sp/>block<sp/>2<sp/>(for<sp/>sectors<sp/>0-31)<sp/>or<sp/>blocks<sp/>10-14<sp/>(for<sp/>sectors<sp/>32-39)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g[1]<sp/><sp/><sp/><sp/>Access<sp/>bits<sp/>for<sp/>block<sp/>1<sp/>(for<sp/>sectors<sp/>0-31)<sp/>or<sp/>blocks<sp/>5-9<sp/>(for<sp/>sectors<sp/>32-39)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g[0]<sp/><sp/><sp/><sp/>Access<sp/>bits<sp/>for<sp/>block<sp/>0<sp/>(for<sp/>sectors<sp/>0-31)<sp/>or<sp/>blocks<sp/>0-4<sp/>(for<sp/>sectors<sp/>32-39)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>group<sp/>has<sp/>access<sp/>bits<sp/>[C1<sp/>C2<sp/>C3].<sp/>In<sp/>this<sp/>code<sp/>C1<sp/>is<sp/>MSB<sp/>and<sp/>C3<sp/>is<sp/>LSB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>four<sp/>CX<sp/>bits<sp/>are<sp/>stored<sp/>together<sp/>in<sp/>a<sp/>nible<sp/>cx<sp/>and<sp/>an<sp/>inverted<sp/>nible<sp/>cx_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>uint8_t<sp/>c1,<sp/>c2,<sp/>c3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nibbles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>uint8_t<sp/>c1_,<sp/>c2_,<sp/>c3_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inverted<sp/>nibbles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>invertedError;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>True<sp/>if<sp/>one<sp/>of<sp/>the<sp/>inverted<sp/>nibbles<sp/>did<sp/>not<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/>uint8_t<sp/>g[4];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Access<sp/>bits<sp/>for<sp/>each<sp/>of<sp/>the<sp/>four<sp/>groups.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/>uint8_t<sp/>group;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0-3<sp/>-<sp/>active<sp/>group<sp/>for<sp/>access<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>firstInGroup;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>True<sp/>for<sp/>the<sp/>first<sp/>block<sp/>dumped<sp/>in<sp/>the<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>position<sp/>and<sp/>size<sp/>of<sp/>sector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sector<sp/>&lt;<sp/>32)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Sectors<sp/>0..31<sp/>has<sp/>4<sp/>blocks<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>no_of_blocks<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>firstBlock<sp/>=<sp/>sector<sp/>*<sp/>no_of_blocks;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sector<sp/>&lt;<sp/>40)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Sectors<sp/>32-39<sp/>has<sp/>16<sp/>blocks<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>no_of_blocks<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>firstBlock<sp/>=<sp/>128<sp/>+<sp/>(sector<sp/>-<sp/>32)<sp/>*<sp/>no_of_blocks;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Illegal<sp/>input,<sp/>no<sp/>MIFARE<sp/>Classic<sp/>PICC<sp/>has<sp/>more<sp/>than<sp/>40<sp/>sectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>blocks,<sp/>highest<sp/>address<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/>uint8_t<sp/>byteCount;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/>uint8_t<sp/>buffer[18];</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/>uint8_t<sp/>blockAddr;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>isSectorTrailer<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>blockOffset<sp/>=<sp/>no_of_blocks<sp/>-<sp/>1;<sp/>blockOffset<sp/>&gt;=<sp/>0;<sp/>blockOffset--)<sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>blockAddr<sp/>=<sp/>firstBlock<sp/>+<sp/>blockOffset;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sector<sp/>number<sp/>-<sp/>only<sp/>on<sp/>first<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSectorTrailer)<sp/>{</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sector<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>with<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>with<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal">,sector);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Block<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(blockAddr<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>with<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(blockAddr<sp/>&lt;<sp/>100)</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>with<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>with<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal">,blockAddr);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Establish<sp/>encrypted<sp/>communications<sp/>before<sp/>reading<sp/>the<sp/>first<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSectorTrailer)<sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" kindref="member">PCD_Authenticate</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abaeb71903ba91b26195148e8b7080432" kindref="member">PICC_CMD_MF_AUTH_KEY_A</ref>,<sp/>firstBlock,<sp/>key,<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;PCD_Authenticate()<sp/>failed:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<ref refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" kindref="member">GetStatusCodeName</ref>(status).c_str());</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>byteCount<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" kindref="member">MIFARE_Read</ref>(blockAddr,<sp/>buffer,<sp/>&amp;byteCount);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;MIFARE_Read()<sp/>failed:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<ref refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" kindref="member">GetStatusCodeName</ref>(status).c_str());</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>16;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer[index]<sp/>&lt;<sp/>0x10)</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;9x%02X&quot;</highlight><highlight class="normal">,buffer[index]);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((index<sp/>%<sp/>4)<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>sector<sp/>trailer<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isSectorTrailer)<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c1<sp/><sp/>=<sp/>buffer[7]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c2<sp/><sp/>=<sp/>buffer[8]<sp/>&amp;<sp/>0xF;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c3<sp/><sp/>=<sp/>buffer[8]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c1_<sp/>=<sp/>buffer[6]<sp/>&amp;<sp/>0xF;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c2_<sp/>=<sp/>buffer[6]<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c3_<sp/>=<sp/>buffer[7]<sp/>&amp;<sp/>0xF;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>invertedError<sp/>=<sp/>(c1<sp/>!=<sp/>(~c1_<sp/>&amp;<sp/>0xF))<sp/>||<sp/>(c2<sp/>!=<sp/>(~c2_<sp/>&amp;<sp/>0xF))<sp/>||<sp/>(c3<sp/>!=<sp/>(~c3_<sp/>&amp;<sp/>0xF));</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g[0]<sp/>=<sp/>((c1<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>((c2<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>((c3<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>0);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g[1]<sp/>=<sp/>((c1<sp/>&amp;<sp/>2)<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>((c2<sp/>&amp;<sp/>2)<sp/>&lt;&lt;<sp/>0)<sp/>|<sp/>((c3<sp/>&amp;<sp/>2)<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g[2]<sp/>=<sp/>((c1<sp/>&amp;<sp/>4)<sp/>&lt;&lt;<sp/>0)<sp/>|<sp/>((c2<sp/>&amp;<sp/>4)<sp/>&gt;&gt;<sp/>1)<sp/>|<sp/>((c3<sp/>&amp;<sp/>4)<sp/>&gt;&gt;<sp/>2);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>g[3]<sp/>=<sp/>((c1<sp/>&amp;<sp/>8)<sp/>&gt;&gt;<sp/>1)<sp/>|<sp/>((c2<sp/>&amp;<sp/>8)<sp/>&gt;&gt;<sp/>2)<sp/>|<sp/>((c3<sp/>&amp;<sp/>8)<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isSectorTrailer<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Which<sp/>access<sp/>group<sp/>is<sp/>this<sp/>block<sp/>in?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(no_of_blocks<sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>group<sp/>=<sp/>blockOffset;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firstInGroup<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>group<sp/>=<sp/>blockOffset<sp/>/<sp/>5;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>firstInGroup<sp/>=<sp/>(group<sp/>==<sp/>3)<sp/>||<sp/>(group<sp/>!=<sp/>(blockOffset<sp/>+<sp/>1)<sp/>/<sp/>5);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstInGroup)<sp/>{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>access<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>[<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal"><sp/>,(g[group]<sp/>&gt;&gt;<sp/>2)<sp/>&amp;<sp/>1);<sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal">,<sp/>(g[group]<sp/>&gt;&gt;<sp/>1)<sp/>&amp;<sp/>1);<sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal">,<sp/>(g[group]<sp/>&gt;&gt;<sp/>0)<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>]<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(invertedError)<sp/>{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>Inverted<sp/>access<sp/>bits<sp/>did<sp/>not<sp/>match!<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(group<sp/>!=<sp/>3<sp/>&amp;&amp;<sp/>(g[group]<sp/>==<sp/>1<sp/>||<sp/>g[group]<sp/>==<sp/>6))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>a<sp/>sector<sp/>trailer,<sp/>a<sp/>value<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>(long(buffer[3])&lt;&lt;24)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">(buffer[2])&lt;&lt;16)<sp/>|<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">(buffer[1])&lt;&lt;8)<sp/>|<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">(buffer[0]);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>Value=&quot;</highlight><highlight class="normal">);<sp/>printf(</highlight><highlight class="stringliteral">&quot;0x%02X&quot;</highlight><highlight class="normal">,<sp/>value);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>Adr=&quot;</highlight><highlight class="normal">);<sp/>printf(</highlight><highlight class="stringliteral">&quot;0x%02X&quot;</highlight><highlight class="normal">,<sp/>buffer[12]);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_DumpMifareClassicSectorToSerial()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1448" refid="classmfrc522_1_1_m_f_r_c522_1a4ca5c68d509a9ead4d6d551e8c10bd40" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a4ca5c68d509a9ead4d6d551e8c10bd40" kindref="member">MFRC522::PICC_DumpMifareUltralightToSerial</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/>uint8_t<sp/>status;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/>uint8_t<sp/>byteCount;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/>uint8_t<sp/>buffer[18];</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/>uint8_t<sp/>i;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Page<sp/><sp/>0<sp/><sp/>1<sp/><sp/>2<sp/><sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>the<sp/>mpages<sp/>of<sp/>the<sp/>original<sp/>Ultralight.<sp/>Ultralight<sp/>C<sp/>has<sp/>more<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>page<sp/>=<sp/>0;<sp/>page<sp/>&lt;<sp/>16;<sp/>page<sp/>+=4)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Read<sp/>returns<sp/>data<sp/>for<sp/>4<sp/>pages<sp/>at<sp/>a<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>pages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>byteCount<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" kindref="member">MIFARE_Read</ref>(page,<sp/>buffer,<sp/>&amp;byteCount);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;MIFARE_Read()<sp/>failed:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<ref refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" kindref="member">GetStatusCodeName</ref>(status).c_str());</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dump<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>offset<sp/>=<sp/>0;<sp/>offset<sp/>&lt;<sp/>4;<sp/>offset++)<sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>page<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>with<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>Pad<sp/>with<sp/>spaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal">,i);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>4;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>4<sp/>*<sp/>offset<sp/>+<sp/>index;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer[i]<sp/>&lt;<sp/>0x10)</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%0x%02X&quot;</highlight><highlight class="normal">,buffer[i]);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_DumpMifareUltralightToSerial()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490" refid="classmfrc522_1_1_m_f_r_c522_1a622c5bd3b19e4093ebc774fc3a874f20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a622c5bd3b19e4093ebc774fc3a874f20" kindref="member">MFRC522::MIFARE_SetAccessBits</ref>(<sp/>uint8_t<sp/>*accessBitBuffer,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>g0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>g1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>g2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>g3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/>uint8_t<sp/>c1<sp/>=<sp/>((g3<sp/>&amp;<sp/>4)<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>((g2<sp/>&amp;<sp/>4)<sp/>&lt;&lt;<sp/>0)<sp/>|<sp/>((g1<sp/>&amp;<sp/>4)<sp/>&gt;&gt;<sp/>1)<sp/>|<sp/>((g0<sp/>&amp;<sp/>4)<sp/>&gt;&gt;<sp/>2);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/>uint8_t<sp/>c2<sp/>=<sp/>((g3<sp/>&amp;<sp/>2)<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>((g2<sp/>&amp;<sp/>2)<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>((g1<sp/>&amp;<sp/>2)<sp/>&lt;&lt;<sp/>0)<sp/>|<sp/>((g0<sp/>&amp;<sp/>2)<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>uint8_t<sp/>c3<sp/>=<sp/>((g3<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>3)<sp/>|<sp/>((g2<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>2)<sp/>|<sp/>((g1<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>((g0<sp/>&amp;<sp/>1)<sp/>&lt;&lt;<sp/>0);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>accessBitBuffer[0]<sp/>=<sp/>(~c2<sp/>&amp;<sp/>0xF)<sp/>&lt;&lt;<sp/>4<sp/>|<sp/>(~c1<sp/>&amp;<sp/>0xF);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/>accessBitBuffer[1]<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c1<sp/>&lt;&lt;<sp/>4<sp/>|<sp/>(~c3<sp/>&amp;<sp/>0xF);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/>accessBitBuffer[2]<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c3<sp/>&lt;&lt;<sp/>4<sp/>|<sp/>c2;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>MIFARE_SetAccessBits()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1517" refid="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" kindref="member">MFRC522::MIFARE_OpenUidBackdoor</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Magic<sp/>sequence:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;<sp/>50<sp/>00<sp/>57<sp/>CD<sp/>(HALT<sp/>+<sp/>CRC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;<sp/>40<sp/>(7<sp/>bits<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;<sp/>A<sp/>(4<sp/>bits<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&gt;<sp/>43</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;<sp/>A<sp/>(4<sp/>bits<sp/>only)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>you<sp/>can<sp/>write<sp/>to<sp/>sector<sp/>0<sp/>without<sp/>authenticating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1adbb992156ffda4bfc7847620921454f3" kindref="member">PICC_HaltA</ref>();<sp/></highlight><highlight class="comment">//<sp/>50<sp/>00<sp/>57<sp/>CD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/>uint8_t<sp/>cmd<sp/>=<sp/>0x40;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/>uint8_t<sp/>validBits<sp/>=<sp/>7;<sp/></highlight><highlight class="comment">/*<sp/>Our<sp/>command<sp/>is<sp/>only<sp/>7<sp/>bits.<sp/>After<sp/>receiving<sp/>card<sp/>response,</highlight></codeline>
<codeline lineno="1530"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>will<sp/>contain<sp/>amount<sp/>of<sp/>valid<sp/>response<sp/>bits.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/>uint8_t<sp/>response[32];<sp/></highlight><highlight class="comment">//<sp/>Card&apos;s<sp/>response<sp/>is<sp/>written<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/>uint8_t<sp/>received;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>uint8_t<sp/>status<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" kindref="member">PCD_TransceiveData</ref>(&amp;cmd,<sp/>(uint8_t)1,<sp/>response,<sp/>&amp;received,<sp/>&amp;validBits,<sp/>(uint8_t)0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Card<sp/>did<sp/>not<sp/>respond<sp/>to<sp/>0x40<sp/>after<sp/>HALT<sp/>command.<sp/>Are<sp/>you<sp/>sure<sp/>it<sp/>is<sp/>a<sp/>UID<sp/>changeable<sp/>one?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>name:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<ref refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" kindref="member">GetStatusCodeName</ref>(status).c_str());</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(received<sp/>!=<sp/>1<sp/>||<sp/>response[0]<sp/>!=<sp/>0x0A)<sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Got<sp/>bad<sp/>response<sp/>on<sp/>backdoor<sp/>0x40<sp/>command:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;0x%02X&quot;</highlight><highlight class="normal">,<sp/>response[0]);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal">,<sp/>validBits);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>valid<sp/>bits)\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/>cmd<sp/>=<sp/>0x43;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/>validBits<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a6ae256b84102fb140f600f452f4ef231" kindref="member">PCD_TransceiveData</ref>(&amp;cmd,<sp/>(uint8_t)1,<sp/>response,<sp/>&amp;received,<sp/>&amp;validBits,<sp/>(uint8_t)0,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>43</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(status<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>communication<sp/>at<sp/>command<sp/>0x43,<sp/>after<sp/>successfully<sp/>executing<sp/>0x40&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>name:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<ref refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" kindref="member">GetStatusCodeName</ref>(status).c_str());</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(received<sp/>!=<sp/>1<sp/>||<sp/>response[0]<sp/>!=<sp/>0x0A)<sp/>{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Got<sp/>bad<sp/>response<sp/>on<sp/>backdoor<sp/>0x43<sp/>command:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal">,response[0]);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>(&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%02X&quot;</highlight><highlight class="normal">,validBits);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>valid<sp/>bits)\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>can<sp/>now<sp/>write<sp/>to<sp/>sector<sp/>0<sp/>without<sp/>authenticating!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>MIFARE_OpenUidBackdoor()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588" refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a2f11484ff5d5ff2b70590b1c04c313fd" kindref="member">MFRC522::MIFARE_SetUid</ref>(uint8_t<sp/>*newUid,<sp/>uint8_t<sp/>uidSize,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>UID<sp/>+<sp/>BCC<sp/>byte<sp/>can<sp/>not<sp/>be<sp/>larger<sp/>than<sp/>16<sp/>together</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newUid<sp/>||<sp/>!uidSize<sp/>||<sp/>uidSize<sp/>&gt;<sp/>15)<sp/>{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;New<sp/>UID<sp/>buffer<sp/>empty,<sp/>size<sp/>0,<sp/>or<sp/>size<sp/>&gt;<sp/>15<sp/>given&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Authenticate<sp/>for<sp/>reading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><ref refid="structmfrc522_1_1_m_f_r_c522_1_1_m_i_f_a_r_e___key" kindref="compound">MIFARE_Key</ref><sp/>key<sp/>=<sp/>{0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF,<sp/>0xFF};</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>uint8_t<sp/>status<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" kindref="member">PCD_Authenticate</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abaeb71903ba91b26195148e8b7080432" kindref="member">MFRC522::PICC_CMD_MF_AUTH_KEY_A</ref>,<sp/>(uint8_t)1,<sp/>&amp;key,<sp/>&amp;<ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>==<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa9cb84ece9b715db0d27c4c019ade935" kindref="member">STATUS_TIMEOUT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>get<sp/>a<sp/>read<sp/>timeout<sp/>if<sp/>no<sp/>card<sp/>is<sp/>selected<sp/>yet,<sp/>so<sp/>let&apos;s<sp/>select<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wake<sp/>the<sp/>card<sp/>up<sp/>again<sp/>if<sp/>sleeping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>atqa_answer[2];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>atqa_size<sp/>=<sp/>2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PICC_WakeupA(atqa_answer,<sp/>&amp;atqa_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classmfrc522_1_1_m_f_r_c522_1a8b123b82f4f6dffa7a88e8b61f2806a3" kindref="member">PICC_IsNewCardPresent</ref>()<sp/>||<sp/>!<ref refid="classmfrc522_1_1_m_f_r_c522_1abc5229168077788c4ba0c67c568f479e" kindref="member">PICC_ReadCardSerial</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;No<sp/>card<sp/>was<sp/>previously<sp/>selected,<sp/>and<sp/>none<sp/>are<sp/>available.<sp/>Failed<sp/>to<sp/>set<sp/>UID.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a86a252950d51b7cca3ca72f70d8cb24c" kindref="member">PCD_Authenticate</ref>(<ref refid="classmfrc522_1_1_m_f_r_c522_1a9b3f991c32821250de1144672ebf9f40abaeb71903ba91b26195148e8b7080432" kindref="member">MFRC522::PICC_CMD_MF_AUTH_KEY_A</ref>,<sp/>(uint8_t)1,<sp/>&amp;key,<sp/>&amp;<ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>);</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>tried,<sp/>time<sp/>to<sp/>give<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>authenticate<sp/>to<sp/>card<sp/>for<sp/>reading,<sp/>could<sp/>not<sp/>set<sp/>UID:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<ref refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" kindref="member">GetStatusCodeName</ref>(status).c_str());</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;PCD_Authenticate()<sp/>failed:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<ref refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" kindref="member">GetStatusCodeName</ref>(status).c_str());</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>block<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/>uint8_t<sp/>block0_buffer[18];</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/>uint8_t<sp/>byteCount<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(block0_buffer);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a039f9df6672ed1c6b23678a374022959" kindref="member">MIFARE_Read</ref>((uint8_t)0,<sp/>block0_buffer,<sp/>&amp;byteCount);</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;MIFARE_Read()<sp/>failed:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<ref refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" kindref="member">GetStatusCodeName</ref>(status).c_str());</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Are<sp/>you<sp/>sure<sp/>your<sp/>KEY<sp/>A<sp/>for<sp/>sector<sp/>0<sp/>is<sp/>0xFFFFFFFFFFFF?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>new<sp/>UID<sp/>to<sp/>the<sp/>data<sp/>we<sp/>just<sp/>read,<sp/>and<sp/>calculate<sp/>BCC<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bcc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>uidSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>block0_buffer[i]<sp/>=<sp/>newUid[i];</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>bcc<sp/>^=<sp/>newUid[i];</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>BCC<sp/>byte<sp/>to<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/>block0_buffer[uidSize]<sp/>=<sp/>bcc;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>encrypted<sp/>traffic<sp/>so<sp/>we<sp/>can<sp/>send<sp/>raw<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a427680e47e8032e2db54eee4e551e48b" kindref="member">PCD_StopCrypto1</ref>();</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Activate<sp/>UID<sp/>backdoor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" kindref="member">MIFARE_OpenUidBackdoor</ref>(logErrors))<sp/>{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Activating<sp/>the<sp/>UID<sp/>backdoor<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>modified<sp/>block<sp/>0<sp/>back<sp/>to<sp/>card</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/>status<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" kindref="member">MIFARE_Write</ref>((uint8_t)0,<sp/>block0_buffer,<sp/>(uint8_t)16);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;MIFARE_Write()<sp/>failed:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<ref refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" kindref="member">GetStatusCodeName</ref>(status).c_str());</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wake<sp/>the<sp/>card<sp/>up<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/>uint8_t<sp/>atqa_answer[2];</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/>uint8_t<sp/>atqa_size<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1add1b450123e4670d88e0b6cb2ddca0c7" kindref="member">PICC_WakeupA</ref>(atqa_answer,<sp/>&amp;atqa_size);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690" refid="classmfrc522_1_1_m_f_r_c522_1a2ff9002344e9ee1fa0be91d2f56e1d5c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a2ff9002344e9ee1fa0be91d2f56e1d5c" kindref="member">MFRC522::MIFARE_UnbrickUidSector</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ad10ff428a8a4e48a816237093a19849a" kindref="member">MIFARE_OpenUidBackdoor</ref>(logErrors);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/>uint8_t<sp/>block0_buffer[]<sp/>=<sp/>{0x01,<sp/>0x02,<sp/>0x03,<sp/>0x04,<sp/>0x04,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00,<sp/>0x00};</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>modified<sp/>block<sp/>0<sp/>back<sp/>to<sp/>card</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/>uint8_t<sp/>status<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a50b62d0ea4b1ab35d5275227fcbfaa5f" kindref="member">MIFARE_Write</ref>((uint8_t)0,<sp/>block0_buffer,<sp/>(uint8_t)16);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>!=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logErrors)<sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;MIFARE_Write()<sp/>failed:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<ref refid="classmfrc522_1_1_m_f_r_c522_1a0c4d480120813209751676c76149585a" kindref="member">GetStatusCodeName</ref>(status).c_str());</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="comment">//<sp/>Convenience<sp/>functions<sp/>-<sp/>does<sp/>not<sp/>add<sp/>extra<sp/>functionality</highlight></codeline>
<codeline lineno="1710"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1717" refid="classmfrc522_1_1_m_f_r_c522_1a8b123b82f4f6dffa7a88e8b61f2806a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a8b123b82f4f6dffa7a88e8b61f2806a3" kindref="member">MFRC522::PICC_IsNewCardPresent</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bufferATQA[2];</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/>uint8_t<sp/>bufferSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bufferATQA);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/>uint8_t<sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a44dd708016d31efc20bd2dbdb1f67aaf" kindref="member">PICC_RequestA</ref>(bufferATQA,<sp/>&amp;bufferSize);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref><sp/>||<sp/>result<sp/>==<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9eaa7af9254cbdc5fbf97708399cba3560b" kindref="member">STATUS_COLLISION</ref>);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_IsNewCardPresent()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732" refid="classmfrc522_1_1_m_f_r_c522_1abc5229168077788c4ba0c67c568f479e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1abc5229168077788c4ba0c67c568f479e" kindref="member">MFRC522::PICC_ReadCardSerial</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/>uint8_t<sp/>result<sp/>=<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1a73adcb5681de77c62ac14b6347d909d2" kindref="member">PICC_Select</ref>(&amp;<ref refid="classmfrc522_1_1_m_f_r_c522_1a6597992fa684ba75342a587a65cbc3e5" kindref="member">uid</ref>);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/><ref refid="classmfrc522_1_1_m_f_r_c522_1ae0c9943da47bfcc78133235ab90fab9ea57045c67d26b41b679c172ec2497dd08" kindref="member">STATUS_OK</ref>);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>End<sp/>PICC_ReadCardSerial()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/dependencies/mfrc522/mfrc522.cc"/>
  </compounddef>
</doxygen>
