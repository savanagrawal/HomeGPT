<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_mood_detection_8cpp" kind="file" language="C++">
    <compoundname>MoodDetection.cpp</compoundname>
    <includes refid="_mood_detection_8h" local="yes">MoodDetection.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/mood-detection/MoodDetection.cpp</label>
        <link refid="_mood_detection_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>MoodDetection.h</label>
        <link refid="_mood_detection_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../utils/Globals.h</label>
        <link refid="_globals_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>CppTimer.h</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>opencv2/opencv.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Savan Agrawal &amp; Chinmay Nagrale </para>
</simplesect>
<simplesect kind="version"><para>0.1</para>
</simplesect>
Functions for mood detection.</para>
<para><ulink url="https://opencv.org/">https://opencv.org/</ulink> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mood_detection_8h" kindref="compound">MoodDetection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_mood_detection_1ae2d8fa4358b2105c4e862a041fddc9d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mood_detection_1ae2d8fa4358b2105c4e862a041fddc9d2" kindref="member">MoodDetection::Initialize</ref>(cv::VideoCapture<sp/>camera)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>MoodDetection::masterCamera<sp/>=<sp/>camera;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>faceCascade.load(cascadePath);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Loading<sp/>SVM<sp/>Model<sp/>file...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>MoodDetection::globals.<ref refid="class_globals_1a7e9e2b31d0484acc038684bd8aceff1a" kindref="member">setMoodSvm</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Loaded<sp/>SVM<sp/>Model<sp/>file.<sp/>Mood<sp/>detection<sp/>initialized...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>MoodDetection::svm<sp/>=<sp/>MoodDetection::globals.<ref refid="class_globals_1a6175ae15868ba84a14fd1cf1823d8dbd" kindref="member">getMoodSvm</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_mood_detection_1a90d59cfc694ff31ede33ea2dd7bdf01b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mood_detection_1a90d59cfc694ff31ede33ea2dd7bdf01b" kindref="member">MoodDetection::setCameraId</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>MoodDetection::CameraID<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_mood_detection_1a44f66eda0c282ddc24f7d804fcf74465" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_mood_detection_1a44f66eda0c282ddc24f7d804fcf74465" kindref="member">MoodDetection::checkCameraOpen</ref>(cv::VideoCapture<sp/>camera){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!camera.isOpened()){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr&lt;&lt;</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>camera<sp/>at<sp/>ID<sp/>=<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;MoodDetection::CameraID&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Camera<sp/>opened<sp/>successfully.&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/mood-detection/MoodDetection.cpp"/>
  </compounddef>
</doxygen>
