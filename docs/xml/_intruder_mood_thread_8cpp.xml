<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_intruder_mood_thread_8cpp" kind="file" language="C++">
    <compoundname>IntruderMoodThread.cpp</compoundname>
    <includes local="yes">../utils/EventHandler.h</includes>
    <includes refid="_intruder_mood_thread_8h" local="yes">IntruderMoodThread.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">thread</includes>
    <incdepgraph>
      <node id="2">
        <label>../utils/EventHandler.h</label>
      </node>
      <node id="6">
        <label>IntruderMoodDetection.h</label>
        <link refid="_intruder_mood_detection_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../CppThread.h</label>
        <link refid="_cpp_thread_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/thread/intruder-mood-detection/IntruderMoodThread.cpp</label>
        <link refid="_intruder_mood_thread_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>IntruderMoodThread.h</label>
        <link refid="_intruder_mood_thread_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>../utils/Globals.h</label>
        <link refid="_globals_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>CppTimer.h</label>
      </node>
      <node id="10">
        <label>EventHandler.h</label>
      </node>
      <node id="19">
        <label>algorithm</label>
      </node>
      <node id="18">
        <label>deque</label>
      </node>
      <node id="15">
        <label>fstream</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="17">
        <label>map</label>
      </node>
      <node id="20">
        <label>memory</label>
      </node>
      <node id="11">
        <label>opencv2/face.hpp</label>
      </node>
      <node id="9">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="21">
        <label>stdio.h</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="5">
        <label>thread</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_intruder_mood_thread_8cpp_1a60176172068ee7057c3fd49521dd0115" prot="public" static="no" strong="no">
        <type></type>
        <name>EVENT_OP_CODES</name>
        <enumvalue id="_intruder_mood_thread_8cpp_1a60176172068ee7057c3fd49521dd0115a945280aa3e9db0f24215a8d9b6ddbd8e" prot="public">
          <name>EXIT_APPLICATION</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_intruder_mood_thread_8cpp_1a60176172068ee7057c3fd49521dd0115a945280aa3e9db0f24215a8d9b6ddbd8e" prot="public">
          <name>EXIT_APPLICATION</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_intruder_mood_thread_8cpp_1a60176172068ee7057c3fd49521dd0115a945280aa3e9db0f24215a8d9b6ddbd8e" prot="public">
          <name>EXIT_APPLICATION</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_intruder_mood_thread_8cpp_1a60176172068ee7057c3fd49521dd0115a945280aa3e9db0f24215a8d9b6ddbd8e" prot="public">
          <name>EXIT_APPLICATION</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_intruder_mood_thread_8cpp_1a60176172068ee7057c3fd49521dd0115a945280aa3e9db0f24215a8d9b6ddbd8e" prot="public">
          <name>EXIT_APPLICATION</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_intruder_mood_thread_8cpp_1a60176172068ee7057c3fd49521dd0115a945280aa3e9db0f24215a8d9b6ddbd8e" prot="public">
          <name>EXIT_APPLICATION</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_intruder_mood_thread_8cpp_1a60176172068ee7057c3fd49521dd0115a945280aa3e9db0f24215a8d9b6ddbd8e" prot="public">
          <name>EXIT_APPLICATION</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_intruder_mood_thread_8cpp_1a60176172068ee7057c3fd49521dd0115a945280aa3e9db0f24215a8d9b6ddbd8e" prot="public">
          <name>EXIT_APPLICATION</name>
          <initializer>= 255</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/thread/intruder-mood-detection/IntruderMoodThread.cpp" line="18" column="1" bodyfile="src/thread/intruder-mood-detection/IntruderMoodThread.cpp" bodystart="18" bodyend="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Chinmay Nagrale &amp; Savan Agrawal </para>
</simplesect>
<simplesect kind="version"><para>0.1</para>
</simplesect>
Functions related to intruder detection thread. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;IntruderDetection.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;../../utils/Events.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../utils/EventHandler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_intruder_mood_thread_8h" kindref="compound">IntruderMoodThread.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="_intruder_mood_thread_8cpp_1a60176172068ee7057c3fd49521dd0115" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_audio_record_thread_8cpp_1a60176172068ee7057c3fd49521dd0115" kindref="member">EVENT_OP_CODES</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_intruder_mood_thread_8cpp_1a60176172068ee7057c3fd49521dd0115a945280aa3e9db0f24215a8d9b6ddbd8e" kindref="member">EXIT_APPLICATION</ref><sp/>=<sp/>255</highlight></codeline>
<codeline lineno="22" refid="_intruder_mood_thread_8cpp_1a60176172068ee7057c3fd49521dd0115a945280aa3e9db0f24215a8d9b6ddbd8e" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IntruderMoodThread::run(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Intruder<sp/>Mood<sp/>Thread...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event_handler" kindref="compound">EventHandler</ref>&amp;<sp/>eventHandler<sp/>=<sp/><ref refid="class_event_handler_1a54e992984633e36c76f7b62edfbf7604" kindref="member">EventHandler::getInstance</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eventHandler.<ref refid="class_event_handler_1aaa3013bda48eb77f9d91c0f60f063e5a" kindref="member">isEventRegistered</ref>(Event::DatasetCreatorComplete))<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>something<sp/>if<sp/>the<sp/>event<sp/>is<sp/>registered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout&lt;&lt;&quot;Not<sp/>Reg&quot;&lt;&lt;std::endl<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout&lt;&lt;&quot;Reg&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>eventHandler.addListener(Event::DatasetCreatorComplete,<sp/>[&amp;]()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>datasetCreator.stop();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>datasetTrainer.Initialize();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>datasetTrainer.generateModel();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>eventHandler.emit(Event::DatasetTrainerComplete);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eventHandler.addListener(Event::DatasetTrainerComplete,<sp/>[&amp;]()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>eventHandler.emit(Event::IntruderMoodThreadKill);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>});</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>intruderMoodDetection.<ref refid="class_intruder_mood_detection_1a00ea796d16ff36f9bd3145b6f6eeb0de" kindref="member">Initialize</ref>(IntruderMoodThread::camera);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>intruderMoodDetection.<ref refid="class_intruder_mood_detection_1acd6daec24bb0d856325a912a92936a93" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>switch<sp/>(IntruderMoodThread::modules.at(IntruderMoodThread::module))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>case<sp/>1:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>std::cout&lt;&lt;&quot;Not<sp/>Reg&quot;&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intruderMoodDetection.Initialize(IntruderMoodThread::camera);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intruderMoodDetection.startms(100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>default:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intruderMoodDetection.Initialize(IntruderMoodThread::camera);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intruderMoodDetection.startms(100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/thread/intruder-mood-detection/IntruderMoodThread.cpp"/>
  </compounddef>
</doxygen>
